- name: Manage A10 Networks AX/SoftAX/Thunder/vThunder devices
  action: a10_server
      host=                  # hostname or ip of your A10 Networks device
      password=              # admin password of your A10 Networks device
      server_ip              # slb server IP address
      server_name=           # slb server name
      server_ports           # A list of ports to create for the server. Each
                               list item should
                               be a dictionary
                               which specifies
                               the `port:' and
                               `protocol:', but
                               can also
                               optionally
                               specify the
                               `status:'. See
                               the examples
                               below for
                               details. This
                               parameter is
                               required when
                               `state' is
                               `present'.
      server_status          # slb virtual server status
      state                  # create, update or remove slb server
      username=              # admin account of your A10 Networks device
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be used on
                               personally
                               controlled
                               devices using
                               self-signed
                               certificates.
      write_config           # If `yes', any changes will cause a write of the
                               running
                               configuration to
                               non-volatile
                               memory. This will
                               save `all'
                               configuration
                               changes,
                               including those
                               that may have
                               been made
                               manually or
                               through other
                               modules, so care
                               should be taken
                               when specifying
                               `yes'.
- name: Manage A10 Networks devices' service groups
  action: a10_service_group
      host=                  # hostname or ip of your A10 Networks device
      password=              # admin password of your A10 Networks device
      servers                # A list of servers to add to the service group.
                               Each list item
                               should be a
                               dictionary which
                               specifies the
                               `server:' and
                               `port:', but can
                               also optionally
                               specify the
                               `status:'. See
                               the examples
                               below for
                               details.
      service_group=         # slb service-group name
      service_group_method   # slb service-group loadbalancing method
      service_group_protocol   # slb service-group protocol
      username=              # admin account of your A10 Networks device
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be used on
                               personally
                               controlled
                               devices using
                               self-signed
                               certificates.
      write_config           # If `yes', any changes will cause a write of the
                               running
                               configuration to
                               non-volatile
                               memory. This will
                               save `all'
                               configuration
                               changes,
                               including those
                               that may have
                               been made
                               manually or
                               through other
                               modules, so care
                               should be taken
                               when specifying
                               `yes'.
- name: Manage A10 Networks devices' virtual servers
  action: a10_virtual_server
      host=                  # hostname or ip of your A10 Networks device
      password=              # admin password of your A10 Networks device
      username=              # admin account of your A10 Networks device
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be used on
                               personally
                               controlled
                               devices using
                               self-signed
                               certificates.
      virtual_server=        # slb virtual server name
      virtual_server_ip      # slb virtual server ip address
      virtual_server_ports   # A list of ports to create for the virtual
                               server. Each list
                               item should be a
                               dictionary which
                               specifies the
                               `port:' and
                               `type:', but can
                               also optionally
                               specify the
                               `service_group:'
                               as well as the
                               `status:'. See
                               the examples
                               below for
                               details. This
                               parameter is
                               required when
                               `state' is
                               `present'.
      virtual_server_status   # slb virtual server status
      write_config           # If `yes', any changes will cause a write of the
                               running
                               configuration to
                               non-volatile
                               memory. This will
                               save `all'
                               configuration
                               changes,
                               including those
                               that may have
                               been made
                               manually or
                               through other
                               modules, so care
                               should be taken
                               when specifying
                               `yes'.
- name: Sets and retrieves file ACL information.
  action: acl
      default                # if the target is a directory, setting this to
                               yes will make it
                               the default acl
                               for entities
                               created inside
                               the directory. It
                               causes an error
                               if name is a
                               file.
      entity                 # actual user or group that the ACL applies to
                               when matching
                               entity types user
                               or group are
                               selected.
      entry                  # DEPRECATED. The acl to set or remove.  This must
                               always be quoted
                               in the form of '<
                               etype>:<qualifier
                               >:<perms>'.  The
                               qualifier may be
                               empty for some
                               types, but the
                               type and perms
                               are always
                               required. '-' can
                               be used as
                               placeholder when
                               you do not care
                               about
                               permissions. This
                               is now superseded
                               by entity, type
                               and permissions
                               fields.
      etype                  # the entity type of the ACL to apply, see setfacl
                               documentation for
                               more info.
      follow                 # whether to follow symlinks on the path if a
                               symlink is
                               encountered.
      name=                  # The full path of the file or object.
      permissions            # Permissions to apply/remove can be any
                               combination of r,
                               w and  x (read,
                               write and execute
                               respectively)
      recursive              # Recursively sets the specified ACL (added in
                               Ansible 2.0).
                               Incompatible with
                               `state=query'.
      state                  # defines whether the ACL should be present or
                               not.  The `query'
                               state gets the
                               current acl
                               without changing
                               it, for use in
                               'register'
                               operations.
- name: add a host (and alternatively a group) to the ansible-playbook in-memory inventory
  action: add_host
      groups                 # The groups to add the hostname to, comma
                               separated.
      name=                  # The hostname/ip of the host to add to the
                               inventory, can
                               include a colon
                               and a port
                               number.
- name: Notify airbrake about app deployments
  action: airbrake_deployment
      environment=           # The airbrake environment name, typically
                               'production',
                               'staging', etc.
      repo                   # URL of the project repository
      revision               # A hash, number, tag, or other identifier showing
                               what revision was
                               deployed
      token=                 # API token.
      url                    # Optional URL to submit the notification to. Use
                               to send
                               notifications to
                               Airbrake-
                               compliant tools
                               like Errbit.
      user                   # The username of the person doing the deployment
      validate_certs         # If `no', SSL certificates for the target url
                               will not be
                               validated. This
                               should only be
                               used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
- name: Manages alternative programs for common commands
  action: alternatives
      link                   # The path to the symbolic link that should point
                               to the real
                               executable. This
                               option is
                               required on RHEL-
                               based
                               distributions
      name=                  # The generic name of the link.
      path=                  # The path to the real executable that the link
                               should point to.
      priority               # The priority of the alternative
- name: Set and/or get members' attributes of an Apache httpd 2.4 mod_proxy balancer pool
  action: apache2_mod_proxy
      balancer_url_suffix    # Suffix of the balancer pool url required to
                               access the
                               balancer pool
                               status page (e.g.
                               balancer_vhost[:p
                               ort]/balancer_url
                               _suffix).
      balancer_vhost=        # (ipv4|ipv6|fqdn):port of the Apache httpd 2.4
                               mod_proxy
                               balancer pool.
      member_host            # (ipv4|ipv6|fqdn) of the balancer member to get
                               or to set
                               attributes to.
                               Port number is
                               autodetected and
                               should not be
                               specified here.
                               If undefined,
                               apache2_mod_proxy
                               module will
                               return a members
                               list of
                               dictionaries of
                               all the current
                               balancer pool
                               members'
                               attributes.
      state                  # Desired state of the member host. (absent|disabl
                               ed),drained,hot_s
                               tandby,ignore_err
                               ors can be
                               simultaneously
                               invoked by
                               separating them
                               with a comma
                               (e.g. state=drain
                               ed,ignore_errors)
                               .
      tls                    # Use https to access balancer management page.
      validate_certs         # Validate ssl/tls certificates.
- name: enables/disables a module of the Apache2 webserver
  action: apache2_module
      force                  # force disabling of default modules and override
                               Debian warnings
      name=                  # name of the module to enable/disable
      state                  # indicate the desired state of the resource
- name: Manages apk packages
  action: apk
      name                   # A package name, like `foo', or mutliple
                               packages, like
                               `foo, bar'.
      state                  # Indicates the desired package(s) state.
                               `present' ensures
                               the package(s)
                               is/are present.
                               `absent' ensures
                               the package(s)
                               is/are absent.
                               `latest' ensures
                               the package(s)
                               is/are present
                               and the latest
                               version(s).
      update_cache           # Update repository indexes. Can be run with other
                               steps or on it's
                               own.
      upgrade                # Upgrade all installed packages to their latest
                               version.
- name: Manages apt-packages
  action: apt
      allow_unauthenticated   # Ignore if packages cannot be authenticated. This
                               is useful for
                               bootstrapping
                               environments that
                               manage their own
                               apt-key setup.
      autoremove             # If `yes', remove unused dependency packages for
                               all module states
                               except `build-
                               dep'.
      cache_valid_time       # Update the apt cache if its older than the
                               `cache_valid_time
                               '. This option is
                               set in seconds.
      deb                    # Path to a .deb package on the remote machine. If
                               :// in the path,
                               ansible will
                               attempt to
                               download deb
                               before
                               installing.
                               (Version added
                               2.1)
      default_release        # Corresponds to the `-t' option for `apt' and
                               sets pin
                               priorities
      dpkg_options           # Add dpkg options to apt command. Defaults to '-o
                               "Dpkg::Options
                               ::=--force-
                               confdef" -o
                               "Dpkg::Options
                               ::=--force-
                               confold"' Options
                               should be
                               supplied as comma
                               separated list
      force                  # If `yes', force installs/removes.
      install_recommends     # Corresponds to the `--no-install-recommends'
                               option for `apt'.
                               `yes' installs
                               recommended
                               packages.  `no'
                               does not install
                               recommended
                               packages. By
                               default, Ansible
                               will use the same
                               defaults as the
                               operating system.
                               Suggested
                               packages are
                               never installed.
      name                   # A package name, like `foo', or package specifier
                               with version,
                               like `foo=1.0'.
                               Name wildcards
                               (fnmatch) like
                               `apt*' and
                               version wildcards
                               like `foo=1.0*'
                               are also
                               supported.  Note
                               that the apt-get
                               commandline
                               supports implicit
                               regex matches
                               here but we do
                               not because it
                               can let typos
                               through easier
                               (If you typo
                               `foo' as `fo'
                               apt-get would
                               install packages
                               that have "fo" in
                               their name with a
                               warning and a
                               prompt for the
                               user.  Since we
                               don't have
                               warnings and
                               prompts before
                               installing we
                               disallow this.
                               Use an explicit
                               fnmatch pattern
                               if you want
                               wildcarding)
      only_upgrade           # Only install/upgrade a package if it is already
                               installed.
      purge                  # Will force purging of configuration files if the
                               module state is
                               set to `absent'.
      state                  # Indicates the desired package state. `latest'
                               ensures that the
                               latest version is
                               installed.
                               `build-dep'
                               ensures the
                               package build
                               dependencies are
                               installed.
      update_cache           # Run the equivalent of `apt-get update' before
                               the operation.
                               Can be run as
                               part of the
                               package
                               installation or
                               as a separate
                               step.
      upgrade                # If yes or safe, performs an aptitude safe-
                               upgrade. If full,
                               performs an
                               aptitude full-
                               upgrade. If dist,
                               performs an apt-
                               get dist-upgrade.
                               Note: This does
                               not upgrade a
                               specific package,
                               use state=latest
                               for that.
- name: Add or remove an apt key
  action: apt_key
      data                   # keyfile contents to add to the keyring
      file                   # path to a keyfile to add to the keyring
      id                     # identifier of key. Including this allows check
                               mode to correctly
                               report the
                               changed state. If
                               specifying a
                               subkey's id be
                               aware that apt-
                               key does not
                               understand how to
                               remove keys via a
                               subkey id.
                               Specify the
                               primary key's id
                               instead.
      keyring                # path to specific keyring file in
                               /etc/apt/trusted.
                               gpg.d
      keyserver              # keyserver to retrieve key from.
      state                  # used to specify if key is being added or revoked
      url                    # url to retrieve key from.
      validate_certs         # If `no', SSL certificates for the target url
                               will not be
                               validated. This
                               should only be
                               used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
- name: Add and remove APT repositories
  action: apt_repository
      filename               # Sets the name of the source list file in
                               sources.list.d.
                               Defaults to a
                               file name based
                               on the repository
                               source url. The
                               .list extension
                               will be
                               automatically
                               added.
      mode                   # The octal mode for newly created files in
                               sources.list.d
      repo=                  # A source string for the repository.
      state                  # A source string state.
      update_cache           # Run the equivalent of `apt-get update' when a
                               change occurs.
                               Cache updates are
                               run after making
                               changes.
      validate_certs         # If `no', SSL certificates for the target repo
                               will not be
                               validated. This
                               should only be
                               used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
- name: apt_rpm package manager
  action: apt_rpm
      pkg=                   # name of package to install, upgrade or remove.
      state                  # Indicates the desired package state
      update_cache           # update the package database first `apt-get
                               update'.
- name: Manage access-lists on a Cisco ASA
  action: asa_acl
      after                  # The ordered set of commands to append to the end
                               of the command
                               stack if a
                               changed needs to
                               be made.  Just
                               like with
                               `before' this
                               allows the
                               playbook designer
                               to append a set
                               of commands to be
                               executed after
                               the command set.
      auth_pass              # Specifies the password to use if required to
                               enter privileged
                               mode on the
                               remote device.
                               If `authorize' is
                               false, then this
                               argument does
                               nothing. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_AUTH_PASS'
                               will be used
                               instead.
      authorize              # Instructs the module to enter privileged mode on
                               the remote device
                               before sending
                               any commands.  If
                               not specified,
                               the device will
                               attempt to
                               execute all
                               commands in non-
                               privileged mode.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_AUTHORIZE'
                               will be used
                               instead.
      before                 # The ordered set of commands to push on to the
                               command stack if
                               a change needs to
                               be made.  This
                               allows the
                               playbook designer
                               the opportunity
                               to perform
                               configuration
                               commands prior to
                               pushing any
                               changes without
                               affecting how the
                               set of commands
                               are matched
                               against the
                               system.
      config                 # The module, by default, will connect to the
                               remote device and
                               retrieve the
                               current running-
                               config to use as
                               a base for
                               comparing against
                               the contents of
                               source.  There
                               are times when it
                               is not desirable
                               to have the task
                               get the current
                               running-config
                               for every task in
                               a playbook.  The
                               `config' argument
                               allows the
                               implementer to
                               pass in the
                               configuruation to
                               use as the base
                               config for
                               comparision.
      context                # Specifies which context to target if you are
                               running in the
                               ASA in multiple
                               context mode.
                               Defaults to the
                               current context
                               you login to.
      force                  # The force argument instructs the module to not
                               consider the
                               current devices
                               running-config.
                               When set to true,
                               this will cause
                               the module to
                               push the contents
                               of `src' into the
                               device without
                               first checking if
                               already
                               configured.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      lines=                 # The ordered set of commands that should be
                               configured in the
                               section.  The
                               commands must be
                               the exact same
                               commands as found
                               in the device
                               running-config.
                               Be sure to note
                               the configuration
                               command syntax as
                               some commands are
                               automatically
                               modified by the
                               device config
                               parser.
      match                  # Instructs the module on the way to perform the
                               matching of the
                               set of commands
                               against the
                               current device
                               config.  If match
                               is set to `line',
                               commands are
                               matched line by
                               line.  If match
                               is set to
                               `strict', command
                               lines are matched
                               with respect to
                               position.
                               Finally if match
                               is set to
                               `exact', command
                               lines must be an
                               equal match.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.   The
                               value of
                               `password' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               The port value
                               will default to
                               the well known
                               SSH port of 22
      provider               # Convenience method that allows all `ios'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      replace                # Instructs the module on the way to perform the
                               configuration on
                               the device.  If
                               the replace
                               argument is set
                               to `line' then
                               the modified
                               lines are pushed
                               to the device in
                               configuration
                               mode.  If the
                               replace argument
                               is set to `block'
                               then the entire
                               command block is
                               pushed to the
                               device in
                               configuration
                               mode if any line
                               is not correct.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               The value of
                               `ssh_keyfile' is
                               the path to the
                               key used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      timeout                # Specifies idle timeout for the connection.
                               Useful if the
                               console freezes
                               before
                               continuing. For
                               example when
                               saving
                               configurations.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Run arbitrary commands on Cisco ASA devices.
  action: asa_command
      auth_pass              # Specifies the password to use if required to
                               enter privileged
                               mode on the
                               remote device.
                               If `authorize' is
                               false, then this
                               argument does
                               nothing. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_AUTH_PASS'
                               will be used
                               instead.
      authorize              # Instructs the module to enter privileged mode on
                               the remote device
                               before sending
                               any commands.  If
                               not specified,
                               the device will
                               attempt to
                               execute all
                               commands in non-
                               privileged mode.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_AUTHORIZE'
                               will be used
                               instead.
      commands=              # List of commands to send to the remote device
                               over the
                               configured
                               provider. The
                               resulting output
                               from the command
                               is returned. If
                               the `wait_for'
                               argument is
                               provided, the
                               module is not
                               returned until
                               the condition is
                               satisfied or the
                               number of retires
                               as expired.
      context                # Specifies which context to target if you are
                               running in the
                               ASA in multiple
                               context mode.
                               Defaults to the
                               current context
                               you login to.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      interval               # Configures the interval in seconds to wait
                               between retries
                               of the command.
                               If the command
                               does not pass the
                               specified
                               conditions, the
                               interval
                               indicates how
                               long to wait
                               before trying the
                               command again.
      match                  # The `match' argument is used in conjunction with
                               the `wait_for'
                               argument to
                               specify the match
                               policy.  Valid
                               values are `all'
                               or `any'.  If the
                               value is set to
                               `all' then all
                               conditionals in
                               the wait_for must
                               be satisfied.  If
                               the value is set
                               to `any' then
                               only one of the
                               values must be
                               satisfied.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.   The
                               value of
                               `password' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               The port value
                               will default to
                               the well known
                               SSH port of 22
      provider               # Convenience method that allows all `ios'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      retries                # Specifies the number of retries a command should
                               by tried before
                               it is considered
                               failed. The
                               command is run on
                               the target device
                               every retry and
                               evaluated against
                               the `wait_for'
                               conditions.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               The value of
                               `ssh_keyfile' is
                               the path to the
                               key used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      timeout                # Specifies idle timeout for the connection.
                               Useful if the
                               console freezes
                               before
                               continuing. For
                               example when
                               saving
                               configurations.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
      wait_for               # List of conditions to evaluate against the
                               output of the
                               command. The task
                               will wait for
                               each condition to
                               be true before
                               moving forward.
                               If the
                               conditional is
                               not true within
                               the configured
                               number of
                               retries, the task
                               fails. See
                               examples.
- name: Manage Cisco ASA configuration sections
  action: asa_config
      after                  # The ordered set of commands to append to the end
                               of the command
                               stack if a change
                               needs to be made.
                               Just like with
                               `before' this
                               allows the
                               playbook designer
                               to append a set
                               of commands to be
                               executed after
                               the command set.
      auth_pass              # Specifies the password to use if required to
                               enter privileged
                               mode on the
                               remote device.
                               If `authorize' is
                               false, then this
                               argument does
                               nothing. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_AUTH_PASS'
                               will be used
                               instead.
      authorize              # Instructs the module to enter privileged mode on
                               the remote device
                               before sending
                               any commands.  If
                               not specified,
                               the device will
                               attempt to
                               execute all
                               commands in non-
                               privileged mode.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_AUTHORIZE'
                               will be used
                               instead.
      backup                 # This argument will cause the module to create a
                               full backup of
                               the current
                               `running-config'
                               from the remote
                               device before any
                               changes are made.
                               The backup file
                               is written to the
                               `backup' folder
                               in the playbook
                               root directory.
                               If the directory
                               does not exist,
                               it is created.
      before                 # The ordered set of commands to push on to the
                               command stack if
                               a change needs to
                               be made.  This
                               allows the
                               playbook designer
                               the opportunity
                               to perform
                               configuration
                               commands prior to
                               pushing any
                               changes without
                               affecting how the
                               set of commands
                               are matched
                               against the
                               system
      commit                 # This argument specifies the update method to use
                               when applying the
                               configuration
                               changes to the
                               remote node.  If
                               the value is set
                               to `merge' the
                               configuration
                               updates are
                               merged with the
                               running- config.
                               If the value is
                               set to `check',
                               no changes are
                               made to the
                               remote host.
      config                 # The `config' argument allows the playbook
                               designer to
                               supply the base
                               configuration to
                               be used to
                               validate
                               configuration
                               changes
                               necessary.  If
                               this argument is
                               provided, the
                               module will not
                               download the
                               running-config
                               from the remote
                               node.
      context                # Specifies which context to target if you are
                               running in the
                               ASA in multiple
                               context mode.
                               Defaults to the
                               current context
                               you login to.
      defaults               # This argument specifies whether or not to
                               collect all
                               defaults when
                               getting the
                               remote device
                               running config.
                               When enabled, the
                               module will get
                               the current
                               config by issuing
                               the command `show
                               running-config
                               all'.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      lines                  # The ordered set of commands that should be
                               configured in the
                               section.  The
                               commands must be
                               the exact same
                               commands as found
                               in the device
                               running-config.
                               Be sure to note
                               the configuration
                               command syntax as
                               some commands are
                               automatically
                               modified by the
                               device config
                               parser.
      match                  # Instructs the module on the way to perform the
                               matching of the
                               set of commands
                               against the
                               current device
                               config.  If match
                               is set to `line',
                               commands are
                               matched line by
                               line.  If match
                               is set to
                               `strict', command
                               lines are matched
                               with respect to
                               position.  If
                               match is set to
                               `exact', command
                               lines must be an
                               equal match.
                               Finally, if match
                               is set to `none',
                               the module will
                               not attempt to
                               compare the
                               source
                               configuration
                               with the running
                               configuration on
                               the remote
                               device.
      parents                # The ordered set of parents that uniquely
                               identify the
                               section the
                               commands should
                               be checked
                               against.  If the
                               parents argument
                               is omitted, the
                               commands are
                               checked against
                               the set of top
                               level or global
                               commands.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.   The
                               value of
                               `password' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      passwords              # This argument specifies to include passwords in
                               the config when
                               retrieving the
                               running-config
                               from the remote
                               device.  This
                               includes
                               passwords related
                               to VPN endpoints.
                               This argument is
                               mutually
                               exclusive with
                               `defaults'.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               The port value
                               will default to
                               the well known
                               SSH port of 22
      provider               # Convenience method that allows all `ios'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      replace                # Instructs the module on the way to perform the
                               configuration on
                               the device.  If
                               the replace
                               argument is set
                               to `line' then
                               the modified
                               lines are pushed
                               to the device in
                               configuration
                               mode.  If the
                               replace argument
                               is set to `block'
                               then the entire
                               command block is
                               pushed to the
                               device in
                               configuration
                               mode if any line
                               is not correct
      save                   # The `save' argument instructs the module to save
                               the running-
                               config to the
                               startup-config at
                               the conclusion of
                               the module
                               running.  If
                               check mode is
                               specified, this
                               argument is
                               ignored.
      src                    # Specifies the source path to the file that
                               contains the
                               configuration or
                               configuration
                               template to load.
                               The path to the
                               source file can
                               either be the
                               full path on the
                               Ansible control
                               host or a
                               relative path
                               from the playbook
                               or role root
                               directory.  This
                               argument is
                               mutually
                               exclusive with
                               `lines'.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               The value of
                               `ssh_keyfile' is
                               the path to the
                               key used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      timeout                # Specifies idle timeout for the connection.
                               Useful if the
                               console freezes
                               before
                               continuing. For
                               example when
                               saving
                               configurations.
      update                 # The `update' argument controls how the
                               configuration
                               statements are
                               processed on the
                               remote device.
                               Valid choices for
                               the `update'
                               argument are
                               `merge' and
                               `check'.  When
                               the argument is
                               set to `merge',
                               the configuration
                               changes are
                               merged with the
                               current device
                               running
                               configuration.
                               When the argument
                               is set to `check'
                               the configuration
                               updates are
                               determined but
                               not actually
                               configured on the
                               remote device.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Assembles a configuration file from fragments
  action: assemble
      backup                 # Create a backup file (if `yes'), including the
                               timestamp
                               information so
                               you can get the
                               original file
                               back if you
                               somehow clobbered
                               it incorrectly.
      delimiter              # A delimiter to separate the file contents.
      dest=                  # A file to create using the concatenation of all
                               of the source
                               files.
      group                  # name of the group that should own the
                               file/directory,
                               as would be fed
                               to `chown'
      ignore_hidden          # A boolean that controls if files that start with
                               a '.' will be
                               included or not.
      mode                   # mode the file or directory should be. For those
                               used to
                               `/usr/bin/chmod'
                               remember that
                               modes are
                               actually octal
                               numbers (like
                               0644). Leaving
                               off the leading
                               zero will likely
                               have unexpected
                               results. As of
                               version 1.8, the
                               mode may be
                               specified as a
                               symbolic mode
                               (for example,
                               `u+rwx' or
                               `u=rw,g=r,o=r').
      owner                  # name of the user that should own the
                               file/directory,
                               as would be fed
                               to `chown'
      regexp                 # Assemble files only if `regex' matches the
                               filename. If not
                               set, all files
                               are assembled.
                               All "\"
                               (backslash) must
                               be escaped as
                               "\\" to comply
                               yaml syntax. Uses
                               Python regular
                               expressions; see 
                               http://docs.pytho
                               n.org/2/library/r
                               e.html.
      remote_src             # If False, it will search for src at
                               originating/maste
                               r machine, if
                               True it will go
                               to the
                               remote/target
                               machine for the
                               src. Default is
                               True.
      selevel                # level part of the SELinux file context. This is
                               the MLS/MCS
                               attribute,
                               sometimes known
                               as the `range'.
                               `_default'
                               feature works as
                               for `seuser'.
      serole                 # role part of SELinux file context, `_default'
                               feature works as
                               for `seuser'.
      setype                 # type part of SELinux file context, `_default'
                               feature works as
                               for `seuser'.
      seuser                 # user part of SELinux file context. Will default
                               to system policy,
                               if applicable. If
                               set to
                               `_default', it
                               will use the
                               `user' portion of
                               the policy if
                               available
      src=                   # An already existing directory full of source
                               files.
      unsafe_writes          # Normally this module uses atomic operations to
                               prevent data
                               corruption or
                               inconsistent
                               reads from the
                               target files,
                               sometimes systems
                               are configured or
                               just broken in
                               ways that prevent
                               this. One example
                               are docker
                               mounted files,
                               they cannot be
                               updated
                               atomically and
                               can only be done
                               in an unsafe
                               manner. This
                               boolean option
                               allows ansible to
                               fall back to
                               unsafe methods of
                               updating files
                               for those cases
                               in which you do
                               not have any
                               other choice. Be
                               aware that this
                               is subject to
                               race conditions
                               and can lead to
                               data corruption.
      validate               # The validation command to run before copying
                               into place.  The
                               path to the file
                               to validate is
                               passed in via
                               '%s' which must
                               be present as in
                               the sshd example
                               below. The
                               command is passed
                               securely so shell
                               features like
                               expansion and
                               pipes won't work.
- name: Asserts given expressions are true
  action: assert
      msg                    # The customized message used for a failing
                               assertion
      that=                  # A string expression of the same form that can be
                               passed to the
                               'when' statement
                               Alternatively, a
                               list of string
                               expressions
- name: Obtain status of asynchronous task
  action: async_status
      jid=                   # Job or task identifier
      mode                   # if `status', obtain the status; if `cleanup',
                               clean up the
                               async job cache
                               located in `~/.an
                               sible_async/' for
                               the specified job
                               `jid'.
- name: Schedule the execution of a command or script file via the at command.
  action: at
      command                # A command to be executed in the future.
      count=                 # The count of units in the future to execute the
                               command or script
                               file.
      script_file            # An existing script file to be executed in the
                               future.
      state                  # The state dictates if the command or script file
                               should be
                               evaluated as
                               present(added) or
                               absent(deleted).
      unique                 # If a matching job is present a new job will not
                               be added.
      units=                 # The type of units in the future to execute the
                               command or script
                               file.
- name: Manage the atomic host platform
  action: atomic_host
      revision               # The version number of the atomic host to be
                               deployed.
                               Providing
                               ```latest``` will
                               upgrade to the
                               latest available
                               version.
- name: Manage the container images on the atomic host platform
  action: atomic_image
      name=                  # Name of the container image
      started                # Start or Stop the continer
      state                  # The state of the container image. The state
                               ```latest``` will
                               ensure container
                               image is upgraded
                               to the latest
                               version and
                               forcefully
                               restart
                               container, if
                               running.
- name: Adds or removes an SSH authorized key
  action: authorized_key
      exclusive              # Whether to remove all other non-specified keys
                               from the
                               authorized_keys
                               file. Multiple
                               keys can be
                               specified in a
                               single `key'
                               string value by
                               separating them
                               by newlines. This
                               option is not
                               loop aware, so if
                               you use `with_' ,
                               it will be
                               exclusive per
                               iteration of the
                               loop, if you want
                               multiple keys in
                               the file you need
                               to pass them all
                               to `key' in a
                               single batch as
                               mentioned above.
      key=                   # The SSH public key(s), as a string or (since
                               1.9) url (https:/
                               /github.com/usern
                               ame.keys)
      key_options            # A string of ssh key options to be prepended to
                               the key in the
                               authorized_keys
                               file
      manage_dir             # Whether this module should manage the directory
                               of the authorized
                               key file.  If
                               set, the module
                               will create the
                               directory, as
                               well as set the
                               owner and
                               permissions of an
                               existing
                               directory. Be
                               sure to set
                               `manage_dir=no'
                               if you are using
                               an alternate
                               directory for
                               authorized_keys,
                               as set with
                               `path', since you
                               could lock
                               yourself out of
                               SSH access. See
                               the example
                               below.
      path                   # Alternate path to the authorized_keys file
      state                  # Whether the given key (with the given
                               key_options)
                               should or should
                               not be in the
                               file
      user=                  # The username on the remote host whose
                               authorized_keys
                               file will be
                               modified
      validate_certs         # This only applies if using a https url as the
                               source of the
                               keys. If set to
                               `no', the SSL
                               certificates will
                               not be validated.
                               This should only
                               set to `no' used
                               on personally
                               controlled sites
                               using self-signed
                               certificates as
                               it avoids
                               verifying the
                               source site.
                               Prior to 2.1 the
                               code worked as if
                               this was set to
                               `yes'.
- name: create or terminate a virtual machine in azure
  action: azure
      auto_updates           # Enable Auto Updates on Windows Machines
      enable_winrm           # Enable winrm on Windows Machines
      endpoints              # a comma-separated list of TCP ports to expose on
                               the virtual
                               machine (e.g.,
                               "22,80")
      hostname               # hostname to write /etc/hostname. Defaults to
                               <name>.cloudapp.n
                               et.
      image=                 # system image for creating the virtual machine
                               (e.g., b39f27a8b8
                               c64d52b05eac6a62e
                               bad85__Ubuntu_DAI
                               LY_BUILD-precise-
                               12_04_3-LTS-amd64
                               -server-20131205
                               -en-us-30GB)
      location=              # the azure location to use (e.g. 'East US')
      management_cert_path   # path to an azure management certificate
                               associated with
                               the subscription
                               id. Overrides the
                               AZURE_CERT_PATH
                               environment
                               variable.
      name=                  # name of the virtual machine and associated cloud
                               service.
      os_type                # The type of the os that is gettings provisioned
      password               # the unix password for the new virtual machine.
      role_size              # azure role size for the new virtual machine
                               (e.g., Small,
                               ExtraLarge, A6).
                               You have to pay
                               attention to the
                               fact that
                               instances of type
                               G and DS are not
                               available in all
                               regions
                               (locations). Make
                               sure if you
                               selected the size
                               and type of
                               instance
                               available in your
                               chosen location.
      ssh_cert_path          # path to an X509 certificate containing the
                               public ssh key to
                               install in the
                               virtual machine.
                               See http://www.wi
                               ndowsazure.com
                               /en-us/manage/lin
                               ux/tutorials
                               /intro-to-linux/
                               for more details.
                               if this option is
                               specified,
                               password-based
                               ssh
                               authentication
                               will be disabled.
      state                  # create or terminate instances
      storage_account=       # the azure storage account in which to store the
                               data disks.
      subscription_id        # azure subscription id. Overrides the
                               AZURE_SUBSCRIPTIO
                               N_ID environment
                               variable.
      user                   # the unix username for the new virtual machine.
      virtual_network_name   # Name of virtual network.
      wait                   # wait for the instance to be in state 'running'
                               before returning
      wait_timeout           # how long before wait gives up, in seconds
      wait_timeout_redirects   # how long before wait gives up for redirects, in
                               seconds
- name: Create or destroy Azure Resource Manager template deployments
  action: azure_rm_deployment
      ad_user                # Active Directory username. Use when
                               authenticating
                               with an Active
                               Directory user
                               rather than
                               service
                               principal.
      client_id              # Azure client ID. Use when authenticating with a
                               Service
                               Principal.
      deployment_mode        # In incremental mode, resources are deployed
                               without deleting
                               existing
                               resources that
                               are not included
                               in the template.
                               In complete mode
                               resources are
                               deployed and
                               existing
                               resources in the
                               resource group
                               not included in
                               the template are
                               deleted.
      deployment_name        # The name of the deployment to be tracked in the
                               resource group
                               deployment
                               history. Re-using
                               a deployment name
                               will overwrite
                               the previous
                               value in the
                               resource group's
                               deployment
                               history.
      location               # The geo-locations in which the resource group
                               will be located.
      parameters             # A hash of all the required template variables
                               for the
                               deployment
                               template. This
                               parameter is
                               mutually
                               exclusive with 'p
                               arameters_link'.
                               Either one of
                               them is required
                               if "state"
                               parameter is
                               "present".
      parameters_link        # Uri of file containing the parameters body. This
                               parameter is
                               mutually
                               exclusive with
                               'parameters'.
                               Either one of
                               them is required
                               if "state"
                               parameter is
                               "present".
      password               # Active Directory user password. Use when
                               authenticating
                               with an Active
                               Directory user
                               rather than
                               service
                               principal.
      profile                # Security profile found in ~/.azure/credentials
                               file.
      resource_group_name=   # The resource group name to use or create to host
                               the deployed
                               template
      secret                 # Azure client secret. Use when authenticating
                               with a Service
                               Principal.
      state                  # If state is "present", template will be created.
                               If state is
                               "present" and if
                               deployment
                               exists, it will
                               be updated. If
                               state is
                               "absent", stack
                               will be removed.
      subscription_id        # Your Azure subscription Id.
      template               # A hash containing the templates inline. This
                               parameter is
                               mutually
                               exclusive with
                               'template_link'.
                               Either one of
                               them is required
                               if "state"
                               parameter is
                               "present".
      template_link          # Uri of file containing the template body. This
                               parameter is
                               mutually
                               exclusive with
                               'template'.
                               Either one of
                               them is required
                               if "state"
                               parameter is
                               "present".
      tenant                 # Azure tenant ID. Use when authenticating with a
                               Service
                               Principal.
      wait_for_deployment_completion   # Whether or not to block until the deployment has
                               completed.
      wait_for_deployment_polling_period   # Time (in seconds) to wait between polls when
                               waiting for
                               deployment
                               completion.
- name: Manage Azure network interfaces.
  action: azure_rm_networkinterface
      ad_user                # Active Directory username. Use when
                               authenticating
                               with an Active
                               Directory user
                               rather than
                               service
                               principal.
      append_tags            # Use to control if tags field is canonical or
                               just appends to
                               existing tags.
                               When canonical,
                               any tags not
                               found in the tags
                               parameter will be
                               removed from the
                               object's
                               metadata.
      client_id              # Azure client ID. Use when authenticating with a
                               Service
                               Principal.
      location               # Valid azure location. Defaults to location of
                               the resource
                               group.
      name=                  # Name of the network interface.
      open_ports             # When a default security group is created for a
                               Linux host a rule
                               will be added
                               allowing inbound
                               TCP connections
                               to the default
                               SSH port 22, and
                               for a Windows
                               host rules will
                               be added allowing
                               inbound access to
                               RDP ports 3389
                               and 5986.
                               Override the
                               default ports by
                               providing a list
                               of open ports.
      os_type                # Determines any rules to be added to a default
                               security group.
                               When creating a
                               network
                               interface, if no
                               security group
                               name is provided,
                               a default
                               security group
                               will be created.
                               If the os_type is
                               'Windows', a rule
                               will be added
                               allowing RDP
                               access. If the
                               os_type is
                               'Linux', a rule
                               allowing SSH
                               access will be
                               added.
      password               # Active Directory user password. Use when
                               authenticating
                               with an Active
                               Directory user
                               rather than
                               service
                               principal.
      private_ip_address     # Valid IPv4 address that falls within the
                               specified subnet.
      private_ip_allocation_method   # Specify whether or not the assigned IP address
                               is permanent.
                               NOTE: when
                               creating a
                               network interface
                               specifying a
                               value of 'Static'
                               requires that a p
                               rivate_ip_address
                               value be
                               provided. You can
                               update the
                               allocation method
                               to 'Static' after
                               a dynamic private
                               ip address has
                               been assigned.
      profile                # Security profile found in ~/.azure/credentials
                               file.
      public_ip              # When creating a network interface, if no public
                               IP address name
                               is provided a
                               default public IP
                               address will be
                               created. Set to
                               false, if you do
                               not want a public
                               IP address
                               automatically
                               created.
      public_ip_address_name   # Name of an existing public IP address object to
                               associate with
                               the security
                               group.
      public_ip_allocation_method   # If a public_ip_address_name is not provided, a
                               default public IP
                               address will be
                               created. The
                               allocation method
                               determines
                               whether or not
                               the public IP
                               address assigned
                               to the network
                               interface is
                               permanent.
      resource_group=        # Name of a resource group where the network
                               interface exists
                               or will be
                               created.
      secret                 # Azure client secret. Use when authenticating
                               with a Service
                               Principal.
      security_group_name    # Name of an existing security group with which to
                               associate the
                               network
                               interface. If not
                               provided, a
                               default security
                               group will be
                               created.
      state                  # Assert the state of the network interface. Use
                               'present' to
                               create or update
                               an interface and
                               'absent' to
                               delete an
                               interface.
      subnet_name            # Name of an existing subnet within the specified
                               virtual network.
                               Required when
                               creating a
                               network interface
      subscription_id        # Your Azure subscription Id.
      tags                   # Dictionary of string:string pairs to assign as
                               metadata to the
                               object. Metadata
                               tags on the
                               object will be
                               updated with any
                               provided values.
                               To remove tags
                               set append_tags
                               option to false.
      tenant                 # Azure tenant ID. Use when authenticating with a
                               Service
                               Principal.
      virtual_network_name   # Name of an existing virtual network with which
                               the network
                               interface will be
                               associated.
                               Required when
                               creating a
                               network
                               interface.
- name: Get network interface facts.
  action: azure_rm_networkinterface_facts
      ad_user                # Active Directory username. Use when
                               authenticating
                               with an Active
                               Directory user
                               rather than
                               service
                               principal.
      client_id              # Azure client ID. Use when authenticating with a
                               Service
                               Principal.
      name                   # Only show results for a specific network
                               interface.
      password               # Active Directory user password. Use when
                               authenticating
                               with an Active
                               Directory user
                               rather than
                               service
                               principal.
      profile                # Security profile found in ~/.azure/credentials
                               file.
      resource_group         # Name of the resource group containing the
                               network
                               interface(s).
                               Required when
                               searching by
                               name.
      secret                 # Azure client secret. Use when authenticating
                               with a Service
                               Principal.
      subscription_id        # Your Azure subscription Id.
      tags                   # Limit results by providing a list of tags.
                               Format tags as
                               'key' or
                               'key:value'.
      tenant                 # Azure tenant ID. Use when authenticating with a
                               Service
                               Principal.
- name: Manage Azure Public IP Addresses.
  action: azure_rm_publicipaddress
      ad_user                # Active Directory username. Use when
                               authenticating
                               with an Active
                               Directory user
                               rather than
                               service
                               principal.
      allocation_method      # Control whether the assigned Public IP remains
                               permanently
                               assigned to the
                               object. If not
                               set to 'Static',
                               the IP address my
                               changed anytime
                               an associated
                               virtual machine
                               is power cycled.
      append_tags            # Use to control if tags field is canonical or
                               just appends to
                               existing tags.
                               When canonical,
                               any tags not
                               found in the tags
                               parameter will be
                               removed from the
                               object's
                               metadata.
      client_id              # Azure client ID. Use when authenticating with a
                               Service
                               Principal.
      domain_name_label      # The customizable portion of the FQDN assigned to
                               public IP
                               address. This is
                               an explicit
                               setting. If no
                               value is
                               provided, any
                               existing value
                               will be removed
                               on an existing
                               public IP.
      location               # Valid azure location. Defaults to location of
                               the resource
                               group.
      name=                  # Name of the Public IP.
      password               # Active Directory user password. Use when
                               authenticating
                               with an Active
                               Directory user
                               rather than
                               service
                               principal.
      profile                # Security profile found in ~/.azure/credentials
                               file.
      resource_group=        # Name of resource group with which the Public IP
                               is associated.
      secret                 # Azure client secret. Use when authenticating
                               with a Service
                               Principal.
      state                  # Assert the state of the Public IP. Use 'present'
                               to create or
                               update a and
                               'absent' to
                               delete.
      subscription_id        # Your Azure subscription Id.
      tags                   # Dictionary of string:string pairs to assign as
                               metadata to the
                               object. Metadata
                               tags on the
                               object will be
                               updated with any
                               provided values.
                               To remove tags
                               set append_tags
                               option to false.
      tenant                 # Azure tenant ID. Use when authenticating with a
                               Service
                               Principal.
- name: Get public IP facts.
  action: azure_rm_publicip_facts
      ad_user                # Active Directory username. Use when
                               authenticating
                               with an Active
                               Directory user
                               rather than
                               service
                               principal.
      client_id              # Azure client ID. Use when authenticating with a
                               Service
                               Principal.
      name                   # Only show results for a specific Public IP.
      password               # Active Directory user password. Use when
                               authenticating
                               with an Active
                               Directory user
                               rather than
                               service
                               principal.
      profile                # Security profile found in ~/.azure/credentials
                               file.
      resource_group         # Limit results by resource group. Required when
                               using name
                               parameter.
      secret                 # Azure client secret. Use when authenticating
                               with a Service
                               Principal.
      subscription_id        # Your Azure subscription Id.
      tags                   # Limit results by providing a list of tags.
                               Format tags as
                               'key' or
                               'key:value'.
      tenant                 # Azure tenant ID. Use when authenticating with a
                               Service
                               Principal.
- name: Manage Azure resource groups.
  action: azure_rm_resourcegroup
      ad_user                # Active Directory username. Use when
                               authenticating
                               with an Active
                               Directory user
                               rather than
                               service
                               principal.
      append_tags            # Use to control if tags field is canonical or
                               just appends to
                               existing tags.
                               When canonical,
                               any tags not
                               found in the tags
                               parameter will be
                               removed from the
                               object's
                               metadata.
      client_id              # Azure client ID. Use when authenticating with a
                               Service
                               Principal.
      force                  # Remove a resource group and all associated
                               resources. Use
                               with state
                               'absent' to
                               delete a resource
                               group that
                               contains
                               resources.
      location               # Azure location for the resource group. Required
                               when creating a
                               new resource
                               group. Cannot be
                               changed once
                               resource group is
                               created.
      name=                  # Name of the resource group.
      password               # Active Directory user password. Use when
                               authenticating
                               with an Active
                               Directory user
                               rather than
                               service
                               principal.
      profile                # Security profile found in ~/.azure/credentials
                               file.
      secret                 # Azure client secret. Use when authenticating
                               with a Service
                               Principal.
      state                  # Assert the state of the resource group. Use
                               'present' to
                               create or update
                               and 'absent' to
                               delete. When
                               'absent' a
                               resource group
                               containing
                               resources will
                               not be removed
                               unless the force
                               option is used.
      subscription_id        # Your Azure subscription Id.
      tags                   # Dictionary of string:string pairs to assign as
                               metadata to the
                               object. Metadata
                               tags on the
                               object will be
                               updated with any
                               provided values.
                               To remove tags
                               set append_tags
                               option to false.
      tenant                 # Azure tenant ID. Use when authenticating with a
                               Service
                               Principal.
- name: Get resource group facts.
  action: azure_rm_resouregroup_facts
      ad_user                # Active Directory username. Use when
                               authenticating
                               with an Active
                               Directory user
                               rather than
                               service
                               principal.
      client_id              # Azure client ID. Use when authenticating with a
                               Service
                               Principal.
      name                   # Limit results to a specific resource group.
      password               # Active Directory user password. Use when
                               authenticating
                               with an Active
                               Directory user
                               rather than
                               service
                               principal.
      profile                # Security profile found in ~/.azure/credentials
                               file.
      secret                 # Azure client secret. Use when authenticating
                               with a Service
                               Principal.
      subscription_id        # Your Azure subscription Id.
      tags                   # Limit results by providing a list of tags.
                               Format tags as
                               'key' or
                               'key:value'.
      tenant                 # Azure tenant ID. Use when authenticating with a
                               Service
                               Principal.
- name: Manage Azure network security groups.
  action: azure_rm_securitygroup
      ad_user                # Active Directory username. Use when
                               authenticating
                               with an Active
                               Directory user
                               rather than
                               service
                               principal.
      append_tags            # Use to control if tags field is canonical or
                               just appends to
                               existing tags.
                               When canonical,
                               any tags not
                               found in the tags
                               parameter will be
                               removed from the
                               object's
                               metadata.
      client_id              # Azure client ID. Use when authenticating with a
                               Service
                               Principal.
      default_rules          # The set of default rules automatically added to
                               a security group
                               at creation. In
                               general default
                               rules will not be
                               modified. Modify
                               rules to shape
                               the flow of
                               traffic to or
                               from a subnet or
                               NIC. See rules
                               below for the
                               makeup of a rule
                               dict.
      location               # Valid azure location. Defaults to location of
                               the resource
                               group.
      name                   # Name of the security group to operate on.
      password               # Active Directory user password. Use when
                               authenticating
                               with an Active
                               Directory user
                               rather than
                               service
                               principal.
      profile                # Security profile found in ~/.azure/credentials
                               file.
      purge_default_rules    # Remove any existing rules not matching those
                               defined in the
                               default_rules
                               parameter.
      purge_rules            # Remove any existing rules not matching those
                               defined in the
                               rules parameters.
      resource_group=        # Name of the resource group the security group
                               belongs to.
      rules                  # Set of rules shaping traffic flow to or from a
                               subnet or NIC.
                               Each rule is a
                               dictionary.
      secret                 # Azure client secret. Use when authenticating
                               with a Service
                               Principal.
      state                  # Assert the state of the security group. Set to
                               'present' to
                               create or update
                               a security group.
                               Set to 'absent'
                               to remove a
                               security group.
      subscription_id        # Your Azure subscription Id.
      tags                   # Dictionary of string:string pairs to assign as
                               metadata to the
                               object. Metadata
                               tags on the
                               object will be
                               updated with any
                               provided values.
                               To remove tags
                               set append_tags
                               option to false.
      tenant                 # Azure tenant ID. Use when authenticating with a
                               Service
                               Principal.
- name: Get security group facts.
  action: azure_rm_securitygroup_facts
      ad_user                # Active Directory username. Use when
                               authenticating
                               with an Active
                               Directory user
                               rather than
                               service
                               principal.
      client_id              # Azure client ID. Use when authenticating with a
                               Service
                               Principal.
      name                   # Only show results for a specific security group.
      password               # Active Directory user password. Use when
                               authenticating
                               with an Active
                               Directory user
                               rather than
                               service
                               principal.
      profile                # Security profile found in ~/.azure/credentials
                               file.
      resource_group=        # Name of the resource group to use.
      secret                 # Azure client secret. Use when authenticating
                               with a Service
                               Principal.
      subscription_id        # Your Azure subscription Id.
      tags                   # Limit results by providing a list of tags.
                               Format tags as
                               'key' or
                               'key:value'.
      tenant                 # Azure tenant ID. Use when authenticating with a
                               Service
                               Principal.
- name: Manage Azure storage accounts.
  action: azure_rm_storageaccount
      account_type           # Type of storage account. Required when creating
                               a storage
                               account. NOTE:
                               Standard_ZRS and
                               Premium_LRS
                               accounts cannot
                               be changed to
                               other account
                               types, and other
                               account types
                               cannot be changed
                               to Standard_ZRS
                               or Premium_LRS.
      ad_user                # Active Directory username. Use when
                               authenticating
                               with an Active
                               Directory user
                               rather than
                               service
                               principal.
      append_tags            # Use to control if tags field is canonical or
                               just appends to
                               existing tags.
                               When canonical,
                               any tags not
                               found in the tags
                               parameter will be
                               removed from the
                               object's
                               metadata.
      client_id              # Azure client ID. Use when authenticating with a
                               Service
                               Principal.
      custom_domain          # User domain assigned to the storage account.
                               Must be a
                               dictionary with
                               'name' and
                               'use_sub_domain'
                               keys where 'name'
                               is the CNAME
                               source. Only one
                               custom domain is
                               supported per
                               storage account
                               at this time. To
                               clear the
                               existing custom
                               domain, use an
                               empty string for
                               the custom domain
                               name property.
                               Can be added to
                               an existing
                               storage account.
                               Will be ignored
                               during storage
                               account creation.
      kind                   # The 'kind' of storage.
      location               # Valid azure location. Defaults to location of
                               the resource
                               group.
      name                   # Name of the storage account to update or create.
      password               # Active Directory user password. Use when
                               authenticating
                               with an Active
                               Directory user
                               rather than
                               service
                               principal.
      profile                # Security profile found in ~/.azure/credentials
                               file.
      resource_group=        # Name of the resource group to use.
      secret                 # Azure client secret. Use when authenticating
                               with a Service
                               Principal.
      state                  # Assert the state of the storage account. Use
                               'present' to
                               create or update
                               a storage account
                               and 'absent' to
                               delete an
                               account.
      subscription_id        # Your Azure subscription Id.
      tags                   # Dictionary of string:string pairs to assign as
                               metadata to the
                               object. Metadata
                               tags on the
                               object will be
                               updated with any
                               provided values.
                               To remove tags
                               set append_tags
                               option to false.
      tenant                 # Azure tenant ID. Use when authenticating with a
                               Service
                               Principal.
- name: Get storage account facts.
  action: azure_rm_storageaccount_facts
      ad_user                # Active Directory username. Use when
                               authenticating
                               with an Active
                               Directory user
                               rather than
                               service
                               principal.
      client_id              # Azure client ID. Use when authenticating with a
                               Service
                               Principal.
      name                   # Only show results for a specific account.
      password               # Active Directory user password. Use when
                               authenticating
                               with an Active
                               Directory user
                               rather than
                               service
                               principal.
      profile                # Security profile found in ~/.azure/credentials
                               file.
      resource_group         # Limit results to a resource group. Required when
                               filtering by
                               name.
      secret                 # Azure client secret. Use when authenticating
                               with a Service
                               Principal.
      subscription_id        # Your Azure subscription Id.
      tags                   # Limit results by providing a list of tags.
                               Format tags as
                               'key' or
                               'key:value'.
      tenant                 # Azure tenant ID. Use when authenticating with a
                               Service
                               Principal.
- name: Manage blob containers and blob objects.
  action: azure_rm_storageblob
      ad_user                # Active Directory username. Use when
                               authenticating
                               with an Active
                               Directory user
                               rather than
                               service
                               principal.
      append_tags            # Use to control if tags field is canonical or
                               just appends to
                               existing tags.
                               When canonical,
                               any tags not
                               found in the tags
                               parameter will be
                               removed from the
                               object's
                               metadata.
      blob                   # Name of a blob object within the container.
      cache_control          # Set the blob cache-control header.
      client_id              # Azure client ID. Use when authenticating with a
                               Service
                               Principal.
      container=             # Name of a blob container within the storage
                               account.
      content_disposition    # Set the blob content-disposition header.
      content_encoding       # Set the blob encoding header.
      content_language       # Set the blob content-language header.
      content_md5            # Set the blob md5 hash value.
      content_type           # Set the blob content-type header. For example,
                               'image/png'.
      dest                   # Destination file path. Use with state 'present'
                               to download a
                               blob.
      force                  # Overwrite existing blob or file when uploading
                               or downloading.
                               Force deletion of
                               a container that
                               contains blobs.
      password               # Active Directory user password. Use when
                               authenticating
                               with an Active
                               Directory user
                               rather than
                               service
                               principal.
      profile                # Security profile found in ~/.azure/credentials
                               file.
      public_access          # Determine a container's level of public access.
                               By default
                               containers are
                               private. Can only
                               be set at time of
                               container
                               creation.
      resource_group=        # Name of the resource group to use.
      secret                 # Azure client secret. Use when authenticating
                               with a Service
                               Principal.
      src                    # Source file path. Use with state 'present' to
                               upload a blob.
      state                  # Assert the state of a container or blob. Use
                               state 'absent'
                               with a container
                               value only to
                               delete a
                               container.
                               Include a blob
                               value to remove a
                               specific blob. A
                               container will
                               not be deleted,
                               if it contains
                               blobs. Use the
                               force option to
                               override,
                               deleting the
                               container and all
                               associated blobs.
                               Use state
                               'present' to
                               create or update
                               a container and
                               upload or
                               download a blob.
                               If the container
                               does not exist,
                               it will be
                               created. If it
                               exists, it will
                               be updated with
                               configuration
                               options. Provide
                               a blob name and
                               either src or
                               dest to upload or
                               download. Provide
                               a src path to
                               upload and a dest
                               path to download.
                               If a blob
                               (uploading) or a
                               file
                               (downloading)
                               already exists,
                               it will not be
                               overwritten
                               unless the force
                               parameter is
                               true.
      storage_account_name=   # Name of the storage account to use.
      subscription_id        # Your Azure subscription Id.
      tags                   # Dictionary of string:string pairs to assign as
                               metadata to the
                               object. Metadata
                               tags on the
                               object will be
                               updated with any
                               provided values.
                               To remove tags
                               set append_tags
                               option to false.
      tenant                 # Azure tenant ID. Use when authenticating with a
                               Service
                               Principal.
- name: Manage Azure subnets.
  action: azure_rm_subnet
      ad_user                # Active Directory username. Use when
                               authenticating
                               with an Active
                               Directory user
                               rather than
                               service
                               principal.
      address_prefix_cidr=   # CIDR defining the IPv4 address space of the
                               subnet. Must be
                               valid within the
                               context of the
                               virtual network.
      client_id              # Azure client ID. Use when authenticating with a
                               Service
                               Principal.
      name=                  # Name of the subnet.
      password               # Active Directory user password. Use when
                               authenticating
                               with an Active
                               Directory user
                               rather than
                               service
                               principal.
      profile                # Security profile found in ~/.azure/credentials
                               file.
      resource_group=        # Name of resource group.
      secret                 # Azure client secret. Use when authenticating
                               with a Service
                               Principal.
      security_group_name    # Name of an existing security group with which to
                               associate the
                               subnet.
      state=                 # Assert the state of the subnet. Use 'present' to
                               create or update
                               a subnet and
                               'absent' to
                               delete a subnet.
      subscription_id        # Your Azure subscription Id.
      tenant                 # Azure tenant ID. Use when authenticating with a
                               Service
                               Principal.
      virtual_network_name=   # Name of an existing virtual network with which
                               the subnet is or
                               will be
                               associated.
- name: Manage Azure virtual machines.
  action: azure_rm_virtualmachine
      ad_user                # Active Directory username. Use when
                               authenticating
                               with an Active
                               Directory user
                               rather than
                               service
                               principal.
      admin_password         # Password for the admin username. Not required if
                               the os_type is
                               Linux and SSH
                               password
                               authentication is
                               disabled by
                               setting ssh_passw
                               ord_enabled to
                               false.
      admin_username         # Admin username used to access the host after it
                               is created.
                               Required when
                               creating a VM.
      allocated              # Toggle that controls if the machine is
                               allocated/dealloc
                               ated, only useful
                               with
                               state='present'.
      append_tags            # Use to control if tags field is canonical or
                               just appends to
                               existing tags.
                               When canonical,
                               any tags not
                               found in the tags
                               parameter will be
                               removed from the
                               object's
                               metadata.
      client_id              # Azure client ID. Use when authenticating with a
                               Service
                               Principal.
      image=                 # A dictionary describing the Marketplace image
                               used to build the
                               VM. Will contain
                               keys: publisher,
                               offer, sku and
                               version. NOTE:
                               set image.version
                               to 'latest' to
                               get the most
                               recent version of
                               a given image.
      location               # Valid Azure location. Defaults to location of
                               the resource
                               group.
      name=                  # Name of the virtual machine.
      network_interface_names   # List of existing network interface names to add
                               to the VM. If a
                               network interface
                               name is not
                               provided when the
                               VM is created, a
                               default network
                               interface will be
                               created. In order
                               for the module to
                               create a network
                               interface, at
                               least one Virtual
                               Network with one
                               Subnet must
                               exist.
      open_ports             # If a network interface is created when creating
                               the VM, a
                               security group
                               will be created
                               as well. For
                               Linux hosts a
                               rule will be
                               added to the
                               security group
                               allowing inbound
                               TCP connections
                               to the default
                               SSH port 22, and
                               for Windows hosts
                               ports 3389 and
                               5986 will be
                               opened. Override
                               the default open
                               ports by
                               providing a list
                               of ports.
      os_disk_caching        # Type of OS disk caching.
      os_type                # Base type of operating system.
      password               # Active Directory user password. Use when
                               authenticating
                               with an Active
                               Directory user
                               rather than
                               service
                               principal.
      profile                # Security profile found in ~/.azure/credentials
                               file.
      public_ip_allocation_method   # If a public IP address is created when creating
                               the VM (because a
                               Network Interface
                               was not
                               provided),
                               determines if the
                               public IP address
                               remains
                               permanently
                               associated with
                               the Network
                               Interface. If set
                               to 'Dynamic' the
                               public IP address
                               may change any
                               time the VM is
                               rebooted or power
                               cycled.
      remove_on_absent       # When removing a VM using state 'absent', also
                               remove associated
                               resources It can
                               be 'all' or a
                               list with any of
                               the following: ['
                               network_interface
                               s', 'virtual_stor
                               age',
                               'public_ips'] Any
                               other input will
                               be ignored
      resource_group=        # Name of the resource group containing the
                               virtual machine.
      restarted              # Use with state 'present' to restart a running
                               VM.
      secret                 # Azure client secret. Use when authenticating
                               with a Service
                               Principal.
      short_hostname         # Name assigned internally to the host. On a linux
                               VM this is the
                               name returned by
                               the `hostname`
                               command. When
                               creating a
                               virtual machine,
                               short_hostname
                               defaults to name.
      ssh_password_enabled   # When the os_type is Linux, setting
                               ssh_password_enab
                               led to false will
                               disable SSH
                               password
                               authentication
                               and require use
                               of SSH keys.
      ssh_public_keys        # For os_type Linux provide a list of SSH keys.
                               Each item in the
                               list should be a
                               dictionary where
                               the dictionary
                               contains two
                               keys: path and
                               key_data. Set the
                               path to the
                               default location
                               of the
                               authorized_keys
                               files. On an
                               Enterprise Linux
                               host, for
                               example, the path
                               will be
                               /home/<admin user
                               name>/.ssh/author
                               ized_keys. Set
                               key_data to the
                               actual value of
                               the public key.
      started                # Use with state 'present' to start the machine.
                               Set to false to
                               have the machine
                               be 'stopped'.
      state                  # Assert the state of the virtual machine. State
                               'present' will
                               check that the
                               machine exists
                               with the
                               requested
                               configuration. If
                               the configuration
                               of the existing
                               machine does not
                               match, the
                               machine will be
                               updated. Use
                               options started,
                               allocated and
                               restarted to
                               change the
                               machine's power
                               state. State
                               'absent' will
                               remove the
                               virtual machine.
      storage_account_name   # Name of an existing storage account that
                               supports creation
                               of VHD blobs. If
                               not specified for
                               a new VM, a new
                               storage account
                               named <vm name>01
                               will be created
                               using storage
                               type
                               'Standard_LRS'.
      storage_blob_name      # Name fo the storage blob used to hold the VM's
                               OS disk image. If
                               no name is
                               provided,
                               defaults to the
                               VM name + '.vhd'.
                               If you provide a
                               name, it must end
                               with '.vhd'
      storage_container_name   # Name of the container to use within the storage
                               account to store
                               VHD blobs. If no
                               name is specified
                               a default
                               container will
                               created.
      subnet_name            # When creating a virtual machine, if a network
                               interface name is
                               not provided, one
                               will be created.
                               The new network
                               interface will be
                               assigned to the
                               first subnet
                               found in the
                               virtual network.
                               Use this
                               parameter to
                               provide a
                               specific subnet
                               instead.
      subscription_id        # Your Azure subscription Id.
      tags                   # Dictionary of string:string pairs to assign as
                               metadata to the
                               object. Metadata
                               tags on the
                               object will be
                               updated with any
                               provided values.
                               To remove tags
                               set append_tags
                               option to false.
      tenant                 # Azure tenant ID. Use when authenticating with a
                               Service
                               Principal.
      virtual_network_name   # When creating a virtual machine, if a network
                               interface name is
                               not provided, one
                               will be created.
                               The new network
                               interface will be
                               assigned to the
                               first virtual
                               network found in
                               the resource
                               group. Use this
                               parameter to
                               provide a
                               specific virtual
                               network instead.
      vm_size                # A valid Azure VM size value. For example,
                               'Standard_D4'.
                               The list of
                               choices varies
                               depending on the
                               subscription and
                               location. Check
                               your subscription
                               for available
                               choices.
- name: Get virtual machine image facts.
  action: azure_rm_virtualmachineimage_facts
      ad_user                # Active Directory username. Use when
                               authenticating
                               with an Active
                               Directory user
                               rather than
                               service
                               principal.
      client_id              # Azure client ID. Use when authenticating with a
                               Service
                               Principal.
      location=              # Azure location value (ie. westus, eastus,
                               eastus2,
                               northcentralus,
                               etc.). Supplying
                               only a location
                               value will yield
                               a list of
                               available
                               publishers for
                               the location.
      name                   # Only show results for a specific security group.
      offer                  # Name of an image offering. Combine with sku to
                               see a list of
                               available image
                               versions.
      password               # Active Directory user password. Use when
                               authenticating
                               with an Active
                               Directory user
                               rather than
                               service
                               principal.
      profile                # Security profile found in ~/.azure/credentials
                               file.
      publisher              # Name of an image publisher. List image offerings
                               associated with a
                               particular
                               publisher.
      secret                 # Azure client secret. Use when authenticating
                               with a Service
                               Principal.
      sku                    # Image offering SKU. Combine with offer to see a
                               list of available
                               versions.
      subscription_id        # Your Azure subscription Id.
      tenant                 # Azure tenant ID. Use when authenticating with a
                               Service
                               Principal.
      version                # Specific version number of an image.
- name: Manage Azure virtual networks.
  action: azure_rm_virtualnetwork
      ad_user                # Active Directory username. Use when
                               authenticating
                               with an Active
                               Directory user
                               rather than
                               service
                               principal.
      address_prefixes_cidr   # List of IPv4 address ranges where each is
                               formatted using
                               CIDR notation.
                               Required when
                               creating a new
                               virtual network
                               or using purge_ad
                               dress_prefixes.
      append_tags            # Use to control if tags field is canonical or
                               just appends to
                               existing tags.
                               When canonical,
                               any tags not
                               found in the tags
                               parameter will be
                               removed from the
                               object's
                               metadata.
      client_id              # Azure client ID. Use when authenticating with a
                               Service
                               Principal.
      dns_servers            # Custom list of DNS servers. Maximum length of
                               two. The first
                               server in the
                               list will be
                               treated as the
                               Primary server.
                               This is an
                               explicit list.
                               Existing DNS
                               servers will be
                               replaced with the
                               specified list.
                               Use the
                               purge_dns_servers
                               option to remove
                               all custom DNS
                               servers and
                               revert to default
                               Azure servers.
      location               # Valid azure location. Defaults to location of
                               the resource
                               group.
      name=                  # name of the virtual network.
      password               # Active Directory user password. Use when
                               authenticating
                               with an Active
                               Directory user
                               rather than
                               service
                               principal.
      profile                # Security profile found in ~/.azure/credentials
                               file.
      purge_address_prefixes   # Use with state present to remove any existing
                               address_prefixes.
      purge_dns_servers      # Use with state present to remove existing DNS
                               servers,
                               reverting to
                               default Azure
                               servers. Mutually
                               exclusive with
                               dns_servers.
      resource_group=        # name of resource group.
      secret                 # Azure client secret. Use when authenticating
                               with a Service
                               Principal.
      state                  # Assert the state of the virtual network. Use
                               'present' to
                               create or update
                               and 'absent' to
                               delete.
      subscription_id        # Your Azure subscription Id.
      tags                   # Dictionary of string:string pairs to assign as
                               metadata to the
                               object. Metadata
                               tags on the
                               object will be
                               updated with any
                               provided values.
                               To remove tags
                               set append_tags
                               option to false.
      tenant                 # Azure tenant ID. Use when authenticating with a
                               Service
                               Principal.
- name: Get virtual network facts.
  action: azure_rm_virtualnetwork_facts
      ad_user                # Active Directory username. Use when
                               authenticating
                               with an Active
                               Directory user
                               rather than
                               service
                               principal.
      client_id              # Azure client ID. Use when authenticating with a
                               Service
                               Principal.
      name                   # Only show results for a specific security group.
      password               # Active Directory user password. Use when
                               authenticating
                               with an Active
                               Directory user
                               rather than
                               service
                               principal.
      profile                # Security profile found in ~/.azure/credentials
                               file.
      resource_group         # Limit results by resource group. Required when
                               filtering by
                               name.
      secret                 # Azure client secret. Use when authenticating
                               with a Service
                               Principal.
      subscription_id        # Your Azure subscription Id.
      tags                   # Limit results by providing a list of tags.
                               Format tags as
                               'key' or
                               'key:value'.
      tenant                 # Azure tenant ID. Use when authenticating with a
                               Service
                               Principal.
- name: Manage BIG-IP device DNS settings
  action: bigip_device_dns
      cache                  # Specifies whether the system caches DNS lookups
                               or performs the
                               operation each
                               time a lookup is
                               needed. Please
                               note that this
                               applies only to
                               Access Policy
                               Manager features,
                               such as ACLs, web
                               application
                               rewrites, and
                               authentication.
      forwarders             # A list of BIND servers that the system can use
                               to perform DNS
                               lookups
      ip_version             # Specifies whether the DNS specifies IP addresses
                               using IPv4 or
                               IPv6.
      name_servers           # A list of name serverz that the system uses to
                               validate DNS
                               lookups
      password=              # The password for the user account used to
                               connect to the
                               BIG-IP.
      search                 # A list of domains that the system searches for
                               local domain
                               lookups, to
                               resolve local
                               host names.
      server=                # The BIG-IP host.
      server_port            # The BIG-IP server port.
      state                  # The state of the variable on the system. When
                               `present',
                               guarantees that
                               an existing
                               variable is set
                               to `value'.
      user=                  # The username to connect to the BIG-IP with. This
                               user must have
                               administrative
                               privileges on the
                               device.
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
- name: Manage NTP servers on a BIG-IP
  action: bigip_device_ntp
      ntp_servers            # A list of NTP servers to set on the device. At
                               least one of
                               `ntp_servers' or
                               `timezone' is
                               required.
      password=              # The password for the user account used to
                               connect to the
                               BIG-IP.
      server=                # The BIG-IP host.
      server_port            # The BIG-IP server port.
      state                  # The state of the NTP servers on the system. When
                               `present',
                               guarantees that
                               the NTP servers
                               are set on the
                               system. When
                               `absent', removes
                               the specified NTP
                               servers from the
                               device
                               configuration.
      timezone               # The timezone to set for NTP lookups. At least
                               one of
                               `ntp_servers' or
                               `timezone' is
                               required.
      user=                  # The username to connect to the BIG-IP with. This
                               user must have
                               administrative
                               privileges on the
                               device.
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
- name: Manage the SSHD settings of a BIG-IP
  action: bigip_device_sshd
      allow                  # Specifies, if you have enabled SSH access, the
                               IP address or
                               address range for
                               other systems
                               that can use SSH
                               to communicate
                               with this system.
      banner                 # Whether to enable the banner or not.
      banner_text            # Specifies the text to include on the pre-login
                               banner that
                               displays when a
                               user attempts to
                               login to the
                               system using SSH.
      inactivity_timeout     # Specifies the number of seconds before
                               inactivity causes
                               an SSH session to
                               log out.
      log_level              # Specifies the minimum SSHD message level to
                               include in the
                               system log.
      login                  # Specifies, when checked `enabled', that the
                               system accepts
                               SSH
                               communications.
      password=              # The password for the user account used to
                               connect to the
                               BIG-IP.
      port                   # Port that you want the SSH daemon to run on.
      server=                # The BIG-IP host.
      server_port            # The BIG-IP server port.
      user=                  # The username to connect to the BIG-IP with. This
                               user must have
                               administrative
                               privileges on the
                               device.
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
- name: Collect facts from F5 BIG-IP devices
  action: bigip_facts
      filter                 # Shell-style glob matching string used to filter
                               fact keys. Not
                               applicable for
                               software,
                               provision, and
                               system_info fact
                               categories.
      include=               # Fact category or list of categories to collect
      password=              # The password for the user account used to
                               connect to the
                               BIG-IP.
      server=                # The BIG-IP host.
      server_port            # The BIG-IP server port.
      session                # BIG-IP session support; may be useful to avoid
                               concurrency
                               issues in certain
                               circumstances.
      user=                  # The username to connect to the BIG-IP with. This
                               user must have
                               administrative
                               privileges on the
                               device.
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
- name: Manage Datacenter configuration in BIG-IP
  action: bigip_gtm_datacenter
      contact                # The name of the contact for the data center.
      description            # The description of the data center.
      enabled                # Whether the data center should be enabled. At
                               least one of
                               `state' and
                               `enabled' are
                               required.
      location               # The location of the data center.
      name=                  # The name of the data center.
      password=              # The password for the user account used to
                               connect to the
                               BIG-IP.
      server=                # The BIG-IP host.
      server_port            # The BIG-IP server port.
      state                  # The state of the datacenter on the BIG-IP. When
                               `present',
                               guarantees that
                               the data center
                               exists. When
                               `absent' removes
                               the data center
                               from the BIG-IP.
                               `enabled' will
                               enable the data
                               center and
                               `disabled' will
                               ensure the data
                               center is
                               disabled. At
                               least one of
                               state and enabled
                               are required.
      user=                  # The username to connect to the BIG-IP with. This
                               user must have
                               administrative
                               privileges on the
                               device.
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
- name: Manages F5 BIG-IP GTM virtual servers
  action: bigip_gtm_virtual_server
      host                   # Virtual server host
      password=              # The password for the user account used to
                               connect to the
                               BIG-IP.
      port                   # Virtual server port
      server=                # The BIG-IP host.
      server_port            # The BIG-IP server port.
      state                  # Virtual server state
      user=                  # The username to connect to the BIG-IP with. This
                               user must have
                               administrative
                               privileges on the
                               device.
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
      virtual_server_name=   # Virtual server name
      virtual_server_server=   # Virtual server server
- name: Manages F5 BIG-IP GTM wide ip
  action: bigip_gtm_wide_ip
      lb_method=             # LB method of wide ip
      password=              # The password for the user account used to
                               connect to the
                               BIG-IP.
      server=                # The BIG-IP host.
      server_port            # The BIG-IP server port.
      user=                  # The username to connect to the BIG-IP with. This
                               user must have
                               administrative
                               privileges on the
                               device.
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
      wide_ip=               # Wide IP name
- name: Manage iRules across different modules on a BIG-IP.
  action: bigip_irule
      content                # When used instead of 'src', sets the contents of
                               an iRule directly
                               to the specified
                               value. This is
                               for simple
                               values, but can
                               be used with
                               lookup plugins
                               for anything
                               complex or with
                               formatting.
                               Either one of
                               `src' or
                               `content' must be
                               provided.
      module=                # The BIG-IP module to add the iRule to.
      name=                  # The name of the iRule.
      partition              # The partition to create the iRule on.
      password=              # The password for the user account used to
                               connect to the
                               BIG-IP.
      server=                # The BIG-IP host.
      server_port            # The BIG-IP server port.
      src=                   # The iRule file to interpret and upload to the
                               BIG-IP. Either
                               one of `src' or
                               `content' must be
                               provided.
      state                  # Whether the iRule should exist or not.
      user=                  # The username to connect to the BIG-IP with. This
                               user must have
                               administrative
                               privileges on the
                               device.
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
- name: Manages F5 BIG-IP LTM http monitors
  action: bigip_monitor_http
      interval               # The interval specifying how frequently the
                               monitor instance
                               of this template
                               will run. By
                               default, this
                               interval is used
                               for up and down
                               states. The
                               default API
                               setting is 5.
      ip                     # IP address part of the ipport definition. The
                               default API
                               setting is
                               "0.0.0.0".
      name=                  # Monitor name
      parent                 # The parent template of this monitor template
      parent_partition       # Partition for the parent monitor
      partition              # Partition for the monitor
      password=              # The password for the user account used to
                               connect to the
                               BIG-IP.
      port                   # Port address part of the ip/port definition. The
                               default API
                               setting is 0.
      receive=               # The receive string for the monitor call
      receive_disable=       # The receive disable string for the monitor call
      send=                  # The send string for the monitor call
      server=                # The BIG-IP host.
      server_port            # The BIG-IP server port.
      state                  # Monitor state
      time_until_up          # Specifies the amount of time in seconds after
                               the first
                               successful
                               response before a
                               node will be
                               marked up. A
                               value of 0 will
                               cause a node to
                               be marked up
                               immediately after
                               a valid response
                               is received from
                               the node. The
                               default API
                               setting is 0.
      timeout                # The number of seconds in which the node or
                               service must
                               respond to the
                               monitor request.
                               If the target
                               responds within
                               the set time
                               period, it is
                               considered up. If
                               the target does
                               not respond
                               within the set
                               time period, it
                               is considered
                               down. You can
                               change this
                               number to any
                               number you want,
                               however, it
                               should be 3 times
                               the interval
                               number of seconds
                               plus 1 second.
                               The default API
                               setting is 16.
      user=                  # The username to connect to the BIG-IP with. This
                               user must have
                               administrative
                               privileges on the
                               device.
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
- name: Manages F5 BIG-IP LTM tcp monitors
  action: bigip_monitor_tcp
      interval               # The interval specifying how frequently the
                               monitor instance
                               of this template
                               will run. By
                               default, this
                               interval is used
                               for up and down
                               states. The
                               default API
                               setting is 5.
      ip                     # IP address part of the ipport definition. The
                               default API
                               setting is
                               "0.0.0.0".
      name=                  # Monitor name
      parent                 # The parent template of this monitor template
      parent_partition       # Partition for the parent monitor
      partition              # Partition for the monitor
      password=              # The password for the user account used to
                               connect to the
                               BIG-IP.
      port                   # Port address part op the ipport definition. The
                               default API
                               setting is 0.
      receive=               # The receive string for the monitor call
      send=                  # The send string for the monitor call
      server=                # The BIG-IP host.
      server_port            # The BIG-IP server port.
      state                  # Monitor state
      time_until_up          # Specifies the amount of time in seconds after
                               the first
                               successful
                               response before a
                               node will be
                               marked up. A
                               value of 0 will
                               cause a node to
                               be marked up
                               immediately after
                               a valid response
                               is received from
                               the node. The
                               default API
                               setting is 0.
      timeout                # The number of seconds in which the node or
                               service must
                               respond to the
                               monitor request.
                               If the target
                               responds within
                               the set time
                               period, it is
                               considered up. If
                               the target does
                               not respond
                               within the set
                               time period, it
                               is considered
                               down. You can
                               change this
                               number to any
                               number you want,
                               however, it
                               should be 3 times
                               the interval
                               number of seconds
                               plus 1 second.
                               The default API
                               setting is 16.
      type                   # The template type of this monitor template
      user=                  # The username to connect to the BIG-IP with. This
                               user must have
                               administrative
                               privileges on the
                               device.
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
- name: Manages F5 BIG-IP LTM nodes
  action: bigip_node
      description            # Node description.
      host=                  # Node IP. Required when state=present and node
                               does not exist.
                               Error when
                               state=absent.
      monitor_state          # Set monitor availability status for node
      monitor_type           # Monitor rule type when monitors > 1
      monitors               # Monitor template name list. Always use the full
                               path to the
                               monitor.
      name                   # Node name
      partition              # Partition
      password=              # The password for the user account used to
                               connect to the
                               BIG-IP.
      quorum                 # Monitor quorum value when monitor_type is m_of_n
      server=                # The BIG-IP host.
      server_port            # The BIG-IP server port.
      session_state          # Set new session availability status for node
      state=                 # Pool member state
      user=                  # The username to connect to the BIG-IP with. This
                               user must have
                               administrative
                               privileges on the
                               device.
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
- name: Manages F5 BIG-IP LTM pools
  action: bigip_pool
      host                   # Pool member IP
      lb_method              # Load balancing method
      monitor_type           # Monitor rule type when monitors > 1
      monitors               # Monitor template name list. Always use the full
                               path to the
                               monitor.
      name=                  # Pool name
      partition              # Partition of pool/pool member
      password=              # The password for the user account used to
                               connect to the
                               BIG-IP.
      port                   # Pool member port
      quorum                 # Monitor quorum value when monitor_type is m_of_n
      reselect_tries         # Sets the number of times the system tries to
                               contact a pool
                               member after a
                               passive failure
      server=                # The BIG-IP host.
      server_port            # The BIG-IP server port.
      service_down_action    # Sets the action to take when node goes down in
                               pool
      slow_ramp_time         # Sets the ramp-up time (in seconds) to gradually
                               ramp up the load
                               on newly added or
                               freshly detected
                               up pool members
      state                  # Pool/pool member state
      user=                  # The username to connect to the BIG-IP with. This
                               user must have
                               administrative
                               privileges on the
                               device.
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
- name: Manages F5 BIG-IP LTM pool members
  action: bigip_pool_member
      connection_limit       # Pool member connection limit. Setting this to 0
                               disables the
                               limit.
      description            # Pool member description
      host=                  # Pool member IP
      monitor_state          # Set monitor availability status for pool member
      partition              # Partition
      password=              # The password for the user account used to
                               connect to the
                               BIG-IP.
      pool=                  # Pool name. This pool must exist.
      port=                  # Pool member port
      preserve_node          # When state is absent and the pool member is no
                               longer referenced
                               in other pools,
                               the default
                               behavior removes
                               the unused node o
                               bject. Setting
                               this to 'yes'
                               disables this
                               behavior.
      rate_limit             # Pool member rate limit (connections-per-second).
                               Setting this to 0
                               disables the
                               limit.
      ratio                  # Pool member ratio weight. Valid values range
                               from 1 through
                               100. New pool
                               members -- unless
                               overriden with
                               this value --
                               default to 1.
      server=                # The BIG-IP host.
      server_port            # The BIG-IP server port.
      session_state          # Set new session availability status for pool
                               member
      state=                 # Pool member state
      user=                  # The username to connect to the BIG-IP with. This
                               user must have
                               administrative
                               privileges on the
                               device.
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
- name: Manage route domains on a BIG-IP
  action: bigip_routedomain
      bwc_policy             # The bandwidth controller for the route domain.
      connection_limit       # The maximum number of concurrent connections
                               allowed for the
                               route domain.
                               Setting this to
                               `0' turns off
                               connection
                               limits.
      description            # Specifies descriptive text that identifies the
                               route domain.
      flow_eviction_policy   # The eviction policy to use with this route
                               domain. Apply an
                               eviction policy
                               to provide
                               customized
                               responses to flow
                               overflows and
                               slow flows on the
                               route domain.
      id=                    # The unique identifying integer representing the
                               route domain.
      parent                 # S p e c i f i e s   t h e   r o u t e   d o m a
                               i n   t h e   s y
                               s t e m   s e a r
                               c h e s   w h e n
                               i t   c a n n o t
                               f i n d   a   r o
                               u t e   i n   t h
                               e   c o n f i g u
                               r e d   d o m a i
                               n .
      password=              # The password for the user account used to
                               connect to the
                               BIG-IP.
      routing_protocol       # Dynamic routing protocols for the system to use
                               in the route
                               domain.
      server=                # The BIG-IP host.
      server_port            # The BIG-IP server port.
      service_policy         # Service policy to associate with the route
                               domain.
      state                  # Whether the route domain should exist or not.
      strict                 # Specifies whether the system enforces cross-
                               routing
                               restrictions or
                               not.
      user=                  # The username to connect to the BIG-IP with. This
                               user must have
                               administrative
                               privileges on the
                               device.
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
      vlans                  # VLANs for the system to use in the route domain
- name: Manage Self-IPs on a BIG-IP system
  action: bigip_selfip
      address                # The IP addresses for the new self IP. This value
                               is ignored upon
                               update as
                               addresses
                               themselves cannot
                               be changed after
                               they are created.
      allow_service          # Configure port lockdown for the Self IP. By
                               default, the Self
                               IP has a "default
                               deny" policy.
                               This can be
                               changed to allow
                               TCP and UDP ports
                               as well as
                               specific
                               protocols. This
                               list should
                               contain
                               `protocol':`port'
                               values.
      name=                  # The self IP to create.
      netmask=               # The netmasks for the self IP.
      password=              # The password for the user account used to
                               connect to the
                               BIG-IP.
      server=                # The BIG-IP host.
      server_port            # The BIG-IP server port.
      state                  # The state of the variable on the system. When
                               `present',
                               guarantees that
                               the Self-IP
                               exists with the
                               provided
                               attributes. When
                               `absent', removes
                               the Self-IP from
                               the system.
      traffic_group          # The traffic group for the self IP addresses in
                               an active-active,
                               redundant load
                               balancer
                               configuration.
      user=                  # The username to connect to the BIG-IP with. This
                               user must have
                               administrative
                               privileges on the
                               device.
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
      vlan=                  # The VLAN that the new self IPs will be on.
- name: Import/Delete certificates from BIG-IP
  action: bigip_ssl_certificate
      cert_content           # When used instead of 'cert_src', sets the
                               contents of a
                               certificate
                               directly to the
                               specified value.
                               This is used with
                               lookup plugins or
                               for anything with
                               formatting or
                               templating.
                               Either one of
                               `key_src',
                               `key_content',
                               `cert_src' or
                               `cert_content'
                               must be provided
                               when `state' is
                               `present'.
      cert_src               # This is the local filename of the certificate.
                               Either one of
                               `key_src',
                               `key_content',
                               `cert_src' or
                               `cert_content'
                               must be provided
                               when `state' is
                               `present'.
      key_content            # When used instead of 'key_src', sets the
                               contents of a
                               certificate key
                               directly to the
                               specified value.
                               This is used with
                               lookup plugins or
                               for anything with
                               formatting or
                               templating.
                               Either one of
                               `key_src',
                               `key_content',
                               `cert_src' or
                               `cert_content'
                               must be provided
                               when `state' is
                               `present'.
      key_src                # This is the local filename of the private key.
                               Either one of
                               `key_src',
                               `key_content',
                               `cert_src' or
                               `cert_content'
                               must be provided
                               when `state' is
                               `present'.
      name=                  # SSL Certificate Name.  This is the cert/key pair
                               name used when
                               importing a
                               certificate/key
                               into the F5. It
                               also determines
                               the filenames of
                               the objects on
                               the LTM (:Partiti
                               on:name.cer_11111
                               _1 and :Partition
                               _name.key_11111_1
                               ).
      partition              # BIG-IP partition to use when adding/deleting
                               certificate.
      passphrase             # Passphrase on certificate private key
      password=              # The password for the user account used to
                               connect to the
                               BIG-IP.
      server=                # The BIG-IP host.
      server_port            # The BIG-IP server port.
      state=                 # Certificate and key state. This determines if
                               the provided
                               certificate and
                               key is to be made
                               `present' on the
                               device or
                               `absent'.
      user=                  # The username to connect to the BIG-IP with. This
                               user must have
                               administrative
                               privileges on the
                               device.
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
- name: Manage BIG-IP system database variables
  action: bigip_sys_db
      key=                   # The database variable to manipulate.
      password=              # The password for the user account used to
                               connect to the
                               BIG-IP.
      server=                # The BIG-IP host.
      server_port            # The BIG-IP server port.
      state                  # The state of the variable on the system. When
                               `present',
                               guarantees that
                               an existing
                               variable is set
                               to `value'. When
                               `reset' sets the
                               variable back to
                               the default
                               value. At least
                               one of value and
                               state `reset' are
                               required.
      user=                  # The username to connect to the BIG-IP with. This
                               user must have
                               administrative
                               privileges on the
                               device.
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
      value                  # The value to set the key to. At least one of
                               value and state
                               `reset' are
                               required.
- name: Manages F5 BIG-IP LTM virtual servers
  action: bigip_virtual_server
      all_profiles           # List of all Profiles
                               (HTTP,ClientSSL,S
                               erverSSL,etc)
                               that must be used
                               by the virtual
                               server
      all_rules              # List of rules to be applied in priority order
      default_persistence_profile   # Default Profile which manages the session
                               persistence
      description            # Virtual server description
      destination=           # Destination IP of the virtual server (only host
                               is currently
                               supported).
                               Required when
                               state=present and
                               vs does not
                               exist.
      enabled_vlans          # List of vlans to be enabled. When a VLAN named
                               `ALL' is used,
                               all VLANs will be
                               allowed.
      name=                  # Virtual server name
      partition              # Partition
      password=              # The password for the user account used to
                               connect to the
                               BIG-IP.
      pool                   # Default pool for the virtual server
      port                   # Port of the virtual server . Required when
                               state=present and
                               vs does not exist
      server=                # The BIG-IP host.
      server_port            # The BIG-IP server port.
      snat                   # Source network address policy
      state                  # Virtual Server state Absent, delete the VS if
                               present `present'
                               (and its synonym
                               enabled), create
                               if needed the VS
                               and set state to
                               enabled
                               `disabled',
                               create if needed
                               the VS and set
                               state to disabled
      user=                  # The username to connect to the BIG-IP with. This
                               user must have
                               administrative
                               privileges on the
                               device.
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
- name: Manage VLANs on a BIG-IP system
  action: bigip_vlan
      description            # The description to give to the VLAN.
      name=                  # The VLAN to manage. If the special VLAN `ALL' is
                               specified with
                               the `state' value
                               of `absent' then
                               all VLANs will be
                               removed.
      password=              # The password for the user account used to
                               connect to the
                               BIG-IP.
      server=                # The BIG-IP host.
      server_port            # The BIG-IP server port.
      state                  # The state of the VLAN on the system. When
                               `present',
                               guarantees that
                               the VLAN exists
                               with the provided
                               attributes. When
                               `absent', removes
                               the VLAN from the
                               system.
      tag                    # Tag number for the VLAN. The tag number can be
                               any integer
                               between 1 and
                               4094. The system
                               automatically
                               assigns a tag
                               number if you do
                               not specify a
                               value.
      tagged_interfaces      # Specifies a list of tagged interfaces and trunks
                               that you want to
                               configure for the
                               VLAN. Use tagged
                               interfaces or
                               trunks when you
                               want to assign a
                               single interface
                               or trunk to
                               multiple VLANs.
      untagged_interfaces    # Specifies a list of untagged interfaces and
                               trunks that you
                               want to configure
                               for the VLAN.
      user=                  # The username to connect to the BIG-IP with. This
                               user must have
                               administrative
                               privileges on the
                               device.
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
- name: Notify BigPanda about deployments
  action: bigpanda
      component=             # The name of the component being deployed. Ex:
                               billing
      description            # Free text description of the deployment.
      env                    # The environment name, typically 'production',
                               'staging', etc.
      hosts                  # Name of affected host name. Can be a list.
      owner                  # The person responsible for the deployment.
      state=                 # State of the deployment.
      token=                 # API token.
      url                    # Base URL of the API server.
      validate_certs         # If `no', SSL certificates for the target url
                               will not be
                               validated. This
                               should only be
                               used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
      version=               # The deployment version.
- name: Insert/update/remove a text block surrounded by marker lines.
  action: blockinfile
      backup                 # Create a backup file including the timestamp
                               information so
                               you can get the
                               original file
                               back if you
                               somehow clobbered
                               it incorrectly.
      block                  # The text to insert inside the marker lines. If
                               it's missing or
                               an empty string,
                               the block will be
                               removed as if
                               `state' were
                               specified to
                               `absent'.
      create                 # Create a new file if it doesn't exist.
      dest=                  # The file to modify.
      follow                 # This flag indicates that filesystem links, if
                               they exist,
                               should be
                               followed.
      group                  # name of the group that should own the
                               file/directory,
                               as would be fed
                               to `chown'
      insertafter            # If specified, the block will be inserted after
                               the last match of
                               specified regular
                               expression. A
                               special value is
                               available; `EOF'
                               for inserting the
                               block at the end
                               of the file.  If
                               specified regular
                               expresion has no
                               matches, `EOF'
                               will be used
                               instead.
      insertbefore           # If specified, the block will be inserted before
                               the last match of
                               specified regular
                               expression. A
                               special value is
                               available; `BOF'
                               for inserting the
                               block at the
                               beginning of the
                               file.  If
                               specified regular
                               expresion has no
                               matches, the
                               block will be
                               inserted at the
                               end of the file.
      marker                 # The marker line template. "{mark}" will be
                               replaced with
                               "BEGIN" or "END".
      mode                   # mode the file or directory should be. For those
                               used to
                               `/usr/bin/chmod'
                               remember that
                               modes are
                               actually octal
                               numbers (like
                               0644). Leaving
                               off the leading
                               zero will likely
                               have unexpected
                               results. As of
                               version 1.8, the
                               mode may be
                               specified as a
                               symbolic mode
                               (for example,
                               `u+rwx' or
                               `u=rw,g=r,o=r').
      owner                  # name of the user that should own the
                               file/directory,
                               as would be fed
                               to `chown'
      selevel                # level part of the SELinux file context. This is
                               the MLS/MCS
                               attribute,
                               sometimes known
                               as the `range'.
                               `_default'
                               feature works as
                               for `seuser'.
      serole                 # role part of SELinux file context, `_default'
                               feature works as
                               for `seuser'.
      setype                 # type part of SELinux file context, `_default'
                               feature works as
                               for `seuser'.
      seuser                 # user part of SELinux file context. Will default
                               to system policy,
                               if applicable. If
                               set to
                               `_default', it
                               will use the
                               `user' portion of
                               the policy if
                               available
      state                  # Whether the block should be there or not.
      unsafe_writes          # Normally this module uses atomic operations to
                               prevent data
                               corruption or
                               inconsistent
                               reads from the
                               target files,
                               sometimes systems
                               are configured or
                               just broken in
                               ways that prevent
                               this. One example
                               are docker
                               mounted files,
                               they cannot be
                               updated
                               atomically and
                               can only be done
                               in an unsafe
                               manner. This
                               boolean option
                               allows ansible to
                               fall back to
                               unsafe methods of
                               updating files
                               for those cases
                               in which you do
                               not have any
                               other choice. Be
                               aware that this
                               is subject to
                               race conditions
                               and can lead to
                               data corruption.
      validate               # The validation command to run before copying
                               into place. The
                               path to the file
                               to validate is
                               passed in via
                               '%s' which must
                               be present as in
                               the example
                               below. The
                               command is passed
                               securely so shell
                               features like
                               expansion and
                               pipes won't work.
- name: Manage boundary meters
  action: boundary_meter
      apiid=                 # Organizations boundary API ID
      apikey=                # Organizations boundary API KEY
      name=                  # meter name
      state                  # Whether to create or remove the client from
                               boundary
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
- name: Manage bower packages with bower
  action: bower
      name                   # The name of a bower package to install
      offline                # Install packages from local cache, if the
                               packages were
                               installed before
      path=                  # The base path where to install the bower
                               packages
      production             # Install with --production flag
      relative_execpath      # Relative path to bower executable from install
                               path
      state                  # The state of the bower package
      version                # The version to be installed
- name: Manage Ruby Gem dependencies with Bundler
  action: bundler
      binstub_directory      # Only applies if state is `present'. Specifies
                               the directory to
                               install any gem
                               bins files to.
                               When executed the
                               bin files will
                               run within the
                               context of the
                               Gemfile and fail
                               if any required
                               gem dependencies
                               are not
                               installed. If
                               `chdir' is set
                               then this path is
                               relative to
                               `chdir'
      chdir                  # The directory to execute the bundler commands
                               from. This
                               directoy needs to
                               contain a valid
                               Gemfile or
                               .bundle/
                               directory
      clean                  # Only applies if state is `present'. If set
                               removes any gems
                               on the target
                               host that are not
                               in the gemfile
      deployment_mode        # Only applies if state is `present'. If set it
                               will only install
                               gems that are in
                               the default or
                               production
                               groups. Requires
                               a Gemfile.lock
                               file to have been
                               created prior
      exclude_groups         # A list of Gemfile groups to exclude during
                               operations. This
                               only applies when
                               state is
                               `present'.
                               Bundler considers
                               this a
                               'remembered'
                               property for the
                               Gemfile and will
                               automatically
                               exclude groups in
                               future operations
                               even if
                               `exclude_groups'
                               is not set
      executable             # The path to the bundler executable
      extra_args             # A space separated string of additional commands
                               that can be
                               applied to the
                               Bundler command.
                               Refer to the
                               Bundler
                               documentation for
                               more information
      gem_path               # Only applies if state is `present'. Specifies
                               the directory to
                               install the gems
                               into. If `chdir'
                               is set then this
                               path is relative
                               to `chdir'
      gemfile                # Only applies if state is `present'. The path to
                               the gemfile to
                               use to install
                               gems.
      local                  # If set only installs gems from the cache on the
                               target host
      state                  # The desired state of the Gem bundle. `latest'
                               updates gems to
                               the most recent,
                               acceptable
                               version
      user_install           # Only applies if state is `present'. Installs
                               gems in the local
                               user's cache or
                               for all users
- name: Deploy software (or files) from bzr branches
  action: bzr
      dest=                  # Absolute path of where the branch should be
                               cloned to.
      executable             # Path to bzr executable to use. If not supplied,
                               the normal
                               mechanism for
                               resolving binary
                               paths will be
                               used.
      force                  # If `yes', any modified files in the working tree
                               will be
                               discarded.
                               Before 1.9 the
                               default value was
                               "yes".
      name=                  # SSH or HTTP protocol address of the parent
                               branch.
      version                # What version of the branch to clone.  This can
                               be the bzr revno
                               or revid.
- name: Send a message to Campfire
  action: campfire
      msg=                   # The message body.
      notify                 # Send a notification sound before the message.
      room=                  # Room number to which the message should be sent.
      subscription=          # The subscription name to use.
      token=                 # API token.
- name: Manage Linux capabilities
  action: capabilities
      capability=            # Desired capability to set (with operator and
                               flags, if state
                               is `present') or
                               remove (if state
                               is `absent')
      path=                  # Specifies the path to the file to be managed.
      state                  # Whether the entry should be present or absent in
                               the file's
                               capabilities.
- name: create an annotation in circonus
  action: circonus_annotation
      api_key=               # Circonus API key
      category=              # Annotation Category
      description=           # Description of annotation
      duration               # Duration in seconds of annotation, defaults to 0
      start                  # Unix timestamp of event start, defaults to now
      stop                   # Unix timestamp of event end, defaults to now +
                               duration
      title=                 # Title of annotation
- name: Configures a bond port on Cumulus Linux
  action: cl_bond
      addr_method            # Configures the port to use DHCP. To enable this
                               feature use the
                               option `dhcp'.
      alias_name             # Description of the port.
      clag_id                # Specify a unique clag_id for every dual
                               connected bond on
                               each peer switch.
                               The value must be
                               between 1 and
                               65535 and must be
                               the same on both
                               peer switches in
                               order for the
                               bond to be
                               considered dual-
                               connected.
      ipv4                   # List of IPv4 addresses to configure on the
                               interface. In the
                               form
                               `X.X.X.X/YY'.
      ipv6                   # List of IPv6 addresses to configure on the
                               interface. In the
                               form
                               `X:X:X::X/YYY'.
      lacp_bypass_all_active   # Activate all interfaces for bypass. It is
                               recommended to
                               configure
                               all_active
                               instead of using
                               bypass_priority.
      lacp_bypass_allow      # Enable LACP bypass.
      lacp_bypass_period     # Period for enabling LACP bypass. Max value is
                               900.
      lacp_bypass_priority   # List of ports and priorities. Example `"swp1=10,
                               swp2=20"'.
      lacp_rate              # The lacp rate.
      location               # Interface directory location.
      miimon                 # The mii link monitoring interval.
      min_links              # Minimum number of links.
      mode                   # The bond mode, as of Cumulus Linux 2.5 only LACP
                               bond mode is
                               supported.
      mstpctl_bpduguard      # Enables BPDU Guard on a port in vlan-aware mode.
      mstpctl_portadminedge   # Enables admin edge port.
      mstpctl_portnetwork    # Enables bridge assurance in vlan-aware mode.
      mtu                    # Set MTU. Configure Jumbo Frame by setting MTU to
                               `9000'.
      name=                  # Name of the interface.
      pvid                   # In vlan-aware mode, defines vlan that is the
                               untagged vlan.
      slaves=                # Bond members.
      vids                   # In vlan-aware mode, lists VLANs defined under
                               the interface.
      virtual_ip             # Define IPv4 virtual IP used by the Cumulus Linux
                               VRR feature.
      virtual_mac            # Define Ethernet mac associated with Cumulus
                               Linux VRR
                               feature.
      xmit_hash_policy       # Transmit load balancing algorithm. As of Cumulus
                               Linux 2.5 only
                               `layer3+4' policy
                               is supported.
- name: Configures a bridge port on Cumulus Linux
  action: cl_bridge
      addr_method            # Configures the port to use DHCP. To enable this
                               feature use the
                               option `dhcp'.
      alias_name             # Description of the port.
      ipv4                   # List of IPv4 addresses to configure on the
                               interface. In the
                               form
                               `X.X.X.X/YY'.
      ipv6                   # List of IPv6 addresses to configure on the
                               interface. In the
                               form
                               `X:X:X::X/YYY'.
      location               # Interface directory location.
      mstpctl_treeprio       # Set spanning tree root priority. Must be a
                               multiple of 4096.
      mtu                    # Set MTU. Configure Jumbo Frame by setting MTU to
                               `9000'.
      name=                  # Name of the interface.
      ports=                 # List of bridge members.
      pvid                   # In vlan-aware mode, defines vlan that is the
                               untagged vlan.
      stp                    # Enables spanning tree Protocol. As of Cumulus
                               Linux 2.5 the
                               default bridging
                               mode, only per
                               vlan RSTP or
                               802.1d is
                               supported. For
                               the vlan aware
                               mode, only common
                               instance STP is
                               supported
      vids                   # In vlan-aware mode, lists VLANs defined under
                               the interface.
      virtual_ip             # Define IPv4 virtual IP used by the Cumulus Linux
                               VRR feature.
      virtual_mac            # Define Ethernet mac associated with Cumulus
                               Linux VRR
                               feature.
      vlan_aware             # Enables vlan-aware mode.
- name: Install a different Cumulus Linux version.
  action: cl_img_install
      src=                   # The full path to the Cumulus Linux binary image.
                               Can be a local
                               path, http or
                               https URL. If the
                               code version is
                               in the name of
                               the file, the
                               module will
                               assume this is
                               the version of
                               code you wish to
                               install.
      switch_slot            # Switch slots after installing the image. To run
                               the installed
                               code, reboot the
                               switch.
      version                # Inform the module of the exact version one is
                               installing. This
                               overrides the
                               automatic check
                               of version in the
                               file name. For
                               example, if the
                               binary file name
                               is called Cumulus
                               Linux-2.2.3.bin,
                               and version is
                               set to '2.5.0',
                               then the module
                               will assume it is
                               installing
                               '2.5.0' not
                               '2.2.3'. If
                               version is not
                               included, then
                               the module will
                               assume '2.2.3' is
                               the version to
                               install.
- name: Configures a front panel port, loopback or management port on Cumulus Linux.
  action: cl_interface
      addr_method            # Address method.
      alias_name             # Description of the port.
      clagd_enable           # Enables the clagd daemon. This command should
                               only be applied
                               to the clag
                               peerlink
                               interface.
      clagd_peer_ip          # IP address of the directly connected peer switch
                               interface.
      clagd_priority         # Integer that changes the role the switch has in
                               the clag domain.
                               The lower
                               priority switch
                               will assume the
                               primary role. The
                               number can be
                               between 0 and
                               65535.
      clagd_sys_mac          # Clagd system mac address. Recommended to use the
                               range starting
                               with 44:38:39:ff.
                               Needs to be the
                               same between 2
                               Clag switches.
      ipv4                   # List of IPv4 addresses to configure on the
                               interface. In the
                               form
                               `X.X.X.X/YY'.
      ipv6                   # List of IPv6 addresses to configure on the
                               interface. In the
                               form
                               `X:X:X::X/YYY'.
      location               # Interface directory location
      mstpctl_bpduguard      # Enables BPDU Guard on a port in vlan-aware mode.
      mstpctl_portadminedge   # Enables admin edge port.
      mstpctl_portnetwork    # Enables bridge assurance in vlan-aware mode.
      mtu                    # Set MTU. Configure Jumbo Frame by setting MTU to
                               `9000'.
      name=                  # Name of the interface.
      pvid                   # In vlan-aware mode, defines vlan that is the
                               untagged vlan.
      speed                  # Set speed of the swp(front panel) or
                               management(eth0)
                               interface. speed
                               is in MB.
      vids                   # In vlan-aware mode, lists VLANs defined under
                               the interface.
      virtual_ip             # Define IPv4 virtual IP used by the Cumulus Linux
                               VRR feature.
      virtual_mac            # Define Ethernet mac associated with Cumulus
                               Linux VRR
                               feature.
- name: Configure interface enforcement policy on Cumulus Linux
  action: cl_interface_policy
      allowed=               # List of ports to run initial run at 10G.
      location               # Directory to store interface files.
- name: Install Cumulus Linux license
  action: cl_license
      force                  # Force installation of a license. Typically not
                               needed. It is
                               recommended to
                               manually run this
                               command via the
                               ansible command.
                               A reload of
                               switchd is not
                               required. Running
                               the force option
                               in a playbook
                               will break the
                               idempotent state
                               machine of the
                               module and cause
                               the switchd
                               notification to
                               kick in all the
                               time, causing a
                               disruption.
      src=                   # The full path to the license. Can be local path
                               or HTTP URL.
- name: Configure Cumulus Switch port attributes (ports.conf)
  action: cl_ports
      speed_10g              # List of ports to run initial run at 10G.
      speed_40g              # List of ports to run initial run at 40G.
      speed_40g_div_4        # List of 10G ports that will be ganged to form a
                               40G port.
      speed_4_by_10g         # List of 40G ports that will be unganged to run
                               as 4 10G ports.
- name: Create or Delete Anti Affinity Policies at CenturyLink Cloud.
  action: clc_aa_policy
      location=              # Datacenter in which the policy lives/should
                               live.
      name=                  # The name of the Anti Affinity Policy.
      state                  # Whether to create or delete the policy.
      wait                   # Whether to wait for the tasks to finish before
                               returning.
- name: Create or Delete Alert Policies at CenturyLink Cloud.
  action: clc_alert_policy
      alert_recipients       # A list of recipient email ids to notify the
                               alert. This is
                               required for
                               state 'present'
      alias=                 # The alias of your CLC Account
      duration               # The length of time in minutes that the condition
                               must exceed the
                               threshold. This
                               is required for
                               state 'present'
      id                     # The alert policy id. This is mutually exclusive
                               with name
      metric                 # The metric on which to measure the condition
                               that will trigger
                               the alert. This
                               is required for
                               state 'present'
      name                   # The name of the alert policy. This is mutually
                               exclusive with id
      state                  # Whether to create or delete the policy.
      threshold              # The threshold that will trigger the alert when
                               the metric equals
                               or exceeds it.
                               This is required
                               for state
                               'present' This
                               number represents
                               a percentage and
                               must be a value
                               between 5.0 -
                               95.0 that is a
                               multiple of 5.0
- name: deploys a blue print package on a set of servers in CenturyLink Cloud.
  action: clc_blueprint_package
      package_id=            # The package id of the blue print.
      package_params         # The dictionary of arguments required to deploy
                               the blue print.
      server_ids=            # A list of server Ids to deploy the blue print
                               package.
      state                  # Whether to install or un-install the package.
                               Currently it
                               supports only
                               "present" for
                               install action.
      wait                   # Whether to wait for the tasks to finish before
                               returning.
- name: Create/delete/update firewall policies
  action: clc_firewall_policy
      destination            # The list of destination addresses for traffic on
                               the terminating
                               firewall. This is
                               required when
                               state is
                               'present'
      destination_account_alias   # CLC alias for the destination account
      enabled                # Whether the firewall policy is enabled or
                               disabled
      firewall_policy_id     # Id of the firewall policy. This is required to
                               update or delete
                               an existing
                               firewall policy
      location=              # Target datacenter for the firewall policy
      ports                  # The list of ports associated with the policy.
                               TCP and UDP can
                               take in single
                               ports or port
                               ranges.
      source                 # The list  of source addresses for traffic on the
                               originating
                               firewall. This is
                               required when
                               state is
                               'present"
      source_account_alias=   # CLC alias for the source account
      state                  # Whether to create or delete the firewall policy
      wait                   # Whether to wait for the provisioning tasks to
                               finish before
                               returning.
- name: Create/delete Server Groups at Centurylink Cloud
  action: clc_group
      description            # A description of the Server Group
      location               # Datacenter to create the group in. If location
                               is not provided,
                               the group gets
                               created in the
                               default
                               datacenter
                               associated with
                               the account
      name=                  # The name of the Server Group
      parent                 # The parent group of the server group. If parent
                               is not provided,
                               it creates the
                               group at top
                               level.
      state                  # Whether to create or delete the group
      wait                   # Whether to wait for the tasks to finish before
                               returning.
- name: Create, Delete shared loadbalancers in CenturyLink Cloud.
  action: clc_loadbalancer
      alias=                 # The alias of your CLC Account
      description            # A description for the loadbalancer
      location=              # The location of the datacenter where the load
                               balancer resides
                               in
      method                 # - T h e   b a l a n c i n g   m e t h o d   f o
                               r   t h e   l o a
                               d   b a l a n c e
                               r   p o o l
      name=                  # The name of the loadbalancer
      nodes                  # A list of nodes that needs to be added to the
                               load balancer
                               pool
      persistence            # The persistence method for the load balancer
      port                   # Port to configure on the public-facing side of
                               the load balancer
                               pool
      state                  # Whether to create or delete the load balancer
                               pool
      status                 # The status of the loadbalancer
- name: modify servers in CenturyLink Cloud.
  action: clc_modify_server
      alert_policy_id        # The alert policy id to be associated to the
                               server. This is
                               mutually
                               exclusive with 'a
                               lert_policy_name'
      alert_policy_name      # The alert policy name to be associated to the
                               server. This is
                               mutually
                               exclusive with
                               'alert_policy_id'
      anti_affinity_policy_id   # The anti affinity policy id to be set for a
                               hyper scale
                               server. This is
                               mutually
                               exclusive with 'a
                               nti_affinity_poli
                               cy_name'
      anti_affinity_policy_name   # The anti affinity policy name to be set for a
                               hyper scale
                               server. This is
                               mutually
                               exclusive with 'a
                               nti_affinity_poli
                               cy_id'
      cpu                    # How many CPUs to update on the server
      memory                 # Memory (in GB) to set to the server.
      server_ids=            # A list of server Ids to modify.
      state                  # The state to insure that the provided resources
                               are in.
      wait                   # Whether to wait for the provisioning tasks to
                               finish before
                               returning.
- name: Add and Delete public ips on servers in CenturyLink Cloud.
  action: clc_publicip
      ports                  # A list of ports to expose. This is required when
                               state is
                               'present'
      protocol               # The protocol that the public IP will listen for.
      server_ids=            # A list of servers to create public ips on.
      state                  # Determine whether to create or delete public
                               IPs. If present
                               module will not
                               create a second
                               public ip if one
                               already exists.
      wait                   # Whether to wait for the tasks to finish before
                               returning.
- name: Create, Delete, Start and Stop servers in CenturyLink Cloud.
  action: clc_server
      add_public_ip          # Whether to add a public ip to the server
      additional_disks       # The list of additional disks for the server
      alert_policy_id        # The alert policy to assign to the server. This
                               is mutually
                               exclusive with 'a
                               lert_policy_name'
                               .
      alert_policy_name      # The alert policy to assign to the server. This
                               is mutually
                               exclusive with 'a
                               lert_policy_id'.
      alias                  # The account alias to provision the servers
                               under.
      anti_affinity_policy_id   # The anti-affinity policy to assign to the
                               server. This is
                               mutually
                               exclusive with 'a
                               nti_affinity_poli
                               cy_name'.
      anti_affinity_policy_name   # The anti-affinity policy to assign to the
                               server. This is
                               mutually
                               exclusive with 'a
                               nti_affinity_poli
                               cy_id'.
      configuration_id       # Only required for bare metal servers. Specifies
                               the identifier
                               for the specific
                               configuration
                               type of bare
                               metal server to
                               deploy.
      count                  # The number of servers to build (mutually
                               exclusive with
                               exact_count)
      count_group            # Required when exact_count is specified.  The
                               Server Group use
                               to determine how
                               many severs to
                               deploy.
      cpu                    # How many CPUs to provision on the server
      cpu_autoscale_policy_id   # The autoscale policy to assign to the server.
      custom_fields          # The list of custom fields to set on the server.
      description            # The description to set for the server.
      exact_count            # Run in idempotent mode.  Will insure that this
                               exact number of
                               servers are
                               running in the
                               provided group,
                               creating and
                               deleting them to
                               reach that count.
                               Requires
                               count_group to be
                               set.
      group                  # The Server Group to create servers under.
      ip_address             # The IP Address for the server. One is assigned
                               if not provided.
      location               # The Datacenter to create servers in.
      managed_os             # Whether to create the server as 'Managed' or
                               not.
      memory                 # Memory in GB.
      name                   # A 1 to 6 character identifier to use for the
                               server. This is
                               required when
                               state is
                               'present'
      network_id             # The network UUID on which to create servers.
      os_type                # Only required for bare metal servers. Specifies
                               the OS to
                               provision with
                               the bare metal
                               server.
      packages               # The list of blue print packages to run on the
                               server after its
                               created.
      password               # Password for the administrator / root user
      primary_dns            # Primary DNS used by the server.
      public_ip_ports        # A list of ports to allow on the firewall to the
                               servers public
                               ip, if
                               add_public_ip is
                               set to True.
      public_ip_protocol     # The protocol to use for the public ip if
                               add_public_ip is
                               set to True.
      secondary_dns          # Secondary DNS used by the server.
      server_ids             # Required for started, stopped, and absent
                               states. A list of
                               server Ids to
                               insure are
                               started, stopped,
                               or absent.
      source_server_password   # The password for the source server if a clone is
                               specified.
      state                  # The state to insure that the provided resources
                               are in.
      storage_type           # The type of storage to attach to the server.
      template               # The template to use for server creation.  Will
                               search for a
                               template if a
                               partial string is
                               provided. This is
                               required when
                               state is
                               'present'
      ttl                    # The time to live for the server in seconds.  The
                               server will be
                               deleted when this
                               time expires.
      type                   # The type of server to create.
      wait                   # Whether to wait for the provisioning tasks to
                               finish before
                               returning.
- name: Create, Delete and Restore server snapshots in CenturyLink Cloud.
  action: clc_server_snapshot
      expiration_days        # The number of days to keep the server snapshot
                               before it
                               expires.
      server_ids=            # The list of CLC server Ids.
      state                  # The state to insure that the provided resources
                               are in.
      wait                   # Whether to wait for the provisioning tasks to
                               finish before
                               returning.
- name: manage Cloudflare DNS records
  action: cloudflare_dns
      account_api_token=     # Account API token. You can obtain your API key
                               from the bottom
                               of the Cloudflare
                               'My Account'
                               page, found here:
                               https://www.cloud
                               flare.com/a/accou
                               nt
      account_email=         # Account email.
      port                   # S e r v i c e   p o r t .   R e q u i r e d   f
                               o r   C ( t y p e
                               = S R V )
      priority               # R e c o r d   p r i o r i t y .   R e q u i r e
                               d   f o r   C ( t
                               y p e = M X )   a
                               n d   C ( t y p e
                               = S R V )
      proto                  # S e r v i c e   p r o t o c o l .   R e q u i r
                               e d   f o r   C (
                               t y p e = S R V )
      record                 # Record to add. Required if `state=present'.
                               Default is `@'
                               (e.g. the zone
                               name)
      service                # R e c o r d   s e r v i c e .   R e q u i r e d
                               f o r   C ( t y p
                               e = S R V )
      solo                   # Whether the record should be the only one for
                               that record type
                               and record name.
                               Only use with
                               `state=present'
                               This will delete
                               all other records
                               with the same
                               record name and
                               type.
      state                  # Whether the record(s) should exist or not
      timeout                # Timeout for Cloudflare API calls
      ttl                    # The TTL to give the new record. Must be between
                               120 and
                               2,147,483,647
                               seconds, or 1 for
                               automatic.
      type                   # The type of DNS record to create. Required if
                               `state=present'
      value                  # The record value. Required for `state=present'
      weight                 # S e r v i c e   w e i g h t .   R e q u i r e d
                               f o r   C ( t y p
                               e = S R V )
      zone=                  # The name of the Zone to work with (e.g.
                               "example.com").
                               The Zone must
                               already exist.
- name: Create or delete an AWS CloudFormation stack
  action: cloudformation
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      disable_rollback       # If a stacks fails to form, rollback will remove
                               the stack
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      notification_arns      # The Simple Notification Service (SNS) topic ARNs
                               to publish stack
                               related events.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region=                # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used.
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      stack_name=            # name of the cloudformation stack
      stack_policy           # the path of the cloudformation stack policy
      state=                 # If state is "present", stack will be created.
                               If state is
                               "present" and if
                               stack exists and
                               template has
                               changed, it will
                               be updated. If
                               state is
                               "absent", stack
                               will be removed.
      tags                   # Dictionary of tags to associate with stack and
                               it's resources
                               during stack
                               creation. Cannot
                               be updated later.
                               Requires at least
                               Boto version
                               2.6.0.
      template               # The local path of the cloudformation template.
                               This parameter is
                               mutually
                               exclusive with
                               'template_url'.
                               Either one of
                               them is required
                               if "state"
                               parameter is
                               "present" Must
                               give full path to
                               the file,
                               relative to the
                               working
                               directory. If
                               using roles this
                               may look like "ro
                               les/cloudformatio
                               n/files
                               /cloudformation-
                               example.json"
      template_format        # (deprecated) For local templates, allows
                               specification of
                               json or yaml
                               format. Templates
                               are now passed
                               raw to
                               CloudFormation
                               regardless of
                               format. This
                               parameter is
                               ignored since
                               Ansible 2.2.
      template_parameters    # a list of hashes of all the template variables
                               for the stack
      template_url           # Location of file containing the template body.
                               The URL must
                               point to a
                               template (max
                               size 307,200
                               bytes) located in
                               an S3 bucket in
                               the same region
                               as the stack.
                               This parameter is
                               mutually
                               exclusive with
                               'template'.
                               Either one of
                               them is required
                               if "state"
                               parameter is
                               "present"
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: Obtain facts about an AWS CloudFormation stack
  action: cloudformation_facts
      all_facts              # Get all stack information for the stack
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      stack_events           # Get stack events for the stack
      stack_name=            # The name or id of the CloudFormation stack
      stack_policy           # Get stack policy for the stack
      stack_resources        # Get stack resources for the stack
      stack_template         # Get stack template body for the stack
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: manage CloudTrail creation and deletion
  action: cloudtrail
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      include_global_events   # record API calls from global services such as
                               IAM and STS?
      name                   # name for given CloudTrail configuration. This is
                               a primary key and
                               is used to
                               identify the
                               configuration.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               EC2_REGION
                               environment
                               variable, if any,
                               is used.
      s3_bucket_prefix       # bucket to place CloudTrail in. this bucket
                               should exist and
                               have the proper
                               policy. See http:
                               //docs.aws.amazon
                               .com/awscloudtrai
                               l/latest/userguid
                               e/aggregating_log
                               s_regions_bucket_
                               policy.html
                               required when
                               state=enabled.
      s3_key_prefix          # prefix to keys in bucket. A trailing slash is
                               not necessary and
                               will be removed.
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state=                 # add or remove CloudTrail configuration.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: Manage CloudWatch Event rules and targets
  action: cloudwatchevent_rule
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      description            # A description of the rule
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      event_pattern          # A string pattern (in valid JSON format) that is
                               used to match
                               against incoming
                               events to
                               determine if the
                               rule should be
                               triggered
      name=                  # The name of the rule you are creating, updating
                               or deleting. No
                               spaces or special
                               characters
                               allowed (i.e.
                               must match
                               `[\.\-_A-
                               Za-z0-9]+')
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      role_arn               # The Amazon Resource Name (ARN) of the IAM role
                               associated with
                               the rule
      schedule_expression    # A cron or rate expression that defines the
                               schedule the rule
                               will trigger on.
                               For example,
                               `cron(0 20 * * ?
                               *'), `rate(5
                               minutes')
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state                  # Whether the rule is present (and enabled),
                               disabled, or
                               absent
      targets                # A dictionary array of targets to add to or
                               update for the
                               rule, in the form
                               `{ id: [string],
                               arn: [string],
                               input: [valid
                               JSON string],
                               input_path:
                               [valid JSONPath
                               string] }'. `id'
                               [required] is the
                               unique target
                               assignment ID.
                               `arn' (required)
                               is the Amazon
                               Resource Name
                               associated with
                               the target.
                               `input'
                               (optional) is a
                               JSON object that
                               will override the
                               event data when
                               passed to the
                               target.
                               `input_path'
                               (optional) is a
                               JSONPath string
                               (e.g. `$.detail')
                               that specifies
                               the part of the
                               event data to be
                               passed to the
                               target. If
                               neither `input'
                               nor `input_path'
                               is specified,
                               then the entire
                               event is passed
                               to the target in
                               JSON form.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: Executes a command on a remote node
  action: command
      chdir                  # cd into this directory before running the
                               command
      creates                # a filename or (since 2.0) glob pattern, when it
                               already exists,
                               this step will
                               *not* be run.
      executable             # change the shell used to execute the command.
                               Should be an
                               absolute path to
                               the executable.
      free_form=             # the command module takes a free form command to
                               run.  There is no
                               parameter
                               actually named
                               'free form'. See
                               the examples!
      removes                # a filename or (since 2.0) glob pattern, when it
                               does not exist,
                               this step will
                               *not* be run.
      warn                   # if command warnings are on in ansible.cfg, do
                               not warn about
                               this particular
                               line if set to
                               no/false.
- name: Dependency Manager for PHP
  action: composer
      arguments              # Composer arguments like required package,
                               version and so on
      command                # Composer command like "install", "update" and so
                               on
      ignore_platform_reqs   # Ignore php, hhvm, lib-* and ext-* requirements
                               and force the
                               installation even
                               if the local
                               machine does not
                               fulfill these.
      no_dev                 # Disables installation of require-dev packages (
                               see --no-dev )
      no_plugins             # Disables all plugins ( see --no-plugins )
      no_scripts             # Skips the execution of all scripts defined in
                               composer.json (
                               see --no-scripts
                               )
      optimize_autoloader    # Optimize autoloader during autoloader dump ( see
                               --optimize-
                               autoloader ).
                               Convert PSR-0/4
                               autoloading to
                               classmap to get a
                               faster
                               autoloader. This
                               is recommended
                               especially for
                               production, but
                               can take a bit of
                               time to run so it
                               is currently not
                               done by default.
      prefer_dist            # Forces installation from package dist even for
                               dev versions (
                               see --prefer-dist
                               )
      prefer_source          # Forces installation from package sources when
                               possible ( see
                               --prefer-source )
      working_dir=           # Directory of your project ( see --working-dir )
- name: Add, modify & delete services within a consul cluster.
  action: consul
      check_id               # an ID for the service check, defaults to the
                               check name,
                               ignored if part
                               of a service
                               definition.
      check_name             # a name for the service check, defaults to the
                               check id.
                               required if
                               standalone,
                               ignored if part
                               of service
                               definition.
      host                   # host of the consul agent defaults to localhost
      http                   # checks can be registered with an http endpoint.
                               This means that
                               consul will check
                               that the http
                               endpoint returns
                               a successful http
                               status. Interval
                               must also be
                               provided with
                               this option.
      interval               # the interval at which the service check will be
                               run. This is a
                               number with a s
                               or m suffix to
                               signify the units
                               of seconds or
                               minutes e.g 15s
                               or 1m. If no
                               suffix is
                               supplied, m will
                               be used by
                               default e.g. 1
                               will be 1m.
                               Required if the
                               script param is
                               specified.
      notes                  # Notes to attach to check when registering it.
      port                   # the port on which the consul agent is running
      scheme                 # the protocol scheme on which the consul agent is
                               running
      script                 # the script/command that will be run periodically
                               to check the
                               health of the
                               service. Scripts
                               require an
                               interval and vise
                               versa
      service_address        # the address to advertise that the service will
                               be listening on.
                               This value will
                               be passed as the
                               `Address'
                               parameter to
                               Consul's /v1/agen
                               t/service/registe
                               r API method, so
                               refer to the
                               Consul API
                               documentation for
                               further details.
      service_id             # the ID for the service, must be unique per node,
                               defaults to the
                               service name if
                               the service name
                               is supplied
      service_name           # Unique name for the service on a node, must be
                               unique per node,
                               required if
                               registering a
                               service. May be
                               ommitted if
                               registering a
                               node level check
      service_port           # the port on which the service is listening
                               required for
                               registration of a
                               service, i.e. if
                               service_name or
                               service_id is set
      state=                 # register or deregister the consul service,
                               defaults to
                               present
      tags                   # a list of tags that will be attached to the
                               service
                               registration.
      timeout                # A custom HTTP check timeout. The consul default
                               is 10 seconds.
                               Similar to the
                               interval this is
                               a number with a s
                               or m suffix to
                               signify the units
                               of seconds or
                               minutes, e.g. 15s
                               or 1m.
      token                  # the token key indentifying an ACL rule set. May
                               be required to
                               register
                               services.
      ttl                    # checks can be registered with a ttl instead of a
                               script and
                               interval this
                               means that the
                               service will
                               check in with the
                               agent before the
                               ttl expires. If
                               it doesn't the
                               check will be
                               considered
                               failed. Required
                               if registering a
                               check and the
                               script an
                               interval are
                               missing Similar
                               to the interval
                               this is a number
                               with a s or m
                               suffix to signify
                               the units of
                               seconds or
                               minutes e.g 15s
                               or 1m. If no
                               suffix is
                               supplied, m will
                               be used by
                               default e.g. 1
                               will be 1m
      validate_certs         # whether to verify the tls certificate of the
                               consul agent
- name: manipulate consul acl keys and rules
  action: consul_acl
      host                   # host of the consul agent defaults to localhost
      mgmt_token             # a management token is required to manipulate the
                               acl lists
      name                   # the name that should be associated with the acl
                               key, this is
                               opaque to Consul
      port                   # the port on which the consul agent is running
      rules                  # an list of the rules that should be associated
                               with a given
                               token.
      scheme                 # the protocol scheme on which the consul agent is
                               running
      state                  # whether the ACL pair should be present or absent
      token                  # the token key indentifying an ACL rule set. If
                               generated by
                               consul this will
                               be a UUID.
      token_type             # the type of token that should be created, either
                               management or
                               client
      validate_certs         # whether to verify the tls certificate of the
                               consul agent
- name: Manipulate entries in the key/value store of a consul cluster.
  action: consul_kv
      cas                    # used when acquiring a lock with a session. If
                               the cas is 0,
                               then Consul will
                               only put the key
                               if it does not
                               already exist. If
                               the cas value is
                               non-zero, then
                               the key is only
                               set if the index
                               matches the
                               ModifyIndex of
                               that key.
      flags                  # opaque integer value that can be passed when
                               setting a value.
      host                   # host of the consul agent defaults to localhost
      key=                   # the key at which the value should be stored.
      port                   # the port on which the consul agent is running
      recurse                # if the key represents a prefix, each entry with
                               the prefix can be
                               retrieved by
                               setting this to
                               true.
      scheme                 # the protocol scheme on which the consul agent is
                               running
      session                # the session that should be used to acquire or
                               release a lock
                               associated with a
                               key/value pair
      state                  # the action to take with the supplied key and
                               value. If the
                               state is
                               'present', the
                               key contents will
                               be set to the
                               value supplied,
                               'changed' will be
                               set to true only
                               if the value was
                               different to the
                               current contents.
                               The state
                               'absent' will
                               remove the
                               key/value pair,
                               again 'changed'
                               will be set to
                               true only if the
                               key actually
                               existed prior to
                               the removal. An
                               attempt can be
                               made to obtain or
                               free the lock
                               associated with a
                               key/value pair
                               with the states
                               'acquire' or
                               'release'
                               respectively. a
                               valid session
                               must be supplied
                               to make the
                               attempt changed
                               will be true if
                               the attempt is
                               successful, false
                               otherwise.
      token                  # the token key indentifying an ACL rule set that
                               controls access
                               to the key value
                               pair
      validate_certs         # whether to verify the tls certificate of the
                               consul agent
      value=                 # the value should be associated with the given
                               key, required if
                               state is present
- name: manipulate consul sessions
  action: consul_session
      behavior               # the optional behavior that can be attached to
                               the session when
                               it is created.
                               This can be set
                               to either
                               ‘release’ or
                               ‘delete’. This
                               controls the
                               behavior when a
                               session is
                               invalidated.
      checks                 # a list of checks that will be used to verify the
                               session health.
                               If all the checks
                               fail, the session
                               will be
                               invalidated and
                               any locks
                               associated with
                               the session will
                               be release and
                               can be acquired
                               once the
                               associated lock
                               delay has
                               expired.
      datacenter             # name of the datacenter in which the session
                               exists or should
                               be created.
      delay                  # the optional lock delay that can be attached to
                               the session when
                               it is created.
                               Locks for
                               invalidated
                               sessions ar
                               blocked from
                               being acquired
                               until this delay
                               has expired.
                               Durations are in
                               seconds
      host                   # host of the consul agent defaults to localhost
      name                   # the name that should be associated with the
                               session. This is
                               opaque to Consul
                               and not required.
      node                   # the name of the node that with which the session
                               will be
                               associated. by
                               default this is
                               the name of the
                               agent.
      port                   # the port on which the consul agent is running
      scheme                 # the protocol scheme on which the consul agent is
                               running
      state                  # whether the session should be present i.e.
                               created if it
                               doesn't exist, or
                               absent, removed
                               if present. If
                               created, the ID
                               for the session
                               is returned in
                               the output. If
                               absent, the name
                               or ID is required
                               to remove the
                               session. Info for
                               a single session,
                               all the sessions
                               for a node or all
                               available
                               sessions can be
                               retrieved by
                               specifying info,
                               node or list for
                               the state; for
                               node or info, the
                               node name or
                               session id is
                               required as
                               parameter.
      validate_certs         # whether to verify the tls certificate of the
                               consul agent
- name: Copies files to remote locations.
  action: copy
      backup                 # Create a backup file including the timestamp
                               information so
                               you can get the
                               original file
                               back if you
                               somehow clobbered
                               it incorrectly.
      content                # When used instead of 'src', sets the contents of
                               a file directly
                               to the specified
                               value. This is
                               for simple
                               values, for
                               anything complex
                               or with
                               formatting please
                               switch to the
                               template module.
      dest=                  # Remote absolute path where the file should be
                               copied to. If src
                               is a directory,
                               this must be a
                               directory too.
      directory_mode         # When doing a recursive copy set the mode for the
                               directories. If
                               this is not set
                               we will use the
                               system defaults.
                               The mode is only
                               set on
                               directories which
                               are newly
                               created, and will
                               not affect those
                               that already
                               existed.
      follow                 # This flag indicates that filesystem links, if
                               they exist,
                               should be
                               followed.
      force                  # the default is `yes', which will replace the
                               remote file when
                               contents are
                               different than
                               the source. If
                               `no', the file
                               will only be
                               transferred if
                               the destination
                               does not exist.
      group                  # name of the group that should own the
                               file/directory,
                               as would be fed
                               to `chown'
      mode                   # mode the file or directory should be. For those
                               used to
                               `/usr/bin/chmod'
                               remember that
                               modes are
                               actually octal
                               numbers (like
                               0644). Leaving
                               off the leading
                               zero will likely
                               have unexpected
                               results. As of
                               version 1.8, the
                               mode may be
                               specified as a
                               symbolic mode
                               (for example,
                               `u+rwx' or
                               `u=rw,g=r,o=r').
      owner                  # name of the user that should own the
                               file/directory,
                               as would be fed
                               to `chown'
      remote_src             # If False, it will search for src at
                               originating/maste
                               r machine, if
                               True it will go
                               to the
                               remote/target
                               machine for the
                               src. Default is
                               False. Currently
                               remote_src does
                               not support
                               recursive
                               copying.
      selevel                # level part of the SELinux file context. This is
                               the MLS/MCS
                               attribute,
                               sometimes known
                               as the `range'.
                               `_default'
                               feature works as
                               for `seuser'.
      serole                 # role part of SELinux file context, `_default'
                               feature works as
                               for `seuser'.
      setype                 # type part of SELinux file context, `_default'
                               feature works as
                               for `seuser'.
      seuser                 # user part of SELinux file context. Will default
                               to system policy,
                               if applicable. If
                               set to
                               `_default', it
                               will use the
                               `user' portion of
                               the policy if
                               available
      src                    # Local path to a file to copy to the remote
                               server; can be
                               absolute or
                               relative. If path
                               is a directory,
                               it is copied
                               recursively. In
                               this case, if
                               path ends with
                               "/", only inside
                               contents of that
                               directory are
                               copied to
                               destination.
                               Otherwise, if it
                               does not end with
                               "/", the
                               directory itself
                               with all contents
                               is copied. This
                               behavior is
                               similar to Rsync.
      unsafe_writes          # Normally this module uses atomic operations to
                               prevent data
                               corruption or
                               inconsistent
                               reads from the
                               target files,
                               sometimes systems
                               are configured or
                               just broken in
                               ways that prevent
                               this. One example
                               are docker
                               mounted files,
                               they cannot be
                               updated
                               atomically and
                               can only be done
                               in an unsafe
                               manner. This
                               boolean option
                               allows ansible to
                               fall back to
                               unsafe methods of
                               updating files
                               for those cases
                               in which you do
                               not have any
                               other choice. Be
                               aware that this
                               is subject to
                               race conditions
                               and can lead to
                               data corruption.
      validate               # The validation command to run before copying
                               into place. The
                               path to the file
                               to validate is
                               passed in via
                               '%s' which must
                               be present as in
                               the example
                               below. The
                               command is passed
                               securely so shell
                               features like
                               expansion and
                               pipes won't work.
- name: Manages Perl library dependencies.
  action: cpanm
      executable             # Override the path to the cpanm executable
      from_path              # The local directory from where to install
      installdeps            # Only install dependencies
      locallib               # Specify the install base to install modules
      mirror                 # Specifies the base URL for the CPAN mirror to
                               use
      mirror_only            # Use the mirror's index file instead of the CPAN
                               Meta DB
      name                   # The name of the Perl library to install. You may
                               use the "full
                               distribution
                               path", e.g.  MIYA
                               GAWA/Plack-0.99_0
                               5.tar.gz
      notest                 # Do not run unit tests
      system_lib             # Use this if you want to install modules to the
                               system perl
                               include path. You
                               must be root or
                               have
                               "passwordless"
                               sudo for this to
                               work. This uses
                               the cpanm
                               commandline
                               option '--sudo',
                               which has nothing
                               to do with
                               ansible privilege
                               escalation.
      version                # minimum version of perl module to consider
                               acceptable
- name: Manage cron.d and crontab entries.
  action: cron
      backup                 # If set, create a backup of the crontab before it
                               is modified. The
                               location of the
                               backup is
                               returned in the
                               `backup_file'
                               variable by this
                               module.
      cron_file              # If specified, uses this file instead of an
                               individual user's
                               crontab. If this
                               is a relative
                               path, it is
                               interpreted with
                               respect to
                               /etc/cron.d. (If
                               it is absolute,
                               it will typically
                               be /etc/crontab).
                               To use the
                               `cron_file'
                               parameter you
                               must specify the
                               `user' as well.
      day                    # Day of the month the job should run ( 1-31, *,
                               */2, etc )
      disabled               # If the job should be disabled (commented out) in
                               the crontab. Only
                               has effect if
                               state=present
      env                    # If set, manages a crontab's environment
                               variable. New
                               variables are
                               added on top of
                               crontab. "name"
                               and "value"
                               parameters are
                               the name and the
                               value of
                               environment
                               variable.
      hour                   # Hour when the job should run ( 0-23, *, */2, etc
                               )
      insertafter            # Used with `state=present' and `env'. If
                               specified, the
                               environment
                               variable will be
                               inserted after
                               the declaration
                               of specified
                               environment
                               variable.
      insertbefore           # Used with `state=present' and `env'. If
                               specified, the
                               environment
                               variable will be
                               inserted before
                               the declaration
                               of specified
                               environment
                               variable.
      job                    # The command to execute or, if env is set, the
                               value of
                               environment
                               variable.
                               Required if
                               state=present.
      minute                 # Minute when the job should run ( 0-59, *, */2,
                               etc )
      month                  # Month of the year the job should run ( 1-12, *,
                               */2, etc )
      name                   # Description of a crontab entry or, if env is
                               set, the name of
                               environment
                               variable.
                               Required if
                               state=absent.
                               Note that if name
                               is not set and
                               state=present,
                               then a new
                               crontab entry
                               will always be
                               created,
                               regardless of
                               existing ones.
      reboot                 # If the job should be run at reboot. This option
                               is deprecated.
                               Users should use
                               special_time.
      special_time           # Special time specification nickname.
      state                  # Whether to ensure the job or environment
                               variable is
                               present or
                               absent.
      user                   # The specific user whose crontab should be
                               modified.
      weekday                # Day of the week that the job should run ( 0-6
                               for Sunday-
                               Saturday, *, etc
                               )
- name: Manage variables in crontabs
  action: cronvar
      backup                 # If set, create a backup of the crontab before it
                               is modified. The
                               location of the
                               backup is
                               returned in the
                               `backup' variable
                               by this module.
      cron_file              # If specified, uses this file instead of an
                               individual user's
                               crontab. Without
                               a leading /, this
                               is assumed to be
                               in /etc/cron.d.
                               With a leading /,
                               this is taken as
                               absolute.
      insertafter            # Used with `state=present'. If specified, the
                               variable will be
                               inserted after
                               the variable
                               specified.
      insertbefore           # Used with `state=present'. If specified, the
                               variable will be
                               inserted just
                               before the
                               variable
                               specified.
      name=                  # Name of the crontab variable.
      state                  # Whether to ensure that the variable is present
                               or absent.
      user                   # The specific user whose crontab should be
                               modified.
      value                  # The value to set this variable to.  Required if
                               state=present.
- name: Encrypted Linux block devices
  action: crypttab
      backing_device         # Path to the underlying block device or file, or
                               the UUID of a
                               block-device
                               prefixed with
                               `UUID='
      name=                  # Name of the encrypted block device as it appears
                               in the
                               `/etc/crypttab'
                               file, or
                               optionaly
                               prefixed with
                               `/dev/mapper/',
                               as it appears in
                               the filesystem.
                               `/dev/mapper/'
                               will be stripped
                               from `name'.
      opts                   # A comma-delimited list of options. See
                               `crypttab(5' )
                               for details.
      password               # Encryption password, the path to a file
                               containing the
                               pasword, or
                               'none' or '-' if
                               the password
                               should be entered
                               at boot.
      path                   # Path to file to use instead of `/etc/crypttab'.
                               This might be
                               useful in a
                               chroot
                               environment.
      state=                 # Use `present' to add a line to `/etc/crypttab'
                               or update it's
                               definition if
                               already present.
                               Use `absent' to
                               remove a line
                               with matching
                               `name'. Use
                               `opts_present' to
                               add options to
                               those already
                               present; options
                               with different
                               values will be
                               updated. Use
                               `opts_absent' to
                               remove options
                               from the existing
                               set.
- name: Manages accounts on Apache CloudStack based clouds.
  action: cs_account
      account_type           # Type of the account.
      api_http_method        # HTTP method used.
      api_key                # API key of the CloudStack API.
      api_region             # Name of the ini section in the `cloustack.ini'
                               file.
      api_secret             # Secret key of the CloudStack API.
      api_timeout            # HTTP timeout.
      api_url                # URL of the CloudStack API e.g.
                               https://cloud.exa
                               mple.com/client/a
                               pi.
      domain                 # Domain the account is related to.
      email                  # Email of the user to be created if account did
                               not exist.
                               Required on
                               `state=present'.
      first_name             # First name of the user to be created if account
                               did not exist.
                               Required on
                               `state=present'.
      last_name              # Last name of the user to be created if account
                               did not exist.
                               Required on
                               `state=present'.
      name=                  # Name of account.
      network_domain         # Network domain of the account.
      password               # Password of the user to be created if account
                               did not exist.
                               Required on
                               `state=present'.
      poll_async             # Poll async jobs until job has finished.
      state                  # State of the account. `unlocked' is an alias for
                               `enabled'.
      timezone               # Timezone of the user to be created if account
                               did not exist.
      username               # Username of the user to be created if account
                               did not exist.
                               Required on
                               `state=present'.
- name: Manages affinity groups on Apache CloudStack based clouds.
  action: cs_affinitygroup
      account                # Account the affinity group is related to.
      affinty_type           # Type of the affinity group. If not specified,
                               first found
                               affinity type is
                               used.
      api_http_method        # HTTP method used.
      api_key                # API key of the CloudStack API.
      api_region             # Name of the ini section in the `cloustack.ini'
                               file.
      api_secret             # Secret key of the CloudStack API.
      api_timeout            # HTTP timeout.
      api_url                # URL of the CloudStack API e.g.
                               https://cloud.exa
                               mple.com/client/a
                               pi.
      description            # Description of the affinity group.
      domain                 # Domain the affinity group is related to.
      name=                  # Name of the affinity group.
      poll_async             # Poll async jobs until job has finished.
      project                # Name of the project the affinity group is
                               related to.
      state                  # State of the affinity group.
- name: Manages host clusters on Apache CloudStack based clouds.
  action: cs_cluster
      api_http_method        # HTTP method used.
      api_key                # API key of the CloudStack API.
      api_region             # Name of the ini section in the `cloustack.ini'
                               file.
      api_secret             # Secret key of the CloudStack API.
      api_timeout            # HTTP timeout.
      api_url                # URL of the CloudStack API e.g.
                               https://cloud.exa
                               mple.com/client/a
                               pi.
      cluster_type           # Type of the cluster. Required if `state=present'
      guest_vswitch_name     # Name of virtual switch used for guest traffic in
                               the cluster. This
                               would override
                               zone wide traffic
                               label setting.
      guest_vswitch_type     # Type of virtual switch used for guest traffic in
                               the cluster.
                               Allowed values
                               are, vmwaresvs
                               (for VMware
                               standard vSwitch)
                               and vmwaredvs
                               (for VMware
                               distributed
                               vSwitch)
      hypervisor             # Name the hypervisor to be used. Required if
                               `state=present'.
      name=                  # name of the cluster.
      ovm3_cluster           # Ovm3 native OCFS2 clustering enabled for
                               cluster.
      ovm3_pool              # Ovm3 native pooling enabled for cluster.
      ovm3_vip               # Ovm3 vip to use for pool (and cluster).
      password               # Password for the cluster.
      pod                    # Name of the pod in which the cluster belongs to.
      public_vswitch_name    # Name of virtual switch used for public traffic
                               in the cluster.
                               This would
                               override zone
                               wide traffic
                               label setting.
      public_vswitch_type    # Type of virtual switch used for public traffic
                               in the cluster.
                               Allowed values
                               are, vmwaresvs
                               (for VMware
                               standard vSwitch)
                               and vmwaredvs
                               (for VMware
                               distributed
                               vSwitch)
      state                  # State of the cluster.
      url                    # URL for the cluster
      username               # Username for the cluster.
      vms_ip_address         # IP address of the VSM associated with this
                               cluster.
      vms_password           # Password for the VSM associated with this
                               cluster.
      vms_username           # Username for the VSM associated with this
                               cluster.
      zone                   # Name of the zone in which the cluster belongs
                               to. If not set,
                               default zone is
                               used.
- name: Manages configuration on Apache CloudStack based clouds.
  action: cs_configuration
      account                # Ensure the value for corresponding account.
      api_http_method        # HTTP method used.
      api_key                # API key of the CloudStack API.
      api_region             # Name of the ini section in the `cloustack.ini'
                               file.
      api_secret             # Secret key of the CloudStack API.
      api_timeout            # HTTP timeout.
      api_url                # URL of the CloudStack API e.g.
                               https://cloud.exa
                               mple.com/client/a
                               pi.
      cluster                # Ensure the value for corresponding cluster.
      domain                 # Domain the account is related to. Only
                               considered if
                               `account' is
                               used.
      name=                  # Name of the configuration.
      storage                # Ensure the value for corresponding storage pool.
      value=                 # Value of the configuration.
      zone                   # Ensure the value for corresponding zone.
- name: Manages domains on Apache CloudStack based clouds.
  action: cs_domain
      api_http_method        # HTTP method used.
      api_key                # API key of the CloudStack API.
      api_region             # Name of the ini section in the `cloustack.ini'
                               file.
      api_secret             # Secret key of the CloudStack API.
      api_timeout            # HTTP timeout.
      api_url                # URL of the CloudStack API e.g.
                               https://cloud.exa
                               mple.com/client/a
                               pi.
      clean_up               # Clean up all domain resources like child domains
                               and accounts.
                               Considered on
                               `state=absent'.
      network_domain         # Network domain for networks in the domain.
      path=                  # Path of the domain. Prefix `ROOT/' or `/ROOT/'
                               in path is
                               optional.
      poll_async             # Poll async jobs until job has finished.
      state                  # State of the domain.
- name: Gather facts on instances of Apache CloudStack based clouds.
  action: cs_facts
      filter                 # Filter for a specific fact.
- name: Manages firewall rules on Apache CloudStack based clouds.
  action: cs_firewall
      account                # Account the firewall rule is related to.
      api_http_method        # HTTP method used.
      api_key                # API key of the CloudStack API.
      api_region             # Name of the ini section in the `cloustack.ini'
                               file.
      api_secret             # Secret key of the CloudStack API.
      api_timeout            # HTTP timeout.
      api_url                # URL of the CloudStack API e.g.
                               https://cloud.exa
                               mple.com/client/a
                               pi.
      cidr                   # CIDR (full notation) to be used for firewall
                               rule.
      domain                 # Domain the firewall rule is related to.
      end_port               # End port for this rule. Considered if
                               `protocol=tcp' or
                               `protocol=udp'.
                               If not specified,
                               equal
                               `start_port'.
      icmp_code              # Error code for this icmp message. Considered if
                               `protocol=icmp'.
      icmp_type              # Type of the icmp message being sent. Considered
                               if
                               `protocol=icmp'.
      ip_address             # Public IP address the ingress rule is assigned
                               to. Required if
                               `type=ingress'.
      network                # Network the egress rule is related to. Required
                               if `type=egress'.
      poll_async             # Poll async jobs until job has finished.
      project                # Name of the project the firewall rule is related
                               to.
      protocol               # Protocol of the firewall rule. `all' is only
                               available if
                               `type=egress'
      start_port             # Start port for this rule. Considered if
                               `protocol=tcp' or
                               `protocol=udp'.
      state                  # State of the firewall rule.
      type                   # Type of the firewall rule.
      zone                   # Name of the zone in which the virtual machine is
                               in. If not set,
                               default zone is
                               used.
- name: Manages instances and virtual machines on Apache CloudStack based clouds.
  action: cs_instance
      account                # Account the instance is related to.
      affinity_groups        # Affinity groups names to be applied to the new
                               instance.
      api_http_method        # HTTP method used.
      api_key                # API key of the CloudStack API.
      api_region             # Name of the ini section in the `cloustack.ini'
                               file.
      api_secret             # Secret key of the CloudStack API.
      api_timeout            # HTTP timeout.
      api_url                # URL of the CloudStack API e.g.
                               https://cloud.exa
                               mple.com/client/a
                               pi.
      cpu                    # The number of CPUs to allocate to the instance,
                               used with custom
                               service offerings
      cpu_speed              # The clock speed/shares allocated to the
                               instance, used
                               with custom
                               service offerings
      disk_offering          # Name of the disk offering to be used.
      disk_size              # Disk size in GByte required if deploying
                               instance from
                               ISO.
      display_name           # Custom display name of the instances. Display
                               name will be set
                               to `name' if not
                               specified. Either
                               `name' or
                               `display_name' is
                               required.
      domain                 # Domain the instance is related to.
      force                  # Force stop/start the instance if required to
                               apply changes,
                               otherwise a
                               running instance
                               will not be
                               changed.
      group                  # Group in where the new instance should be in.
      hypervisor             # Name the hypervisor to be used for creating the
                               new instance.
                               Relevant when
                               using
                               `state=present',
                               but only
                               considered if not
                               set on
                               ISO/template. If
                               not set or found
                               on ISO/template,
                               first found
                               hypervisor will
                               be used.
      ip6_address            # IPv6 address for default instance's network.
      ip_address             # IPv4 address for default instance's network
                               during creation.
      ip_to_networks         # List of mappings in the form {'network':
                               NetworkName,
                               'ip': 1.2.3.4}
                               Mutually
                               exclusive with
                               `networks'
                               option.
      iso                    # Name or id of the ISO to be used for creating
                               the new instance.
                               Required when
                               using
                               `state=present'.
                               Mutually
                               exclusive with
                               `template'
                               option.
      keyboard               # Keyboard device type for the instance.
      memory                 # The memory allocated to the instance, used with
                               custom service
                               offerings
      name                   # Host name of the instance. `name' can only
                               contain ASCII
                               letters. Name
                               will be generated
                               (UUID) by
                               CloudStack if not
                               specified and can
                               not be changed
                               afterwards.
                               Either `name' or
                               `display_name' is
                               required.
      networks               # List of networks to use for the new instance.
      poll_async             # Poll async jobs until job has finished.
      project                # Name of the project the instance to be deployed
                               in.
      root_disk_size         # Root disk size in GByte required if deploying
                               instance with KVM
                               hypervisor and
                               want resize the
                               root disk size at
                               startup (need
                               CloudStack >=
                               4.4, cloud-
                               initramfs-
                               growroot
                               installed and
                               enabled in the
                               template)
      security_groups        # List of security groups the instance to be
                               applied to.
      service_offering       # Name or id of the service offering of the new
                               instance. If not
                               set, first found
                               service offering
                               is used.
      ssh_key                # Name of the SSH key to be deployed on the new
                               instance.
      state                  # State of the instance.
      tags                   # List of tags. Tags are a list of dictionaries
                               having keys `key'
                               and `value'. If
                               you want to
                               delete all tags,
                               set a empty list
                               e.g. `tags: []'.
      template               # Name or id of the template to be used for
                               creating the new
                               instance.
                               Required when
                               using
                               `state=present'.
                               Mutually
                               exclusive with
                               `ISO' option.
      template_filter        # Name of the filter used to search for the
                               template or iso.
                               Used for params
                               `iso' or
                               `template' on
                               `state=present'.
      user_data              # Optional data (ASCII) that can be sent to the
                               instance upon a
                               successful
                               deployment. The
                               data will be
                               automatically
                               base64 encoded.
                               Consider
                               switching to
                               HTTP_POST by
                               using `CLOUDSTACK
                               _METHOD=post' to
                               increase the
                               HTTP_GET size
                               limit of 2KB to
                               32 KB.
      zone                   # Name of the zone in which the instance shoud be
                               deployed. If not
                               set, default zone
                               is used.
- name: Gathering facts from the API of instances from Apache CloudStack based clouds.
  action: cs_instance_facts
      account                # Account the instance is related to.
      api_http_method        # HTTP method used.
      api_key                # API key of the CloudStack API.
      api_region             # Name of the ini section in the `cloustack.ini'
                               file.
      api_secret             # Secret key of the CloudStack API.
      api_timeout            # HTTP timeout.
      api_url                # URL of the CloudStack API e.g.
                               https://cloud.exa
                               mple.com/client/a
                               pi.
      domain                 # Domain the instance is related to.
      name=                  # Name or display name of the instance.
      project                # Project the instance is related to.
- name: Manages instance groups on Apache CloudStack based clouds.
  action: cs_instancegroup
      account                # Account the instance group is related to.
      api_http_method        # HTTP method used.
      api_key                # API key of the CloudStack API.
      api_region             # Name of the ini section in the `cloustack.ini'
                               file.
      api_secret             # Secret key of the CloudStack API.
      api_timeout            # HTTP timeout.
      api_url                # URL of the CloudStack API e.g.
                               https://cloud.exa
                               mple.com/client/a
                               pi.
      domain                 # Domain the instance group is related to.
      name=                  # Name of the instance group.
      project                # Project the instance group is related to.
      state                  # State of the instance group.
- name: Manages public IP address associations on Apache CloudStack based clouds.
  action: cs_ip_address
      account                # Account the IP address is related to.
      api_http_method        # HTTP method used.
      api_key                # API key of the CloudStack API.
      api_region             # Name of the ini section in the `cloustack.ini'
                               file.
      api_secret             # Secret key of the CloudStack API.
      api_timeout            # HTTP timeout.
      api_url                # URL of the CloudStack API e.g.
                               https://cloud.exa
                               mple.com/client/a
                               pi.
      domain                 # Domain the IP address is related to.
      ip_address             # Public IP address. Required if `state=absent'
      network                # Network the IP address is related to.
      poll_async             # Poll async jobs until job has finished.
      project                # Name of the project the IP address is related
                               to.
      vpc                    # VPC the IP address is related to.
      zone                   # Name of the zone in which the IP address is in.
                               If not set,
                               default zone is
                               used.
- name: Manages ISO images on Apache CloudStack based clouds.
  action: cs_iso
      account                # Account the ISO is related to.
      api_http_method        # HTTP method used.
      api_key                # API key of the CloudStack API.
      api_region             # Name of the ini section in the `cloustack.ini'
                               file.
      api_secret             # Secret key of the CloudStack API.
      api_timeout            # HTTP timeout.
      api_url                # URL of the CloudStack API e.g.
                               https://cloud.exa
                               mple.com/client/a
                               pi.
      bootable               # Register the ISO to be bootable. Only used if
                               `state' is
                               present.
      checksum               # The MD5 checksum value of this ISO. If set, we
                               search by
                               checksum instead
                               of name.
      domain                 # Domain the ISO is related to.
      is_dynamically_scalable   # Register the ISO having XS/VMWare tools
                               installed inorder
                               to support
                               dynamic scaling
                               of VM cpu/memory.
                               Only used if
                               `state' is
                               present.
      is_featured            # Register the ISO to be featured. Only used if
                               `state' is
                               present.
      is_public              # Register the ISO to be publicly available to all
                               users. Only used
                               if `state' is
                               present.
      is_ready               # This flag is used for searching existing ISOs.
                               If set to `true',
                               it will only list
                               ISO ready for
                               deployment e.g.
                               successfully
                               downloaded and
                               installed.
                               Recommended to
                               set it to
                               `false'.
      iso_filter             # Name of the filter used to search for the ISO.
      name=                  # Name of the ISO.
      os_type                # Name of the OS that best represents the OS of
                               this ISO. If the
                               iso is bootable
                               this parameter
                               needs to be
                               passed. Required
                               if `state' is
                               present.
      project                # Name of the project the ISO to be registered in.
      state                  # State of the ISO.
      url                    # URL where the ISO can be downloaded from.
                               Required if
                               `state' is
                               present.
      zone                   # Name of the zone you wish the ISO to be
                               registered or
                               deleted from. If
                               not specified,
                               first zone found
                               will be used.
- name: Manages load balancer rules on Apache CloudStack based clouds.
  action: cs_loadbalancer_rule
      account                # Account the rule is related to.
      algorithm              # Load balancer algorithm Required when using
                               `state=present'.
      api_http_method        # HTTP method used.
      api_key                # API key of the CloudStack API.
      api_region             # Name of the ini section in the `cloustack.ini'
                               file.
      api_secret             # Secret key of the CloudStack API.
      api_timeout            # HTTP timeout.
      api_url                # URL of the CloudStack API e.g.
                               https://cloud.exa
                               mple.com/client/a
                               pi.
      cidr                   # CIDR (full notation) to be used for firewall
                               rule if required.
      description            # The description of the load balancer rule.
      domain                 # Domain the rule is related to.
      ip_address=            # Public IP address from where the network traffic
                               will be load
                               balanced from.
      name=                  # The name of the load balancer rule.
      open_firewall          # Whether the firewall rule for public port should
                               be created, while
                               creating the new
                               rule. Use
                               [cs_firewall] for
                               managing firewall
                               rules.
      private_port           # The private port of the private ip
                               address/virtual
                               machine where the
                               network traffic
                               will be load
                               balanced to.
                               Required when
                               using
                               `state=present'.
                               Can not be
                               changed once the
                               rule exists due
                               API limitation.
      project                # Name of the project the load balancer IP address
                               is related to.
      protocol               # The protocol to be used on the load balancer
      public_port=           # The public port from where the network traffic
                               will be load
                               balanced from.
                               Required when
                               using
                               `state=present'.
                               Can not be
                               changed once the
                               rule exists due
                               API limitation.
      state=                 # State of the rule.
      zone                   # Name of the zone in which the rule shoud be
                               created. If not
                               set, default zone
                               is used.
- name: Manages load balancer rule members on Apache CloudStack based clouds.
  action: cs_loadbalancer_rule_member
      account                # Account the rule is related to.
      api_http_method        # HTTP method used.
      api_key                # API key of the CloudStack API.
      api_region             # Name of the ini section in the `cloustack.ini'
                               file.
      api_secret             # Secret key of the CloudStack API.
      api_timeout            # HTTP timeout.
      api_url                # URL of the CloudStack API e.g.
                               https://cloud.exa
                               mple.com/client/a
                               pi.
      domain                 # Domain the rule is related to.
      ip_address             # Public IP address from where the network traffic
                               will be load
                               balanced from.
                               Only needed to
                               find the rule if
                               `name' is not
                               unique.
      name=                  # The name of the load balancer rule.
      project                # Name of the project the firewall rule is related
                               to.
      state                  # Should the VMs be present or absent from the
                               rule.
      vms=                   # List of VMs to assign to or remove from the
                               rule.
      zone                   # Name of the zone in which the rule should be
                               located. If not
                               set, default zone
                               is used.
- name: Manages networks on Apache CloudStack based clouds.
  action: cs_network
      account                # Account the network is related to.
      acl_type               # Access control type. Only considered on create.
      api_http_method        # HTTP method used.
      api_key                # API key of the CloudStack API.
      api_region             # Name of the ini section in the `cloustack.ini'
                               file.
      api_secret             # Secret key of the CloudStack API.
      api_timeout            # HTTP timeout.
      api_url                # URL of the CloudStack API e.g.
                               https://cloud.exa
                               mple.com/client/a
                               pi.
      cidr_ipv6              # CIDR of IPv6 network, must be at least /64. Only
                               considered on
                               create.
      clean_up               # Cleanup old network elements. Only considered on
                               `state=restarted'
                               .
      display_text           # Display text of the network. If not specified,
                               `name' will be
                               used as
                               `display_text'.
      domain                 # Domain the network is related to.
      end_ip                 # The ending IPv4 address of the network belongs
                               to. If not
                               specified, value
                               of `start_ip' is
                               used. Only
                               considered on
                               create.
      end_ipv6               # The ending IPv6 address of the network belongs
                               to. If not
                               specified, value
                               of `start_ipv6'
                               is used. Only
                               considered on
                               create.
      gateway                # The gateway of the network. Required for shared
                               networks and
                               isolated networks
                               when it belongs
                               to a VPC. Only
                               considered on
                               create.
      gateway_ipv6           # The gateway of the IPv6 network. Required for
                               shared networks.
                               Only considered
                               on create.
      isolated_pvlan         # The isolated private VLAN for this network.
      name=                  # Name (case sensitive) of the network.
      netmask                # The netmask of the network. Required for shared
                               networks and
                               isolated networks
                               when it belongs
                               to a VPC. Only
                               considered on
                               create.
      network_domain         # The network domain.
      network_offering       # Name of the offering for the network. Required
                               if
                               `state=present'.
      poll_async             # Poll async jobs until job has finished.
      project                # Name of the project the network to be deployed
                               in.
      start_ip               # The beginning IPv4 address of the network
                               belongs to. Only
                               considered on
                               create.
      start_ipv6             # The beginning IPv6 address of the network
                               belongs to. Only
                               considered on
                               create.
      state                  # State of the network.
      vlan                   # The ID or VID of the network.
      vpc                    # Name of the VPC of the network.
      zone                   # Name of the zone in which the network should be
                               deployed. If not
                               set, default zone
                               is used.
- name: Manages pods on Apache CloudStack based clouds.
  action: cs_pod
      api_http_method        # HTTP method used.
      api_key                # API key of the CloudStack API.
      api_region             # Name of the ini section in the `cloustack.ini'
                               file.
      api_secret             # Secret key of the CloudStack API.
      api_timeout            # HTTP timeout.
      api_url                # URL of the CloudStack API e.g.
                               https://cloud.exa
                               mple.com/client/a
                               pi.
      end_ip                 # Ending IP address for the Pod.
      gateway                # Gateway for the Pod. Required on `state=present'
      id                     # uuid of the exising pod.
      name=                  # Name of the pod.
      netmask                # Netmask for the Pod. Required on `state=present'
      start_ip               # Starting IP address for the Pod. Required on
                               `state=present'
      state                  # State of the pod.
      zone                   # Name of the zone in which the pod belongs to. If
                               not set, default
                               zone is used.
- name: Manages port forwarding rules on Apache CloudStack based clouds.
  action: cs_portforward
      account                # Account the `vm' is related to.
      api_http_method        # HTTP method used.
      api_key                # API key of the CloudStack API.
      api_region             # Name of the ini section in the `cloustack.ini'
                               file.
      api_secret             # Secret key of the CloudStack API.
      api_timeout            # HTTP timeout.
      api_url                # URL of the CloudStack API e.g.
                               https://cloud.exa
                               mple.com/client/a
                               pi.
      domain                 # Domain the `vm' is related to.
      ip_address=            # Public IP address the rule is assigned to.
      open_firewall          # Whether the firewall rule for public port should
                               be created, while
                               creating the new
                               rule. Use
                               [cs_firewall] for
                               managing firewall
                               rules.
      poll_async             # Poll async jobs until job has finished.
      private_end_port       # End private port for this rule. If not specified
                               equal
                               `private_port'.
      private_port=          # Start private port for this rule.
      project                # Name of the project the `vm' is located in.
      protocol               # Protocol of the port forwarding rule.
      public_end_port        # End public port for this rule. If not specified
                               equal
                               `public_port'.
      public_port=           # Start public port for this rule.
      state                  # State of the port forwarding rule.
      vm                     # Name of virtual machine which we make the port
                               forwarding rule
                               for. Required if
                               `state=present'.
      vm_guest_ip            # VM guest NIC secondary IP address for the port
                               forwarding rule.
      zone                   # Name of the zone in which the virtual machine is
                               in. If not set,
                               default zone is
                               used.
- name: Manages projects on Apache CloudStack based clouds.
  action: cs_project
      account                # Account the project is related to.
      api_http_method        # HTTP method used.
      api_key                # API key of the CloudStack API.
      api_region             # Name of the ini section in the `cloustack.ini'
                               file.
      api_secret             # Secret key of the CloudStack API.
      api_timeout            # HTTP timeout.
      api_url                # URL of the CloudStack API e.g.
                               https://cloud.exa
                               mple.com/client/a
                               pi.
      display_text           # Display text of the project. If not specified,
                               `name' will be
                               used as
                               `display_text'.
      domain                 # Domain the project is related to.
      name=                  # Name of the project.
      poll_async             # Poll async jobs until job has finished.
      state                  # State of the project.
      tags                   # List of tags. Tags are a list of dictionaries
                               having keys `key'
                               and `value'. If
                               you want to
                               delete all tags,
                               set a empty list
                               e.g. `tags: []'.
- name: Manages resource limits on Apache CloudStack based clouds.
  action: cs_resourcelimit
      account                # Account the resource is related to.
      api_http_method        # HTTP method used.
      api_key                # API key of the CloudStack API.
      api_region             # Name of the ini section in the `cloustack.ini'
                               file.
      api_secret             # Secret key of the CloudStack API.
      api_timeout            # HTTP timeout.
      api_url                # URL of the CloudStack API e.g.
                               https://cloud.exa
                               mple.com/client/a
                               pi.
      domain                 # Domain the resource is related to.
      limit                  # Maximum number of the resource. Default is
                               unlimited `-1'.
      project                # Name of the project the resource is related to.
      resource_type=         # Type of the resource.
- name: Manages routers on Apache CloudStack based clouds.
  action: cs_router
      account                # Account the router is related to.
      api_http_method        # HTTP method used.
      api_key                # API key of the CloudStack API.
      api_region             # Name of the ini section in the `cloustack.ini'
                               file.
      api_secret             # Secret key of the CloudStack API.
      api_timeout            # HTTP timeout.
      api_url                # URL of the CloudStack API e.g.
                               https://cloud.exa
                               mple.com/client/a
                               pi.
      domain                 # Domain the router is related to.
      name=                  # Name of the router.
      project                # Name of the project the router is related to.
      service_offering       # Name or id of the service offering of the
                               router.
      state                  # State of the router.
- name: Manages security groups on Apache CloudStack based clouds.
  action: cs_securitygroup
      account                # Account the security group is related to.
      api_http_method        # HTTP method used.
      api_key                # API key of the CloudStack API.
      api_region             # Name of the ini section in the `cloustack.ini'
                               file.
      api_secret             # Secret key of the CloudStack API.
      api_timeout            # HTTP timeout.
      api_url                # URL of the CloudStack API e.g.
                               https://cloud.exa
                               mple.com/client/a
                               pi.
      description            # Description of the security group.
      domain                 # Domain the security group is related to.
      name=                  # Name of the security group.
      project                # Name of the project the security group to be
                               created in.
      state                  # State of the security group.
- name: Manages security group rules on Apache CloudStack based clouds.
  action: cs_securitygroup_rule
      api_http_method        # HTTP method used.
      api_key                # API key of the CloudStack API.
      api_region             # Name of the ini section in the `cloustack.ini'
                               file.
      api_secret             # Secret key of the CloudStack API.
      api_timeout            # HTTP timeout.
      api_url                # URL of the CloudStack API e.g.
                               https://cloud.exa
                               mple.com/client/a
                               pi.
      cidr                   # CIDR (full notation) to be used for security
                               group rule.
      end_port               # End port for this rule. Required if
                               `protocol=tcp' or
                               `protocol=udp',
                               but `start_port'
                               will be used if
                               not set.
      icmp_code              # Error code for this icmp message. Required if
                               `protocol=icmp'.
      icmp_type              # Type of the icmp message being sent. Required if
                               `protocol=icmp'.
      poll_async             # Poll async jobs until job has finished.
      project                # Name of the project the security group to be
                               created in.
      protocol               # Protocol of the security group rule.
      security_group=        # Name of the security group the rule is related
                               to. The security
                               group must be
                               existing.
      start_port             # Start port for this rule. Required if
                               `protocol=tcp' or
                               `protocol=udp'.
      state                  # State of the security group rule.
      type                   # Ingress or egress security group rule.
      user_security_group    # Security group this rule is based of.
- name: Manages volume snapshot policies on Apache CloudStack based clouds.
  action: cs_snapshot_policy
      account                # Account the volume is related to.
      api_http_method        # HTTP method used.
      api_key                # API key of the CloudStack API.
      api_region             # Name of the ini section in the `cloustack.ini'
                               file.
      api_secret             # Secret key of the CloudStack API.
      api_timeout            # HTTP timeout.
      api_url                # URL of the CloudStack API e.g.
                               https://cloud.exa
                               mple.com/client/a
                               pi.
      domain                 # Domain the volume is related to.
      interval_type          # Interval of the snapshot.
      max_snaps              # Max number of snapshots.
      project                # Name of the project the volume is related to.
      schedule               # Time the snapshot is scheduled. Required if
                               `state=present'.
                               Format for `inter
                               val_type=HOURLY':
                               `MM' Format for `
                               interval_type=DAI
                               LY': `MM:HH'
                               Format for `inter
                               val_type=WEEKLY':
                               `MM:HH:DD (1-7')
                               Format for `inter
                               val_type=MONTHLY'
                               : `MM:HH:DD
                               (1-28')
      state                  # State of the snapshot policy.
      time_zone              # Specifies a timezone for this command.
      volume=                # Name of the volume.
- name: Manages SSH keys on Apache CloudStack based clouds.
  action: cs_sshkeypair
      account                # Account the public key is related to.
      api_http_method        # HTTP method used.
      api_key                # API key of the CloudStack API.
      api_region             # Name of the ini section in the `cloustack.ini'
                               file.
      api_secret             # Secret key of the CloudStack API.
      api_timeout            # HTTP timeout.
      api_url                # URL of the CloudStack API e.g.
                               https://cloud.exa
                               mple.com/client/a
                               pi.
      domain                 # Domain the public key is related to.
      name=                  # Name of public key.
      project                # Name of the project the public key to be
                               registered in.
      public_key             # String of the public key.
      state                  # State of the public key.
- name: Manages static NATs on Apache CloudStack based clouds.
  action: cs_staticnat
      account                # Account the static NAT is related to.
      api_http_method        # HTTP method used.
      api_key                # API key of the CloudStack API.
      api_region             # Name of the ini section in the `cloustack.ini'
                               file.
      api_secret             # Secret key of the CloudStack API.
      api_timeout            # HTTP timeout.
      api_url                # URL of the CloudStack API e.g.
                               https://cloud.exa
                               mple.com/client/a
                               pi.
      domain                 # Domain the static NAT is related to.
      ip_address=            # Public IP address the static NAT is assigned to.
      network                # Network the IP address is related to.
      poll_async             # Poll async jobs until job has finished.
      project                # Name of the project the static NAT is related
                               to.
      state                  # State of the static NAT.
      vm                     # Name of virtual machine which we make the static
                               NAT for. Required
                               if
                               `state=present'.
      vm_guest_ip            # VM guest NIC secondary IP address for the static
                               NAT.
      zone                   # Name of the zone in which the virtual machine is
                               in. If not set,
                               default zone is
                               used.
- name: Manages templates on Apache CloudStack based clouds.
  action: cs_template
      account                # Account the template, snapshot or VM is related
                               to.
      api_http_method        # HTTP method used.
      api_key                # API key of the CloudStack API.
      api_region             # Name of the ini section in the `cloustack.ini'
                               file.
      api_secret             # Secret key of the CloudStack API.
      api_timeout            # HTTP timeout.
      api_url                # URL of the CloudStack API e.g.
                               https://cloud.exa
                               mple.com/client/a
                               pi.
      bits                   # 32 or 64 bits support.
      checksum               # The MD5 checksum value of this template. If set,
                               we search by
                               checksum instead
                               of name.
      cross_zones            # Whether the template should be synced or removed
                               across zones.
                               Only used if
                               `state' is
                               present or
                               absent.
      details                # Template details in key/value pairs.
      display_text           # Display text of the template.
      domain                 # Domain the template, snapshot or VM is related
                               to.
      format                 # The format for the template. Relevant when using
                               `state=present'.
      hypervisor             # Name the hypervisor to be used for creating the
                               new template.
                               Relevant when
                               using
                               `state=present'.
      is_dynamically_scalable   # Register the template having XS/VMWare tools
                               installed in
                               order to support
                               dynamic scaling
                               of VM CPU/memory.
                               Only used if
                               `state' is
                               present.
      is_extractable         # True if the template or its derivatives are
                               extractable.
      is_featured            # Register the template to be featured. Only used
                               if `state' is
                               present.
      is_public              # Register the template to be publicly available
                               to all users.
                               Only used if
                               `state' is
                               present.
      is_ready               # This flag is used for searching existing
                               templates. If set
                               to `true', it
                               will only list
                               template ready
                               for deployment
                               e.g. successfully
                               downloaded and
                               installed.
                               Recommended to
                               set it to
                               `false'.
      is_routing             # True if the template type is routing i.e., if
                               template is used
                               to deploy router.
                               Only considered
                               if `url' is used.
      mode                   # Mode for the template extraction. Only used if
                               `state=extracted'
                               .
      name=                  # Name of the template.
      os_type                # OS type that best represents the OS of this
                               template.
      password_enabled       # True if the template supports the password reset
                               feature.
      poll_async             # Poll async jobs until job has finished.
      project                # Name of the project the template to be
                               registered in.
      requires_hvm           # true if this template requires HVM.
      snapshot               # Name of the snapshot, created from the VM ROOT
                               volume, the
                               template will be
                               created from.
                               `vm' is required
                               together with
                               this argument.
      sshkey_enabled         # True if the template supports the sshkey upload
                               feature.
      state                  # State of the template.
      template_filter        # Name of the filter used to search for the
                               template.
      template_tag           # the tag for this template.
      url                    # URL of where the template is hosted on
                               `state=present'.
                               URL to which the
                               template would be
                               extracted on `sta
                               te=extracted'.
                               Mutually
                               exclusive with
                               `vm'.
      vm                     # VM name the template will be created from its
                               volume or
                               alternatively
                               from a snapshot.
                               VM must be in
                               stopped state if
                               created from its
                               volume. Mutually
                               exclusive with
                               `url'.
      zone                   # Name of the zone you wish the template to be
                               registered or
                               deleted from. If
                               not specified,
                               first found zone
                               will be used.
- name: Manages users on Apache CloudStack based clouds.
  action: cs_user
      account                # Account the user will be created under. Required
                               on
                               `state=present'.
      api_http_method        # HTTP method used.
      api_key                # API key of the CloudStack API.
      api_region             # Name of the ini section in the `cloustack.ini'
                               file.
      api_secret             # Secret key of the CloudStack API.
      api_timeout            # HTTP timeout.
      api_url                # URL of the CloudStack API e.g.
                               https://cloud.exa
                               mple.com/client/a
                               pi.
      domain                 # Domain the user is related to.
      email                  # Email of the user. Required on `state=present'.
      first_name             # First name of the user. Required on
                               `state=present'.
      last_name              # Last name of the user. Required on
                               `state=present'.
      password               # Password of the user to be created. Required on
                               `state=present'.
                               Only considered
                               on creation and
                               will not be
                               updated if user
                               exists.
      poll_async             # Poll async jobs until job has finished.
      state                  # State of the user. `unlocked' is an alias for
                               `enabled'.
      timezone               # Timezone of the user.
      username=              # Username of the user.
- name: Manages VM snapshots on Apache CloudStack based clouds.
  action: cs_vmsnapshot
      account                # Account the VM snapshot is related to.
      api_http_method        # HTTP method used.
      api_key                # API key of the CloudStack API.
      api_region             # Name of the ini section in the `cloustack.ini'
                               file.
      api_secret             # Secret key of the CloudStack API.
      api_timeout            # HTTP timeout.
      api_url                # URL of the CloudStack API e.g.
                               https://cloud.exa
                               mple.com/client/a
                               pi.
      description            # Description of the snapshot.
      domain                 # Domain the VM snapshot is related to.
      name=                  # Unique Name of the snapshot. In CloudStack terms
                               display name.
      poll_async             # Poll async jobs until job has finished.
      project                # Name of the project the VM is assigned to.
      snapshot_memory        # Snapshot memory if set to true.
      state                  # State of the snapshot.
      vm=                    # Name of the virtual machine.
      zone                   # Name of the zone in which the VM is in. If not
                               set, default zone
                               is used.
- name: Manages volumes on Apache CloudStack based clouds.
  action: cs_volume
      account                # Account the volume is related to.
      api_http_method        # HTTP method used.
      api_key                # API key of the CloudStack API.
      api_region             # Name of the ini section in the `cloustack.ini'
                               file.
      api_secret             # Secret key of the CloudStack API.
      api_timeout            # HTTP timeout.
      api_url                # URL of the CloudStack API e.g.
                               https://cloud.exa
                               mple.com/client/a
                               pi.
      custom_id              # Custom id to the resource. Allowed to Root
                               Admins only.
      disk_offering          # Name of the disk offering to be used. Required
                               one of
                               `disk_offering',
                               `snapshot' if
                               volume is not
                               already
                               `state=present'.
      display_volume         # Whether to display the volume to the end user or
                               not. Allowed to
                               Root Admins only.
      domain                 # Name of the domain the volume to be deployed in.
      force                  # Force removal of volume even it is attached to a
                               VM. Considered on
                               `state=absnet'
                               only.
      max_iops               # Max iops
      min_iops               # Min iops
      name=                  # Name of the volume. `name' can only contain
                               ASCII letters.
      poll_async             # Poll async jobs until job has finished.
      project                # Name of the project the volume to be deployed
                               in.
      shrink_ok              # Whether to allow to shrink the volume.
      size                   # Size of disk in GB
      snapshot               # The snapshot name for the disk volume. Required
                               one of
                               `disk_offering',
                               `snapshot' if
                               volume is not
                               already
                               `state=present'.
      state                  # State of the volume.
      vm                     # Name of the virtual machine to attach the volume
                               to.
      zone                   # Name of the zone in which the volume should be
                               deployed. If not
                               set, default zone
                               is used.
- name: Manages zones on Apache CloudStack based clouds.
  action: cs_zone
      api_http_method        # HTTP method used.
      api_key                # API key of the CloudStack API.
      api_region             # Name of the ini section in the `cloustack.ini'
                               file.
      api_secret             # Secret key of the CloudStack API.
      api_timeout            # HTTP timeout.
      api_url                # URL of the CloudStack API e.g.
                               https://cloud.exa
                               mple.com/client/a
                               pi.
      dhcp_provider          # DHCP provider for the Zone.
      dns1                   # First DNS for the zone. Required if
                               `state=present'
      dns1_ipv6              # First DNS for IPv6 for the zone.
      dns2                   # Second DNS for the zone.
      dns2_ipv6              # Second DNS for IPv6 for the zone.
      domain                 # Domain the zone is related to. Zone is a public
                               zone if not set.
      guest_cidr_address     # Guest CIDR address for the zone.
      id                     # uuid of the exising zone.
      internal_dns1          # First internal DNS for the zone. If not set
                               `dns1' will be
                               used on
                               `state=present'.
      internal_dns2          # Second internal DNS for the zone.
      name=                  # Name of the zone.
      network_domain         # Network domain for the zone.
      network_type           # Network type of the zone.
      state                  # State of the zone.
- name: Gathering facts of zones from Apache CloudStack based clouds.
  action: cs_zone_facts
      api_http_method        # HTTP method used.
      api_key                # API key of the CloudStack API.
      api_region             # Name of the ini section in the `cloustack.ini'
                               file.
      api_secret             # Secret key of the CloudStack API.
      api_timeout            # HTTP timeout.
      api_url                # URL of the CloudStack API e.g.
                               https://cloud.exa
                               mple.com/client/a
                               pi.
      name=                  # Name of the zone.
- name: Posts events to DataDog  service
  action: datadog_event
      aggregation_key        # An arbitrary string to use for aggregation.
      alert_type             # Type of alert.
      api_key=               # Your DataDog API key.
      app_key=               # Your DataDog app key.
      date_happened          # POSIX timestamp of the event. Default value is
                               now.
      priority               # The priority of the event.
      tags                   # Comma separated list of tags to apply to the
                               event.
      text=                  # The body of the event.
      title=                 # The event title.
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
- name: Manages Datadog monitors
  action: datadog_monitor
      api_key=               # Your DataDog API key.
      app_key=               # Your DataDog app key.
      escalation_message     # A message to include with a re-notification.
                               Supports the
                               '@username'
                               notification we
                               allow elsewhere.
                               Not applicable if
                               renotify_interval
                               is None
      locked                 # A boolean indicating whether changes to this
                               monitor should be
                               restricted to the
                               creator or
                               admins.
      message                # A message to include with notifications for this
                               monitor. Email
                               notifications can
                               be sent to
                               specific users by
                               using the same
                               '@username'
                               notation as
                               events. Monitor
                               message template
                               variables can be
                               accessed by using
                               double square
                               brackets, i.e
                               '[[' and ']]'.
      name=                  # The name of the alert.
      no_data_timeframe      # The number of minutes before a monitor will
                               notify when data
                               stops reporting.
                               Must be at least
                               2x the monitor
                               timeframe for
                               metric alerts or
                               2 minutes for
                               service checks.
      notify_audit           # A boolean indicating whether tagged users will
                               be notified on
                               changes to this
                               monitor.
      notify_no_data         # A boolean indicating whether this monitor will
                               notify when data
                               stops reporting..
      query                  # The monitor query to notify on with syntax
                               varying depending
                               on what type of
                               monitor you are
                               creating.
      renotify_interval      # The number of minutes after the last
                               notification
                               before a monitor
                               will re-notify on
                               the current
                               status. It will
                               only re-notify if
                               it's not
                               resolved.
      silenced               # Dictionary of scopes to timestamps or None. Each
                               scope will be
                               muted until the
                               given POSIX
                               timestamp or
                               forever if the
                               value is None.
      state=                 # The designated state of the monitor.
      tags                   # A list of tags to associate with your monitor
                               when creating or
                               updating. This
                               can help you
                               categorize and
                               filter monitors.
      thresholds             # A dictionary of thresholds by status. This
                               option is only
                               available for
                               service checks
                               and metric
                               alerts. Because
                               each of them can
                               have multiple
                               thresholds, we
                               don't define them
                               directly in the
                               query.
      timeout_h              # The number of hours of the monitor not reporting
                               data before it
                               will
                               automatically
                               resolve from a
                               triggered state.
      type                   # The type of the monitor. The 'event alert'is
                               available
                               starting at
                               Ansible 2.1
- name: Configure a .deb package
  action: debconf
      name=                  # Name of package to configure.
      question               # A debconf configuration setting
      unseen                 # Do not set 'seen' flag when pre-seeding
      value                  # Value to set the configuration to
      vtype                  # The type of the value supplied. `seen' was added
                               in 2.2.
- name: Print statements during execution
  action: debug
      msg                    # The customized message that is printed. If
                               omitted, prints a
                               generic message.
      var                    # A variable name to debug.  Mutually exclusive
                               with the 'msg'
                               option.
      verbosity              # A number that controls when the debug is run, if
                               you set to 3 it
                               will only run
                               debug when -vvv
                               or above
- name: Run commands on remote devices running Dell OS10
  action: dellos10_command
      commands=              # List of commands to send to the remote dellos10
                               device over the
                               configured
                               provider. The
                               resulting output
                               from the command
                               is returned. If
                               the `wait_for'
                               argument is
                               provided, the
                               module is not
                               returned until
                               the condition is
                               satisfied or the
                               number of retries
                               has expired.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      interval               # Configures the interval in seconds to wait
                               between retries
                               of the command.
                               If the command
                               does not pass the
                               specified
                               conditions, the
                               interval
                               indicates how
                               long to wait
                               before trying the
                               command again.
      password               # This value `password' is used to authenticate
                               the SSH session
                               to the remote
                               device. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_PASSWORD will
                               be used instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
      provider               # Convenience method that allows all [dellos10]
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      retries                # Specifies the number of retries a command should
                               by tried before
                               it is considered
                               failed. The
                               command is run on
                               the target device
                               every retry and
                               evaluated against
                               the `wait_for'
                               conditions.
      ssh_keyfile            # This value `ssh_keyfile' is the path to the key
                               used to
                               authenticate the
                               SSH session to
                               the remote
                               device.  If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_SSH_KEYFILE
                               will be used
                               instead.
      timeout                # Specifies idle timeout (in seconds) for the
                               connection.
                               Useful if the
                               console freezes
                               before
                               continuing. For
                               example when
                               saving
                               configurations.
      username               # This value `username' is used to authenticate
                               the SSH session
                               to the remote
                               device. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_USERNAME will
                               be used instead.
      wait_for               # List of conditions to evaluate against the
                               output of the
                               command. The task
                               will wait for
                               each condition to
                               be true before
                               moving forward.
                               If the
                               conditional is
                               not true within
                               the configured
                               number of
                               `retries', the
                               task fails. See
                               examples.
- name: Manage Dell OS10 configuration sections
  action: dellos10_config
      after                  # The ordered set of commands to append to the end
                               of the command
                               stack if a change
                               needs to be made.
                               Just like with
                               `before' this
                               allows the
                               playbook designer
                               to append a set
                               of commands to be
                               executed after
                               the command set.
      backup                 # This argument will cause the module to create a
                               full backup of
                               the current
                               `running-config'
                               from the remote
                               device before any
                               changes are made.
                               The backup file
                               is written to the
                               `backup' folder
                               in the playbook
                               root directory.
                               If the directory
                               does not exist,
                               it is created.
      before                 # The ordered set of commands to push on to the
                               command stack if
                               a change needs to
                               be made.  This
                               allows the
                               playbook designer
                               the opportunity
                               to perform
                               configuration
                               commands prior to
                               pushing any
                               changes without
                               affecting how the
                               set of commands
                               are matched
                               against the
                               system.
      config                 # The `config' argument allows the playbook
                               designer to
                               supply the base
                               configuration to
                               be used to
                               validate
                               configuration
                               changes
                               necessary.  If
                               this argument is
                               provided, the
                               module will not
                               download the
                               running-config
                               from the remote
                               node.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      lines                  # The ordered set of commands that should be
                               configured in the
                               section.  The
                               commands must be
                               the exact same
                               commands as found
                               in the device
                               running-config.
                               Be sure to note
                               the configuration
                               command syntax as
                               some commands are
                               automatically
                               modified by the
                               device config
                               parser. This
                               argument is
                               mutually
                               exclusive with
                               `src'.
      match                  # Instructs the module on the way to perform the
                               matching of the
                               set of commands
                               against the
                               current device
                               config.  If match
                               is set to `line',
                               commands are
                               matched line by
                               line.  If match
                               is set to
                               `strict', command
                               lines are matched
                               with respect to
                               position.  If
                               match is set to
                               `exact', command
                               lines must be an
                               equal match.
                               Finally, if match
                               is set to `none',
                               the module will
                               not attempt to
                               compare the
                               source
                               configuration
                               with the running
                               configuration on
                               the remote
                               device.
      parents                # The ordered set of parents that uniquely
                               identify the
                               section the
                               commands should
                               be checked
                               against.  If the
                               parents argument
                               is omitted, the
                               commands are
                               checked against
                               the set of top
                               level or global
                               commands.
      password               # This value `password' is used to authenticate
                               the SSH session
                               to the remote
                               device. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_PASSWORD will
                               be used instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
      provider               # Convenience method that allows all [dellos10]
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      replace                # Instructs the module on the way to perform the
                               configuration on
                               the device.  If
                               the replace
                               argument is set
                               to `line' then
                               the modified
                               lines are pushed
                               to the device in
                               configuration
                               mode.  If the
                               replace argument
                               is set to `block'
                               then the entire
                               command block is
                               pushed to the
                               device in
                               configuration
                               mode if any line
                               is not correct.
      save                   # The `save' argument instructs the module to save
                               the running-
                               config to the
                               startup-config at
                               the conclusion of
                               the module
                               running.  If
                               check mode is
                               specified, this
                               argument is
                               ignored.
      src                    # Specifies the source path to the file that
                               contains the
                               configuration or
                               configuration
                               template to load.
                               The path to the
                               source file can
                               either be the
                               full path on the
                               Ansible control
                               host or a
                               relative path
                               from the playbook
                               or role root dir.
                               This argument is
                               mutually
                               exclusive with
                               `lines'.
      ssh_keyfile            # This value `ssh_keyfile' is the path to the key
                               used to
                               authenticate the
                               SSH session to
                               the remote
                               device.  If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_SSH_KEYFILE
                               will be used
                               instead.
      timeout                # Specifies idle timeout (in seconds) for the
                               connection.
                               Useful if the
                               console freezes
                               before
                               continuing. For
                               example when
                               saving
                               configurations.
      update                 # The `update' argument controls how the
                               configuration
                               statements are
                               processed on the
                               remote device.
                               Valid choices for
                               the `update'
                               argument are
                               `merge' and
                               `check'.  When
                               the argument is
                               set to `merge',
                               the configuration
                               changes are
                               merged with the
                               current device
                               running
                               configuration.
                               When the argument
                               is set to `check'
                               the configuration
                               updates are
                               determined but
                               not actually
                               configured on the
                               remote device.
      username               # This value `username' is used to authenticate
                               the SSH session
                               to the remote
                               device. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_USERNAME will
                               be used instead.
- name: Collect facts from remote devices running Dell OS10
  action: dellos10_facts
      gather_subset          # When supplied, this argument will restrict the
                               facts collected
                               to a given
                               subset.  Possible
                               values for this
                               argument include
                               all, hardware,
                               config, and
                               interfaces.  Can
                               specify a list of
                               values to include
                               a larger subset.
                               Values can also
                               be used with an
                               initial `[!]' to
                               specify that a
                               specific subset
                               should not be
                               collected.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      password               # This value `password' is used to authenticate
                               the SSH session
                               to the remote
                               device. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_PASSWORD will
                               be used instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
      provider               # Convenience method that allows all [dellos10]
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # This value `ssh_keyfile' is the path to the key
                               used to
                               authenticate the
                               SSH session to
                               the remote
                               device.  If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_SSH_KEYFILE
                               will be used
                               instead.
      timeout                # Specifies idle timeout (in seconds) for the
                               connection.
                               Useful if the
                               console freezes
                               before
                               continuing. For
                               example when
                               saving
                               configurations.
      username               # This value `username' is used to authenticate
                               the SSH session
                               to the remote
                               device. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_USERNAME will
                               be used instead.
- name: Run commands on remote devices running Dell OS6
  action: dellos6_command
      auth_pass              # Specifies the password to use if required to
                               enter privileged
                               mode on the
                               remote device.
                               If `authorize' is
                               false, then this
                               argument does
                               nothing. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_AUTH_PASS
                               will be used
                               instead.
      authorize              # Instructs the module to enter priviledged mode
                               on the remote
                               device before
                               sending any
                               commands.  If not
                               specified, the
                               device will
                               attempt to
                               excecute all
                               commands in non-
                               priviledged mode.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable ANSIBLE_
                               NET_AUTHORIZE
                               will be used
                               instead.
      commands=              # List of commands to send to the remote dellos6
                               device over the
                               configured
                               provider. The
                               resulting output
                               from the command
                               is returned. If
                               the `wait_for'
                               argument is
                               provided, the
                               module is not
                               returned until
                               the condition is
                               satisfied or the
                               number of
                               `retries' as
                               expired.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      interval               # Configures the interval in seconds to wait
                               between retries
                               of the command.
                               If the command
                               does not pass the
                               specified
                               conditions, the
                               interval
                               indicates how
                               long to wait
                               before trying the
                               command again.
      password               # Password to authenticate the SSH session to the
                               remote device. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_PASSWORD will
                               be used instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
      provider               # Convenience method that allows all [dellos6]
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      retries                # Specifies the number of retries a command should
                               be tried before
                               it is considered
                               failed. The
                               command is run on
                               the target device
                               every retry and
                               evaluated against
                               the `wait_for'
                               conditions.
      ssh_keyfile            # Path to an ssh key used to authenticate the SSH
                               session to the
                               remote device.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable ANSIBLE_
                               NET_SSH_KEYFILE
                               will be used
                               instead.
      timeout                # Specifies idle timeout (in seconds) for the
                               connection.
                               Useful if the
                               console freezes
                               before
                               continuing. For
                               example when
                               saving
                               configurations.
      username               # User to authenticate the SSH session to the
                               remote device. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_USERNAME will
                               be used instead.
      wait_for               # List of conditions to evaluate against the
                               output of the
                               command. The task
                               will wait for
                               each condition to
                               be true before
                               moving forward.
                               If the
                               conditional is
                               not true within
                               the configured
                               number of
                               `retries', the
                               task fails. See
                               examples.
- name: Manage Dell OS6 configuration sections
  action: dellos6_config
      after                  # The ordered set of commands to append to the end
                               of the command
                               stack if a change
                               needs to be made.
                               Just like with
                               `before' this
                               allows the
                               playbook designer
                               to append a set
                               of commands to be
                               executed after
                               the command set.
      auth_pass              # Specifies the password to use if required to
                               enter privileged
                               mode on the
                               remote device.
                               If `authorize' is
                               false, then this
                               argument does
                               nothing. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_AUTH_PASS
                               will be used
                               instead.
      authorize              # Instructs the module to enter priviledged mode
                               on the remote
                               device before
                               sending any
                               commands.  If not
                               specified, the
                               device will
                               attempt to
                               excecute all
                               commands in non-
                               priviledged mode.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable ANSIBLE_
                               NET_AUTHORIZE
                               will be used
                               instead.
      backup                 # This argument will cause the module to create a
                               full backup of
                               the current
                               `running-config'
                               from the remote
                               device before any
                               changes are made.
                               The backup file
                               is written to the
                               `backup' folder
                               in the playbook
                               root directory.
                               If the directory
                               does not exist,
                               it is created.
      before                 # The ordered set of commands to push on to the
                               command stack if
                               a change needs to
                               be made.  This
                               allows the
                               playbook designer
                               the opportunity
                               to perform
                               configuration
                               commands prior to
                               pushing any
                               changes without
                               affecting how the
                               set of commands
                               are matched
                               against the
                               system.
      config                 # The `config' argument allows the playbook
                               designer to
                               supply the base
                               configuration to
                               be used to
                               validate
                               configuration
                               changes
                               necessary.  If
                               this argument is
                               provided, the
                               module will not
                               download the
                               running-config
                               from the remote
                               node.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      lines                  # The ordered set of commands that should be
                               configured in the
                               section.  The
                               commands must be
                               the exact same
                               commands as found
                               in the device
                               running-config.
                               Be sure to note
                               the configuration
                               command syntax as
                               some commands are
                               automatically
                               modified by the
                               device config
                               parser. This
                               argument is
                               mutually
                               exclusive with
                               `src'.
      match                  # Instructs the module on the way to perform the
                               matching of the
                               set of commands
                               against the
                               current device
                               config.  If match
                               is set to `line',
                               commands are
                               matched line by
                               line.  If match
                               is set to
                               `strict', command
                               lines are matched
                               with respect to
                               position.  If
                               match is set to
                               `exact', command
                               lines must be an
                               equal match.
                               Finally, if match
                               is set to `none',
                               the module will
                               not attempt to
                               compare the
                               source
                               configuration
                               with the running
                               configuration on
                               the remote
                               device.
      parents                # The ordered set of parents that uniquely
                               identify the
                               section the
                               commands should
                               be checked
                               against.  If the
                               parents argument
                               is omitted, the
                               commands are
                               checked against
                               the set of top
                               level or global
                               commands.
      password               # Password to authenticate the SSH session to the
                               remote device. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_PASSWORD will
                               be used instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
      provider               # Convenience method that allows all [dellos6]
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      replace                # Instructs the module on the way to perform the
                               configuration on
                               the device.  If
                               the replace
                               argument is set
                               to `line' then
                               the modified
                               lines are pushed
                               to the device in
                               configuration
                               mode.  If the
                               replace argument
                               is set to `block'
                               then the entire
                               command block is
                               pushed to the
                               device in
                               configuration
                               mode if any line
                               is not correct.
      save                   # The `save' argument instructs the module to save
                               the running-
                               config to the
                               startup-config at
                               the conclusion of
                               the module
                               running.  If
                               check mode is
                               specified, this
                               argument is
                               ignored.
      src                    # Specifies the source path to the file that
                               contains the
                               configuration or
                               configuration
                               template to load.
                               The path to the
                               source file can
                               either be the
                               full path on the
                               Ansible control
                               host or a
                               relative path
                               from the playbook
                               or role root dir.
                               This argument is
                               mutually
                               exclusive with
                               `lines'.
      ssh_keyfile            # Path to an ssh key used to authenticate the SSH
                               session to the
                               remote device.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable ANSIBLE_
                               NET_SSH_KEYFILE
                               will be used
                               instead.
      timeout                # Specifies idle timeout (in seconds) for the
                               connection.
                               Useful if the
                               console freezes
                               before
                               continuing. For
                               example when
                               saving
                               configurations.
      update                 # The `update' argument controls how the
                               configuration
                               statements are
                               processed on the
                               remote device.
                               Valid choices for
                               the `update'
                               argument are
                               `merge' and
                               `check'.  When
                               the argument is
                               set to `merge',
                               the configuration
                               changes are
                               merged with the
                               current device
                               running
                               configuration.
                               When the argument
                               is set to `check'
                               the configuration
                               updates are
                               determined but
                               not actually
                               configured on the
                               remote device.
      username               # User to authenticate the SSH session to the
                               remote device. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_USERNAME will
                               be used instead.
- name: Collect facts from remote devices running Dell OS6
  action: dellos6_facts
      auth_pass              # Specifies the password to use if required to
                               enter privileged
                               mode on the
                               remote device.
                               If `authorize' is
                               false, then this
                               argument does
                               nothing. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_AUTH_PASS
                               will be used
                               instead.
      authorize              # Instructs the module to enter priviledged mode
                               on the remote
                               device before
                               sending any
                               commands.  If not
                               specified, the
                               device will
                               attempt to
                               excecute all
                               commands in non-
                               priviledged mode.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable ANSIBLE_
                               NET_AUTHORIZE
                               will be used
                               instead.
      gather_subset          # When supplied, this argument will restrict the
                               facts collected
                               to a given
                               subset.  Possible
                               values for this
                               argument include
                               all, hardware,
                               config, and
                               interfaces.  Can
                               specify a list of
                               values to include
                               a larger subset.
                               Values can also
                               be used with an
                               initial `[!]' to
                               specify that a
                               specific subset
                               should not be
                               collected.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      password               # Password to authenticate the SSH session to the
                               remote device. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_PASSWORD will
                               be used instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
      provider               # Convenience method that allows all [dellos6]
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Path to an ssh key used to authenticate the SSH
                               session to the
                               remote device.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable ANSIBLE_
                               NET_SSH_KEYFILE
                               will be used
                               instead.
      timeout                # Specifies idle timeout (in seconds) for the
                               connection.
                               Useful if the
                               console freezes
                               before
                               continuing. For
                               example when
                               saving
                               configurations.
      username               # User to authenticate the SSH session to the
                               remote device. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_USERNAME will
                               be used instead.
- name: Run commands on remote devices running Dell OS9
  action: dellos9_command
      auth_pass              # Specifies the password to use if required to
                               enter privileged
                               mode on the
                               remote device.
                               If `authorize' is
                               false, then this
                               argument does
                               nothing. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_AUTH_PASS
                               will be used
                               instead.
      authorize              # Instructs the module to enter priviledged mode
                               on the remote
                               device before
                               sending any
                               commands.  If not
                               specified, the
                               device will
                               attempt to
                               excecute all
                               commands in non-
                               priviledged mode.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable ANSIBLE_
                               NET_AUTHORIZE
                               will be used
                               instead.
      commands=              # List of commands to send to the remote dellos9
                               device over the
                               configured
                               provider. The
                               resulting output
                               from the command
                               is returned. If
                               the `wait_for'
                               argument is
                               provided, the
                               module is not
                               returned until
                               the condition is
                               satisfied or the
                               number of retries
                               has expired.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      interval               # Configures the interval in seconds to wait
                               between retries
                               of the command.
                               If the command
                               does not pass the
                               specified
                               conditions, the
                               interval
                               indicates how
                               long to wait
                               before trying the
                               command again.
      password               # Password to authenticate the SSH session to the
                               remote device. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_PASSWORD will
                               be used instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
      provider               # Convenience method that allows all [dellos9]
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      retries                # Specifies the number of retries a command should
                               be tried before
                               it is considered
                               failed. The
                               command is run on
                               the target device
                               every retry and
                               evaluated against
                               the `wait_for'
                               conditions.
      ssh_keyfile            # Path to an ssh key used to authenticate the SSH
                               session to the
                               remote device.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable ANSIBLE_
                               NET_SSH_KEYFILE
                               will be used
                               instead.
      timeout                # Specifies idle timeout (in seconds) for the
                               connection.
                               Useful if the
                               console freezes
                               before
                               continuing. For
                               example when
                               saving
                               configurations.
      username               # User to authenticate the SSH session to the
                               remote device. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_USERNAME will
                               be used instead.
      wait_for               # List of conditions to evaluate against the
                               output of the
                               command. The task
                               will wait for
                               each condition to
                               be true before
                               moving forward.
                               If the
                               conditional is
                               not true within
                               the configured
                               number of
                               `retries', the
                               task fails. See
                               examples.
- name: Manage Dell OS9 configuration sections
  action: dellos9_config
      after                  # The ordered set of commands to append to the end
                               of the command
                               stack if a change
                               needs to be made.
                               Just like with
                               `before' this
                               allows the
                               playbook designer
                               to append a set
                               of commands to be
                               executed after
                               the command set.
      auth_pass              # Specifies the password to use if required to
                               enter privileged
                               mode on the
                               remote device.
                               If `authorize' is
                               false, then this
                               argument does
                               nothing. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_AUTH_PASS
                               will be used
                               instead.
      authorize              # Instructs the module to enter priviledged mode
                               on the remote
                               device before
                               sending any
                               commands.  If not
                               specified, the
                               device will
                               attempt to
                               excecute all
                               commands in non-
                               priviledged mode.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable ANSIBLE_
                               NET_AUTHORIZE
                               will be used
                               instead.
      backup                 # This argument will cause the module to create a
                               full backup of
                               the current
                               `running-config'
                               from the remote
                               device before any
                               changes are made.
                               The backup file
                               is written to the
                               `backup' folder
                               in the playbook
                               root directory.
                               If the directory
                               does not exist,
                               it is created.
      before                 # The ordered set of commands to push on to the
                               command stack if
                               a change needs to
                               be made.  This
                               allows the
                               playbook designer
                               the opportunity
                               to perform
                               configuration
                               commands prior to
                               pushing any
                               changes without
                               affecting how the
                               set of commands
                               are matched
                               against the
                               system.
      config                 # The `config' argument allows the playbook
                               designer to
                               supply the base
                               configuration to
                               be used to
                               validate
                               configuration
                               changes
                               necessary.  If
                               this argument is
                               provided, the
                               module will not
                               download the
                               running-config
                               from the remote
                               node.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      lines                  # The ordered set of commands that should be
                               configured in the
                               section.  The
                               commands must be
                               the exact same
                               commands as found
                               in the device
                               running-config.
                               Be sure to note
                               the configuration
                               command syntax as
                               some commands are
                               automatically
                               modified by the
                               device config
                               parser. This
                               argument is
                               mutually
                               exclusive with
                               `src'.
      match                  # Instructs the module on the way to perform the
                               matching of the
                               set of commands
                               against the
                               current device
                               config.  If match
                               is set to `line',
                               commands are
                               matched line by
                               line.  If match
                               is set to
                               `strict', command
                               lines are matched
                               with respect to
                               position.  If
                               match is set to
                               `exact', command
                               lines must be an
                               equal match.
                               Finally, if match
                               is set to `none',
                               the module will
                               not attempt to
                               compare the
                               source
                               configuration
                               with the running
                               configuration on
                               the remote
                               device.
      parents                # The ordered set of parents that uniquely
                               identify the
                               section the
                               commands should
                               be checked
                               against.  If the
                               parents argument
                               is omitted, the
                               commands are
                               checked against
                               the set of top
                               level or global
                               commands.
      password               # Password to authenticate the SSH session to the
                               remote device. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_PASSWORD will
                               be used instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
      provider               # Convenience method that allows all [dellos9]
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      replace                # Instructs the module on the way to perform the
                               configuration on
                               the device.  If
                               the replace
                               argument is set
                               to `line' then
                               the modified
                               lines are pushed
                               to the device in
                               configuration
                               mode.  If the
                               replace argument
                               is set to `block'
                               then the entire
                               command block is
                               pushed to the
                               device in
                               configuration
                               mode if any line
                               is not correct.
      save                   # The `save' argument instructs the module to save
                               the running-
                               config to the
                               startup-config at
                               the conclusion of
                               the module
                               running.  If
                               check mode is
                               specified, this
                               argument is
                               ignored.
      src                    # Specifies the source path to the file that
                               contains the
                               configuration or
                               configuration
                               template to load.
                               The path to the
                               source file can
                               either be the
                               full path on the
                               Ansible control
                               host or a
                               relative path
                               from the playbook
                               or role root dir.
                               This argument is
                               mutually
                               exclusive with
                               `lines'.
      ssh_keyfile            # Path to an ssh key used to authenticate the SSH
                               session to the
                               remote device.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable ANSIBLE_
                               NET_SSH_KEYFILE
                               will be used
                               instead.
      timeout                # Specifies idle timeout (in seconds) for the
                               connection.
                               Useful if the
                               console freezes
                               before
                               continuing. For
                               example when
                               saving
                               configurations.
      update                 # The `update' argument controls how the
                               configuration
                               statements are
                               processed on the
                               remote device.
                               Valid choices for
                               the `update'
                               argument are
                               `merge' and
                               `check'.  When
                               the argument is
                               set to `merge',
                               the configuration
                               changes are
                               merged with the
                               current device
                               running
                               configuration.
                               When the argument
                               is set to `check'
                               the configuration
                               updates are
                               determined but
                               not actually
                               configured on the
                               remote device.
      username               # User to authenticate the SSH session to the
                               remote device. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_USERNAME will
                               be used instead.
- name: Collect facts from remote devices running Dell OS9
  action: dellos9_facts
      auth_pass              # Specifies the password to use if required to
                               enter privileged
                               mode on the
                               remote device.
                               If `authorize' is
                               false, then this
                               argument does
                               nothing. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_AUTH_PASS
                               will be used
                               instead.
      authorize              # Instructs the module to enter priviledged mode
                               on the remote
                               device before
                               sending any
                               commands.  If not
                               specified, the
                               device will
                               attempt to
                               excecute all
                               commands in non-
                               priviledged mode.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable ANSIBLE_
                               NET_AUTHORIZE
                               will be used
                               instead.
      gather_subset          # When supplied, this argument will restrict the
                               facts collected
                               to a given
                               subset.  Possible
                               values for this
                               argument include
                               all, hardware,
                               config, and
                               interfaces.  Can
                               specify a list of
                               values to include
                               a larger subset.
                               Values can also
                               be used with an
                               initial `[!]' to
                               specify that a
                               specific subset
                               should not be
                               collected.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      password               # Password to authenticate the SSH session to the
                               remote device. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_PASSWORD will
                               be used instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
      provider               # Convenience method that allows all [dellos9]
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Path to an ssh key used to authenticate the SSH
                               session to the
                               remote device.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable ANSIBLE_
                               NET_SSH_KEYFILE
                               will be used
                               instead.
      timeout                # Specifies idle timeout (in seconds) for the
                               connection.
                               Useful if the
                               console freezes
                               before
                               continuing. For
                               example when
                               saving
                               configurations.
      username               # User to authenticate the SSH session to the
                               remote device. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_USERNAME will
                               be used instead.
- name: Manages some of the steps common in deploying projects.
  action: deploy_helper
      clean                  # Whether to run the clean procedure in case of
                               `state=finalize'.
      current_path           # the name of the symlink that is created when the
                               deploy is
                               finalized. Used
                               in `finalize' and
                               `clean'. Returned
                               in the `deploy_he
                               lper.current_path
                               ' fact.
      keep_releases          # the number of old releases to keep when
                               cleaning. Used in
                               `finalize' and
                               `clean'. Any
                               unfinished builds
                               will be deleted
                               first, so only
                               correct releases
                               will count. The
                               current version
                               will not count.
      path=                  # the root path of the project. Alias `dest'.
                               Returned in the `
                               deploy_helper.pro
                               ject_path' fact.
      release                # the release version that is being deployed.
                               Defaults to a
                               timestamp format
                               %Y%m%d%H%M%S
                               (i.e. '2014111922
                               3359'). This
                               parameter is
                               optional during
                               `state=present',
                               but needs to be
                               set explicitly
                               for
                               `state=finalize'.
                               You can use the
                               generated fact
                               `release={{ deplo
                               y_helper.new_rele
                               ase }}'.
      releases_path          # the name of the folder that will hold the
                               releases. This
                               can be relative
                               to `path' or
                               absolute.
                               Returned in the `
                               deploy_helper.rel
                               eases_path' fact.
      shared_path            # the name of the folder that will hold the shared
                               resources. This
                               can be relative
                               to `path' or
                               absolute. If this
                               is set to an
                               empty string, no
                               shared folder
                               will be created.
                               Returned in the `
                               deploy_helper.sha
                               red_path' fact.
      state                  # the state of the project. `query' will only
                               gather facts,
                               `present' will
                               create the
                               project `root'
                               folder, and in it
                               the `releases'
                               and `shared'
                               folders,
                               `finalize' will
                               remove the unfini
                               shed_filename
                               file, create a
                               symlink to the
                               newly deployed
                               release and
                               optionally clean
                               old releases,
                               `clean' will
                               remove failed &
                               old releases,
                               `absent' will
                               remove the
                               project folder
                               (synonymous to
                               the [file] module
                               with
                               `state=absent')
      unfinished_filename    # the name of the file that indicates a deploy has
                               not finished. All
                               folders in the
                               releases_path
                               that contain this
                               file will be
                               deleted on
                               `state=finalize'
                               with clean=True,
                               or `state=clean'.
                               This file is
                               automatically
                               deleted from the 
                               `new_release_path
                               ' during
                               `state=finalize'.
- name: Create/delete a droplet/SSH_key in DigitalOcean
  action: digital_ocean
      api_token              # DigitalOcean api token.
      backups_enabled        # Optional, Boolean, enables backups for your
                               droplet.
      command                # Which target you want to operate on.
      id                     # Numeric, the droplet id you want to operate on.
      image_id               # This is the slug of the image you would like the
                               droplet created
                               with.
      ipv6                   # Optional, Boolean, enable IPv6 for your droplet.
      name                   # String, this is the name of the droplet - must
                               be formatted by
                               hostname rules,
                               or the name of a
                               SSH key.
      private_networking     # Bool, add an additional, private network
                               interface to
                               droplet for
                               inter-droplet
                               communication.
      region_id              # This is the slug of the region you would like
                               your server to be
                               created in.
      size_id                # This is the slug of the size you would like the
                               droplet created
                               with.
      ssh_key_ids            # Optional, array of of SSH key (numeric) ID that
                               you would like to
                               be added to the
                               server.
      ssh_pub_key            # The public SSH key you want to add to your
                               account.
      state                  # Indicate desired state of the target.
      unique_name            # Bool, require unique hostnames.  By default,
                               DigitalOcean
                               allows multiple
                               hosts with the
                               same name.
                               Setting this to
                               "yes" allows only
                               one host per
                               name.  Useful for
                               idempotence.
      user_data              # opaque blob of data which is made available to
                               the droplet
      virtio                 # Bool, turn on virtio driver in droplet for
                               improved network
                               and storage I/O.
      wait                   # Wait for the droplet to be in state 'running'
                               before returning.
                               If wait is "no"
                               an ip_address may
                               not be returned.
      wait_timeout           # How long before wait gives up, in seconds.
- name: Create/destroy or attach/detach Block Storage volumes in DigitalOcean
  action: digital_ocean_block_storage
      api_token=             # DigitalOcean api token.
      block_size             # The size of the Block Storage volume in
                               gigabytes.
                               Required when
                               command=create
                               and
                               state=present.
      command=               # Which operation do you want to perform.
      description            # Description of the Block Storage volume.
      droplet_id             # The droplet id you want to operate on. Required
                               when
                               command=attach.
      region=                # The slug of the region where your Block Storage
                               volume should be
                               located in.
      state=                 # Indicate desired state of the target.
      timeout                # The timeout in seconds used for polling
                               DigitalOcean's
                               API.
      volume_name=           # The name of the Block Storage volume.
- name: Create/delete a DNS record in DigitalOcean
  action: digital_ocean_domain
      api_token              # DigitalOcean api token.
      id                     # Numeric, the droplet id you want to operate on.
      ip                     # The IP address to point a domain at.
      name                   # String, this is the name of the droplet - must
                               be formatted by
                               hostname rules,
                               or the name of a
                               SSH key, or the
                               name of a domain.
      state                  # Indicate desired state of the target.
- name: Create/delete an SSH key in DigitalOcean
  action: digital_ocean_sshkey
      api_key                # DigitalOcean api key.
      client_id              # DigitalOcean manager id.
      id                     # Numeric, the SSH key id you want to operate on.
      name                   # String, this is the name of an SSH key to create
                               or destroy.
      ssh_pub_key            # The public SSH key you want to add to your
                               account.
      state                  # Indicate desired state of the target.
- name: Create and remove tag(s) to DigitalOcean resource.
  action: digital_ocean_tag
      api_token              # DigitalOcean api token.
      name=                  # The name of the tag. The supported characters
                               for names include
                               alphanumeric
                               characters,
                               dashes, and
                               underscores.
      resource_id            # The ID of the resource to operate on.
      resource_type          # The type of resource to operate on. Currently
                               only tagging of
                               droplets is
                               supported.
      state                  # Whether the tag should be present or absent on
                               the resource.
- name: Manages a Django application.
  action: django_manage
      app_path=              # The path to the root of the Django application
                               where *manage.py*
                               lives.
      apps                   # A list of space-delimited apps to target. Used
                               by the 'test'
                               command.
      cache_table            # The name of the table used for database-backed
                               caching. Used by
                               the 'createcachet
                               able' command.
      command=               # The name of the Django management command to
                               run. Built in
                               commands are
                               cleanup,
                               collectstatic,
                               flush, loaddata,
                               migrate, runfcgi,
                               syncdb, test, and
                               validate. Other
                               commands can be
                               entered, but will
                               fail if they're
                               unknown to
                               Django.  Other
                               commands that may
                               prompt for user
                               input should be
                               run with the
                               `--noinput' flag.
      database               # The database to target. Used by the
                               'createcachetable
                               ', 'flush',
                               'loaddata', and
                               'syncdb'
                               commands.
      failfast               # Fail the command immediately if a test fails.
                               Used by the
                               'test' command.
      fixtures               # A space-delimited list of fixture file names to
                               load in the
                               database.
                               *Required* by the
                               'loaddata'
                               command.
      link                   # Will create links to the files instead of
                               copying them, you
                               can only use this
                               parameter with
                               'collectstatic'
                               command
      merge                  # Will run out-of-order or missing migrations as
                               they are not
                               rollback
                               migrations, you
                               can only use this
                               parameter with
                               'migrate' command
      pythonpath             # A directory to add to the Python path. Typically
                               used to include
                               the settings
                               module if it is
                               located external
                               to the
                               application
                               directory.
      settings               # The Python path to the application's settings
                               module, such as
                               'myapp.settings'.
      skip                   # Will skip over out-of-order missing migrations,
                               you can only use
                               this parameter
                               with `migrate'
      virtualenv             # An optional path to a `virtualenv' installation
                               to use while
                               running the
                               manage
                               application.
- name: Manage etherstubs on Solaris/illumos systems.
  action: dladm_etherstub
      name=                  # Etherstub name.
      state                  # Create or delete Solaris/illumos etherstub.
      temporary              # Specifies that the etherstub is temporary.
                               Temporary
                               etherstubs do not
                               persist across
                               reboots.
- name: Manage VNICs on Solaris/illumos systems.
  action: dladm_vnic
      link=                  # VNIC underlying link name.
      mac                    # Sets the VNIC's MAC address. Must be valid
                               unicast MAC
                               address.
      name=                  # VNIC name.
      state                  # Create or delete Solaris/illumos VNIC.
      temporary              # Specifies that the VNIC is temporary. Temporary
                               VNICs do not
                               persist across
                               reboots.
      vlan                   # Enable VLAN tagging for this VNIC. The VLAN tag
                               will have id
                               `vlan'.
- name: Manages packages with the `dnf' package manager
  action: dnf
      conf_file              # The remote dnf configuration file to use for the
                               transaction.
      disable_gpg_check      # Whether to disable the GPG checking of
                               signatures of
                               packages being
                               installed. Has an
                               effect only if
                               state is
                               `present' or
                               `latest'.
      disablerepo            # `Repoid' of repositories to disable for the
                               install/update
                               operation. These
                               repos will not
                               persist beyond
                               the transaction.
                               When specifying
                               multiple repos,
                               separate them
                               with a ",".
      enablerepo             # `Repoid' of repositories to enable for the
                               install/update
                               operation. These
                               repos will not
                               persist beyond
                               the transaction.
                               When specifying
                               multiple repos,
                               separate them
                               with a ",".
      list                   # Various (non-idempotent) commands for usage with
                               `/usr/bin/ansible
                               ' and `not'
                               playbooks. See
                               examples.
      name=                  # Package name, or package specifier with version,
                               like `name-1.0'.
                               When using
                               state=latest,
                               this can be '*'
                               which means run:
                               dnf -y update.
                               You can also pass
                               a url or a local
                               path to a rpm
                               file.
      state                  # Whether to install (`present', `latest'), or
                               remove (`absent')
                               a package.
- name: Interface with dnsimple.com (a DNS hosting service).
  action: dnsimple
      account_api_token      # Account API token. See `account_email' for info.
      account_email          # Account email. If omitted, the env variables
                               DNSIMPLE_EMAIL
                               and DNSIMPLE_API_
                               TOKEN will be
                               looked for. If
                               those aren't
                               found, a
                               `.dnsimple' file
                               will be looked
                               for, see: https:/
                               /github.com/mikem
                               accana/dnsimple-
                               python#getting-
                               started
      domain                 # Domain to work with. Can be the domain name
                               (e.g.
                               "mydomain.com")
                               or the numeric ID
                               of the domain in
                               DNSimple. If
                               omitted, a list
                               of domains will
                               be returned. If
                               domain is present
                               but the domain
                               doesn't exist, it
                               will be created.
      priority               # Record priority
      record                 # Record to add, if blank a record for the domain
                               will be created,
                               supports the
                               wildcard (*)
      record_ids             # List of records to ensure they either exist or
                               don't exist
      solo                   # Whether the record should be the only one for
                               that record type
                               and record name.
                               Only use with
                               state=present on
                               a record
      state                  # whether the record should exist or not
      ttl                    # The TTL to give the new record
      type                   # The type of DNS record to create
      value                  # Record value Must be specified when trying to
                               ensure a record
                               exists
- name: Interface with dnsmadeeasy.com (a DNS hosting service).
  action: dnsmadeeasy
      account_key=           # Account API Key.
      account_secret=        # Account Secret Key.
      domain=                # Domain to work with. Can be the domain name
                               (e.g.
                               "mydomain.com")
                               or the numeric ID
                               of the domain in
                               DNS Made Easy
                               (e.g. "839989")
                               for faster
                               resolution.
      record_name            # Record name to get/create/delete/update. If
                               record_name is
                               not specified;
                               all records for
                               the domain will
                               be returned in
                               "result"
                               regardless of the
                               state argument.
      record_ttl             # record's "Time to live".  Number of seconds the
                               record remains
                               cached in DNS
                               servers.
      record_type            # Record type.
      record_value           # Record value. HTTPRED: <redirection URL>, MX:
                               <priority>
                               <target name>,
                               NS: <name
                               server>, PTR:
                               <target name>,
                               SRV: <priority>
                               <weight> <port>
                               <target name>,
                               TXT: <text value>
                               If record_value
                               is not specified;
                               no changes will
                               be made and the
                               record will be
                               returned in
                               'result' (in
                               other words, this
                               module can be
                               used to fetch a
                               record's current
                               id, type, and
                               ttl)
      state=                 # whether the record should exist or not
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
- name: manage docker containers
  action: docker
      cap_add                # Add capabilities for the container. Requires
                               docker-py >=
                               0.5.0.
      cap_drop               # Drop capabilities for the container. Requires
                               docker-py >=
                               0.5.0.
      command                # Command used to match and launch containers.
      count                  # Number of matching containers that should be in
                               the desired
                               state.
      cpu_set                # CPUs in which to allow execution. Requires
                               docker-py >=
                               0.6.0.
      cpu_shares             # CPU shares (relative weight). Requires docker-py
                               >= 0.6.0.
      detach                 # Enable detached mode to leave the container
                               running in
                               background. If
                               disabled, fail
                               unless the
                               process exits
                               cleanly.
      devices                # List of host devices to expose to container
      dns                    # List of custom DNS servers for the container.
      docker_api_version     # Remote API version to use. This defaults to the
                               current default
                               as specified by
                               docker-py.
      docker_url             # URL of the host running the docker daemon. This
                               will default to
                               the env var
                               DOCKER_HOST if
                               unspecified.
      docker_user            # Username or UID to use within the container
      domainname             # Container domain name.
      email                  # Remote API email.
      entrypoint             # Corresponds to ``--entrypoint`` option of
                               ``docker run``
                               command and
                               ``ENTRYPOINT``
                               directive of
                               Dockerfile. Used
                               to match and
                               launch
                               containers.
      env                    # Pass a dict of environment variables to the
                               container.
      env_file               # Pass in a path to a file with environment
                               variable
                               (FOO=BAR). If a
                               key value is
                               present in both
                               explicitly
                               presented (i.e.
                               as 'env') and in
                               the environment
                               file, the
                               explicit value
                               will override.
                               Requires docker-
                               py >= 1.4.0.
      expose                 # List of additional container ports to expose for
                               port mappings or
                               links. If the
                               port is already
                               exposed using
                               EXPOSE in a
                               Dockerfile, you
                               don't need to
                               expose it again.
      extra_hosts            # Dict of custom host-to-IP mappings to be defined
                               in the container
      hostname               # Container hostname.
      image=                 # Container image used to match and launch
                               containers.
      insecure_registry      # Use insecure private registry by HTTP instead of
                               HTTPS. Needed for
                               docker-py >=
                               0.5.0.
      labels                 # Set container labels. Requires docker >= 1.6 and
                               docker-py >=
                               1.2.0.
      links                  # List of other containers to link within this
                               container with an
                               optional alias.
                               Use docker CLI-
                               style syntax:
                               `redis:myredis'.
      log_driver             # You can specify a different logging driver for
                               the container
                               than for the
                               daemon. "json-
                               file" Default
                               logging driver
                               for Docker.
                               Writes JSON
                               messages to file.
                               docker logs
                               command is
                               available only
                               for this logging
                               driver. "none"
                               disables any
                               logging for the
                               container.
                               "syslog" Syslog
                               logging driver
                               for Docker.
                               Writes log
                               messages to
                               syslog. docker
                               logs command is
                               not available for
                               this logging
                               driver.
                               "journald"
                               Journald logging
                               driver for
                               Docker. Writes
                               log messages to
                               "journald".
                               "gelf" Graylog
                               Extended Log
                               Format (GELF)
                               logging driver
                               for Docker.
                               Writes log
                               messages to a
                               GELF endpoint
                               likeGraylog or
                               Logstash.
                               "fluentd" Fluentd
                               logging driver
                               for Docker.
                               Writes log
                               messages to
                               "fluentd"
                               (forward input).
                               "awslogs" (added
                               in 2.1) Awslogs
                               logging driver
                               for Docker.
                               Writes log
                               messages to AWS
                               Cloudwatch Logs.
                               If not defined
                               explicitly, the
                               Docker daemon's
                               default ("json-
                               file") will
                               apply. Requires
                               docker >= 1.6.0.
      log_opt                # Additional options to pass to the logging driver
                               selected above.
                               See Docker `log-
                               driver <https://d
                               ocs.docker.com/re
                               ference/logging/o
                               verview/>`
                               documentation for
                               more information.
                               Requires docker
                               >=1.7.0.
      lxc_conf               # LXC configuration parameters, such as
                               `lxc.aa_profile:u
                               nconfined'.
      memory_limit           # RAM allocated to the container as a number of
                               bytes or as a
                               human-readable
                               string like
                               "512MB". Leave as
                               "0" to specify no
                               limit.
      name                   # Name used to match and uniquely name launched
                               containers.
                               Explicit names
                               are used to
                               uniquely identify
                               a single
                               container or to
                               link among
                               containers.
                               Mutually
                               exclusive with a
                               "count" other
                               than "1".
      net                    # Network mode for the launched container: bridge,
                               none, container:<
                               name|id> or host.
                               Requires docker
                               >= 0.11.
      password               # Remote API password.
      pid                    # Set the PID namespace mode for the container
                               (currently only
                               supports 'host').
                               Requires docker-
                               py >= 1.0.0 and
                               docker >= 1.5.0
      ports                  # List containing private to public port mapping
                               specification.
                               Use docker 'CLI-
                               style syntax:
                               `8000',
                               `9000:8000', or `
                               0.0.0.0:9000:8000
                               '' where 8000 is
                               a container port,
                               9000 is a host
                               port, and 0.0.0.0
                               is - a host
                               interface. The
                               container ports
                               need to be
                               exposed either in
                               the Dockerfile or
                               via the `expose'
                               option.
      privileged             # Whether the container should run in privileged
                               mode or not.
      publish_all_ports      # Publish all exposed ports to the host
                               interfaces.
      pull                   # Control when container images are updated from
                               the `docker_url'
                               registry. If
                               "missing," images
                               will be pulled
                               only when missing
                               from the host; if
                               '"always," the
                               registry will be
                               checked for a
                               newer version of
                               the image' each
                               time the task
                               executes.
      read_only              # Mount the container's root filesystem as read
                               only
      registry               # Remote registry URL to pull images from.
      restart_policy         # Container restart policy. The 'unless-stopped'
                               choice is only
                               available
                               starting in
                               Ansible 2.1 and
                               for Docker 1.9
                               and above.
      restart_policy_retry   # Maximum number of times to restart a container.
                               Leave as "0" for
                               unlimited
                               retries.
      signal                 # With the state "killed", you can alter the
                               signal sent to
                               the container.
      state                  # Assert the container's desired state. "present"
                               only asserts that
                               the matching
                               containers exist.
                               "started" asserts
                               that the matching
                               containers both
                               exist and are
                               running, but
                               takes no action
                               if any
                               configuration has
                               changed.
                               "reloaded" (added
                               in Ansible 1.9)
                               asserts that all
                               matching
                               containers are
                               running and
                               restarts any that
                               have any images
                               or configuration
                               out of date.
                               "restarted"
                               unconditionally
                               restarts (or
                               starts) the
                               matching
                               containers.
                               "stopped" and
                               '"killed" stop
                               and kill all
                               matching
                               containers.
                               "absent" stops
                               and then' removes
                               any matching
                               containers.
      stdin_open             # Keep stdin open after a container is launched.
      stop_timeout           # How many seconds to wait for the container to
                               stop before
                               killing it.
      timeout                # Docker daemon response timeout in seconds.
      tls_ca_cert            # Path to a PEM-encoded certificate authority to
                               secure the Docker
                               connection. This
                               has no effect if
                               use_tls is
                               encrypt.
      tls_client_cert        # Path to the PEM-encoded certificate used to
                               authenticate
                               docker client. If
                               specified
                               tls_client_key
                               must be valid
      tls_client_key         # Path to the PEM-encoded key used to authenticate
                               docker client. If
                               specified
                               tls_client_cert
                               must be valid
      tls_hostname           # A hostname to check matches what's supplied in
                               the docker
                               server's
                               certificate.  If
                               unspecified, the
                               hostname is taken
                               from the
                               docker_url.
      tty                    # Allocate a pseudo-tty within the container.
      ulimits                # ulimits, list ulimits with name, soft and
                               optionally hard
                               limit separated
                               by colons. e.g.
                               nofile:1024:2048
                               Requires docker-
                               py >= 1.2.0 and
                               docker >= 1.6.0
      use_tls                # Whether to use tls to connect to the docker
                               server.  "no"
                               means not to use
                               tls (and ignore
                               any other tls
                               related
                               parameters).
                               "encrypt" means
                               to use tls to
                               encrypt the
                               connection to the
                               server.  "verify"
                               means to also
                               verify that the
                               server's
                               certificate is
                               valid for the
                               server (this both
                               verifies the
                               certificate
                               against the CA
                               and that the
                               certificate was
                               issued for that
                               host. If this is
                               unspecified, tls
                               will only be used
                               if one of the
                               other tls options
                               require it.
      username               # Remote API username.
      volumes                # List of volumes to mount within the container
                               Use docker CLI-
                               style syntax: `/h
                               ost:/container[:m
                               ode]' You can
                               specify a read
                               mode for the
                               mount with either
                               `ro' or `rw'.
                               Starting at
                               version 2.1,
                               SELinux hosts can
                               additionally use
                               `z' or `Z' mount
                               options to use a
                               shared or private
                               label for the
                               volume.
      volumes_from           # List of names of containers to mount volumes
                               from.
- name: manage docker containers
  action: docker_container
      api_version            # The version of the Docker API running on the
                               Docker Host.
                               Defaults to the
                               latest version of
                               the API supported
                               by docker-py.
      blkio_weight           # Block IO (relative weight), between 10 and 1000.
      cacert_path            # Use a CA certificate when performing server
                               verification by
                               providing the
                               path to a CA
                               certificate file.
      capabilities           # List of capabilities to add to the container.
      cert_path              # Path to the client's TLS certificate file.
      cleanup                # Use with `detach' to remove the container after
                               successful
                               execution.
      command                # Command to execute when the container starts.
      cpu_period             # Limit CPU CFS (Completely Fair Scheduler) period
      cpu_quota              # Limit CPU CFS (Completely Fair Scheduler) quota
      cpu_shares             # CPU shares (relative weight).
      cpuset_cpus            # CPUs in which to allow execution `1,3' or `1-3'.
      cpuset_mems            # Memory nodes (MEMs) in which to allow execution
                               `0-3' or `0,1'
      detach                 # Enable detached mode to leave the container
                               running in
                               background. If
                               disabled, the
                               task will reflect
                               the status of the
                               container run
                               (failed if the
                               command failed).
      devices                # List of host device bindings to add to the
                               container. Each
                               binding is a
                               mapping expressed
                               in the format: <p
                               ath_on_host>:<pat
                               h_in_container>:<
                               cgroup_permission
                               s>
      dns_search_domains     # List of custom DNS search domains.
      dns_servers            # List of custom DNS servers.
      docker_host            # The URL or Unix socket path used to connect to
                               the Docker API.
                               To connect to a
                               remote host,
                               provide the TCP
                               connection
                               string. For
                               example, 'tcp://1
                               92.0.2.23:2376'.
                               If TLS is used to
                               encrypt the
                               connection, the
                               module will
                               automatically
                               replace 'tcp' in
                               the connection
                               URL with 'https'.
      entrypoint             # Command that overwrites the default ENTRYPOINT
                               of the image.
      env                    # Dictionary of key,value pairs.
      env_file               # Path to a file containing environment variables
                               `FOO=BAR'. If
                               variable also
                               present in `env',
                               then `env' value
                               will override.
                               Requires docker-
                               py >= 1.4.0.
      etc_hosts              # Dict of host-to-IP mappings, where each host
                               name is a key in
                               the dictionary.
                               Each host name
                               will be added to
                               the container's
                               /etc/hosts file.
      exposed_ports          # List of additional container ports which informs
                               Docker that the
                               container listens
                               on the specified
                               network ports at
                               runtime. If the
                               port is already
                               exposed using
                               EXPOSE in a
                               Dockerfile, it
                               does not need to
                               be exposed again.
      force_kill             # Use the kill command when stopping a running
                               container.
      groups                 # List of additional group names and/or IDs that
                               the container
                               process will run
                               as.
      hostname               # Container hostname.
      ignore_image           # When `state' is `present' or `started' the
                               module compares
                               the configuration
                               of an existing
                               container to
                               requested
                               configuration.
                               The evaluation
                               includes the
                               image version. If
                               the image version
                               in the registry
                               does not match
                               the container,
                               the container
                               will be
                               recreated. Stop
                               this behavior by
                               setting
                               `ignore_image' to
                               `True'.
      image                  # Repository path and tag used to create the
                               container. If an
                               image is not
                               found or pull is
                               true, the image
                               will be pulled
                               from the
                               registry. If no
                               tag is included,
                               'latest' will be
                               used.
      interactive            # Keep stdin open after a container is launched,
                               even if not
                               attached.
      ipc_mode               # Set the IPC mode for the container. Can be one
                               of 'container:<na
                               me|id>' to reuse
                               another
                               container's IPC
                               namespace or
                               'host' to use the
                               host's IPC
                               namespace within
                               the container.
      keep_volumes           # Retain volumes associated with a removed
                               container.
      kernel_memory          # Kernel memory limit (format: <number>[<unit>]).
                               Number is a
                               positive integer.
                               Unit can be one
                               of b, k, m, or g.
                               Minimum is 4M.
      key_path               # Path to the client's TLS key file.
      kill_signal            # Override default signal used to kill a running
                               container.
      labels                 # Dictionary of key value pairs.
      links                  # List of name aliases for linked containers in
                               the format `conta
                               iner_name:alias'
      log_driver             # Specify the logging driver. Docker uses json-
                               file by default.
      log_options            # Dictionary of options specific to the chosen
                               log_driver. See h
                               ttps://docs.docke
                               r.com/engine/admi
                               n/logging/overvie
                               w/ for details.
      mac_address            # Container MAC address (e.g. 92:d0:c6:0a:29:33)
      memory                 # Memory limit (format: <number>[<unit>]). Number
                               is a positive
                               integer. Unit can
                               be one of b, k,
                               m, or g
      memory_reservation     # Memory soft limit (format: <number>[<unit>]).
                               Number is a
                               positive integer.
                               Unit can be one
                               of b, k, m, or g
      memory_swap            # Total memory limit (memory + swap,
                               format:<number>[<
                               unit>]). Number
                               is a positive
                               integer. Unit can
                               be one of b, k,
                               m, or g.
      memory_swappiness      # Tune a container's memory swappiness behavior.
                               Accepts an
                               integer between 0
                               and 100.
      name=                  # Assign a name to a new container or match an
                               existing
                               container. When
                               identifying an
                               existing
                               container name
                               may be a name or
                               a long or short
                               container ID.
      network_mode           # Connect the container to a network.
      networks               # List of networks the container belongs to. Each
                               network is a dict
                               with keys `name',
                               `ipv4_address',
                               `ipv6_address',
                               `links',
                               `aliases'. For
                               each network
                               `name' is
                               required, all
                               other keys are
                               optional. If
                               included, `links'
                               or `aliases' are
                               lists. For
                               examples of the
                               data structure
                               and usage see
                               EXAMPLES below.
                               To remove a
                               container from
                               one or more
                               networks, use the
                               `purge_networks'
                               option.
      oom_killer             # Whether or not to disable OOM Killer for the
                               container.
      oom_score_adj          # An integer value containing the score given to
                               the container in
                               order to tune OOM
                               killer
                               preferences.
      paused                 # Use with the started state to pause running
                               processes inside
                               the container.
      pid_mode               # Set the PID namespace mode for the container.
                               Currently only
                               supports 'host'.
      privileged             # Give extended privileges to the container.
      published_ports        # List of ports to publish from the container to
                               the host. Use
                               docker CLI
                               syntax: `8000',
                               `9000:8000', or `
                               0.0.0.0:9000:8000
                               ', where 8000 is
                               a container port,
                               9000 is a host
                               port, and 0.0.0.0
                               is a host
                               interface.
                               Container ports
                               must be exposed
                               either in the
                               Dockerfile or via
                               the `expose'
                               option. A value
                               of ALL will
                               publish all
                               exposed container
                               ports to random
                               host ports,
                               ignoring any
                               other mappings.
                               If `networks'
                               parameter is
                               provided, will
                               inspect each
                               network to see if
                               there exists a
                               bridge network
                               with optional
                               parameter com.doc
                               ker.network.bridg
                               e.host_binding_ip
                               v4. If such a
                               network is found,
                               then published
                               ports where no
                               host IP address
                               is specified will
                               be bound to the
                               host IP pointed
                               to by com.docker.
                               network.bridge.ho
                               st_binding_ipv4.
                               Note that the
                               first bridge
                               network with a co
                               m.docker.network.
                               bridge.host_bindi
                               ng_ipv4 value
                               encountered in
                               the list of
                               `networks' is the
                               one that will be
                               used.
      pull                   # If true, always pull the latest version of an
                               image. Otherwise,
                               will only pull an
                               image when
                               missing.
      purge_networks         # Remove the container from ALL networks not
                               included in
                               `networks'
                               parameter. Any
                               default networks
                               such as `bridge',
                               if not found in
                               `networks', will
                               be removed as
                               well.
      read_only              # Mount the container's root file system as read-
                               only.
      recreate               # Use with present and started states to force the
                               re-creation of an
                               existing
                               container.
      restart                # Use with started state to force a matching
                               container to be
                               stopped and
                               restarted.
      restart_policy         # Container restart policy. Place quotes around
                               `no' option.
      restart_retries        # Use with restart policy to control maximum
                               number of restart
                               attempts.
      security_opts          # List of security options in the form of
                               `"label:user:User
                               "'
      shm_size               # Size of `/dev/shm`. The format is
                               `<number><unit>`.
                               `number` must be
                               greater than `0`.
                               Unit is optional
                               and can be `b`
                               (bytes), `k`
                               (kilobytes), `m`
                               (megabytes), or
                               `g` (gigabytes).
                               Omitting the unit
                               defaults to
                               bytes. If you
                               omit the size
                               entirely, the
                               system uses
                               `64m`.
      ssl_version            # Provide a valid SSL version number. Default
                               value determined
                               by docker-py,
                               currently 1.0.
      state                  # `absent' - A container matching the specified
                               name will be
                               stopped and
                               removed. Use
                               force_kill to
                               kill the
                               container rather
                               than stopping it.
                               Use keep_volumes
                               to retain volumes
                               associated with
                               the removed
                               container.
                               `present' -
                               Asserts the
                               existence of a
                               container
                               matching the name
                               and any provided
                               configuration
                               parameters. If no
                               container matches
                               the name, a
                               container will be
                               created. If a
                               container matches
                               the name but the
                               provided
                               configuration
                               does not match,
                               the container
                               will be updated,
                               if it can be. If
                               it cannot be
                               updated, it will
                               be removed and
                               re-created with
                               the requested
                               config. Image
                               version will be
                               taken into
                               account when
                               comparing
                               configuration. To
                               ignore image
                               version use the
                               ignore_image
                               option. Use the
                               recreate option
                               to force the re-
                               creation of the
                               matching
                               container. Use
                               force_kill to
                               kill the
                               container rather
                               than stopping it.
                               Use keep_volumes
                               to retain volumes
                               associated with a
                               removed
                               container.
                               `started' -
                               Asserts there is
                               a running
                               container
                               matching the name
                               and any provided
                               configuration. If
                               no container
                               matches the name,
                               a container will
                               be created and
                               started. If a
                               container
                               matching the name
                               is found but the
                               configuration
                               does not match,
                               the container
                               will be updated,
                               if it can be. If
                               it cannot be
                               updated, it will
                               be removed and a
                               new container
                               will be created
                               with the
                               requested
                               configuration and
                               started. Image
                               version will be
                               taken into
                               account when
                               comparing
                               configuration. To
                               ignore image
                               version use the
                               ignore_image
                               option. Use
                               recreate to
                               always re-create
                               a matching
                               container, even
                               if it is running.
                               Use restart to
                               force a matching
                               container to be
                               stopped and
                               restarted. Use
                               force_kill to
                               kill a container
                               rather than
                               stopping it. Use
                               keep_volumes to
                               retain volumes
                               associated with a
                               removed
                               container.
                               `stopped' -
                               Asserts that the
                               container is
                               first `present',
                               and then if the
                               container is
                               running moves it
                               to a stopped
                               state. Use
                               force_kill to
                               kill a container
                               rather than
                               stopping it.
      stop_signal            # Override default signal used to stop the
                               container.
      stop_timeout           # Number of seconds to wait for the container to
                               stop before
                               sending SIGKILL.
      timeout                # The maximum amount of time in seconds to wait on
                               a response from
                               the API.
      tls                    # Secure the connection to the API by using TLS
                               without verifying
                               the authenticity
                               of the Docker
                               host server.
      tls_hostname           # When verifying the authenticity of the Docker
                               Host server,
                               provide the
                               expected name of
                               the server.
      tls_verify             # Secure the connection to the API by using TLS
                               and verifying the
                               authenticity of
                               the Docker host
                               server.
      trust_image_content    # If true, skip image verification.
      tty                    # Allocate a psuedo-TTY.
      ulimits                # List of ulimit options. A ulimit is specified as
                               `nofile:262144:26
                               2144'
      user                   # Sets the username or UID used and optionally the
                               groupname or GID
                               for the specified
                               command. Can be [
                               user | user:group
                               | uid | uid:gid |
                               user:gid |
                               uid:group ]
      uts                    # Set the UTS namespace mode for the container.
      volume_driver          # The container volume driver.
      volumes                # List of volumes to mount within the container.
                               Use docker CLI-
                               style syntax: `/h
                               ost:/container[:m
                               ode]' You can
                               specify a read
                               mode for the
                               mount with either
                               `ro' or `rw'.
                               SELinux hosts can
                               additionally use
                               `z' or `Z' to use
                               a shared or
                               private label for
                               the volume.
      volumes_from           # List of container names or Ids to get volumes
                               from.
- name: Manage docker images.
  action: docker_image
      api_version            # The version of the Docker API running on the
                               Docker Host.
                               Defaults to the
                               latest version of
                               the API supported
                               by docker-py.
      archive_path           # Use with state `present' to archive an image to
                               a .tar file.
      buildargs              # Provide a dictionary of `key:value' build
                               arguments that
                               map to Dockerfile
                               ARG directive.
                               Docker expects
                               the value to be a
                               string. For
                               convenience any
                               non-string values
                               will be converted
                               to strings.
                               Requires Docker
                               API >= 1.21 and
                               docker-py >=
                               1.7.0.
      cacert_path            # Use a CA certificate when performing server
                               verification by
                               providing the
                               path to a CA
                               certificate file.
      cert_path              # Path to the client's TLS certificate file.
      container_limits       # A dictionary of limits applied to each container
                               created by the
                               build process.
      docker_host            # The URL or Unix socket path used to connect to
                               the Docker API.
                               To connect to a
                               remote host,
                               provide the TCP
                               connection
                               string. For
                               example, 'tcp://1
                               92.0.2.23:2376'.
                               If TLS is used to
                               encrypt the
                               connection, the
                               module will
                               automatically
                               replace 'tcp' in
                               the connection
                               URL with 'https'.
      dockerfile             # Use with state `present' to provide an alternate
                               name for the
                               Dockerfile to use
                               when building an
                               image.
      force                  # Use with state `absent' to un-tag and remove all
                               images matching
                               the specified
                               name. Use with
                               state `present'
                               to build, load or
                               pull an image
                               when the image
                               already exists.
      http_timeout           # Timeout for HTTP requests during the image build
                               operation.
                               Provide a
                               positive integer
                               value for the
                               number of
                               seconds.
      key_path               # Path to the client's TLS key file.
      load_path              # Use with state `present' to load an image from a
                               .tar file.
      name=                  # Image name. Name format will be one of: name,
                               repository/name, 
                               registry_server:p
                               ort/name. When
                               pushing or
                               pulling an image
                               the name can
                               optionally
                               include the tag
                               by appending
                               ':tag_name'.
      nocache                # Do not use cache when building an image.
      path                   # Use with state 'present' to build an image. Will
                               be the path to a
                               directory
                               containing the
                               context and
                               Dockerfile for
                               building an
                               image.
      pull                   # When building an image downloads any updates to
                               the FROM image in
                               Dockerfile.
      push                   # Push the image to the registry. Specify the
                               registry as part
                               of the `name' or
                               `repository'
                               parameter.
      repository             # Full path to a repository. Use with state
                               `present' to tag
                               the image into
                               the repository.
                               Expects format
                               `repository:tag'.
                               If no tag is
                               provided, will
                               use the value of
                               the `tag'
                               parameter or
                               `latest'.
      rm                     # Remove intermediate containers after build.
      ssl_version            # Provide a valid SSL version number. Default
                               value determined
                               by docker-py,
                               currently 1.0.
      state                  # Make assertions about the state of an image.
                               When `absent' an
                               image will be
                               removed. Use the
                               force option to
                               un-tag and remove
                               all images
                               matching the
                               provided name.
                               When `present'
                               check if an image
                               exists using the
                               provided name and
                               tag. If the image
                               is not found or
                               the force option
                               is used, the
                               image will either
                               be pulled, built
                               or loaded. By
                               default the image
                               will be pulled
                               from Docker Hub.
                               To build the
                               image, provide a
                               path value set to
                               a directory
                               containing a
                               context and
                               Dockerfile. To
                               load an image,
                               specify load_path
                               to provide a path
                               to an archive
                               file. To tag an
                               image to a
                               repository,
                               provide a
                               repository path.
                               If the name
                               contains a
                               repository path,
                               it will be
                               pushed. NOTE:
                               `build' is
                               DEPRECATED and
                               will be removed
                               in release 2.3.
                               Specifying
                               `build' will
                               behave the same
                               as `present'.
      tag                    # Used to select an image when pulling. Will be
                               added to the
                               image when
                               pushing, tagging
                               or building.
                               Defaults to
                               `latest'. If
                               `name' parameter
                               format is
                               `name:tag', then
                               tag value from
                               `name' will take
                               precedence.
      timeout                # The maximum amount of time in seconds to wait on
                               a response from
                               the API.
      tls                    # Secure the connection to the API by using TLS
                               without verifying
                               the authenticity
                               of the Docker
                               host server.
      tls_hostname           # When verifying the authenticity of the Docker
                               Host server,
                               provide the
                               expected name of
                               the server.
      tls_verify             # Secure the connection to the API by using TLS
                               and verifying the
                               authenticity of
                               the Docker host
                               server.
      use_tls                # DEPRECATED. Whether to use tls to connect to the
                               docker server.
                               Set to `no' when
                               TLS will not be
                               used. Set to
                               `encrypt' to use
                               TLS. And set to
                               `verify' to use
                               TLS and verify
                               that the server's
                               certificate is
                               valid for the
                               server. NOTE: If
                               you specify this
                               option, it will
                               set the value of
                               the tls or
                               tls_verify
                               parameters.
- name: Inspect docker images
  action: docker_image_facts
      api_version            # The version of the Docker API running on the
                               Docker Host.
                               Defaults to the
                               latest version of
                               the API supported
                               by docker-py.
      cacert_path            # Use a CA certificate when performing server
                               verification by
                               providing the
                               path to a CA
                               certificate file.
      cert_path              # Path to the client's TLS certificate file.
      docker_host            # The URL or Unix socket path used to connect to
                               the Docker API.
                               To connect to a
                               remote host,
                               provide the TCP
                               connection
                               string. For
                               example, 'tcp://1
                               92.0.2.23:2376'.
                               If TLS is used to
                               encrypt the
                               connection, the
                               module will
                               automatically
                               replace 'tcp' in
                               the connection
                               URL with 'https'.
      key_path               # Path to the client's TLS key file.
      name=                  # An image name or a list of image names. Name
                               format will be
                               name[:tag] or rep
                               ository/name[:tag
                               ], where tag is
                               optional. If a
                               tag is not
                               provided,
                               'latest' will be
                               used.
      ssl_version            # Provide a valid SSL version number. Default
                               value determined
                               by docker-py,
                               currently 1.0.
      timeout                # The maximum amount of time in seconds to wait on
                               a response from
                               the API.
      tls                    # Secure the connection to the API by using TLS
                               without verifying
                               the authenticity
                               of the Docker
                               host server.
      tls_hostname           # When verifying the authenticity of the Docker
                               Host server,
                               provide the
                               expected name of
                               the server.
      tls_verify             # Secure the connection to the API by using TLS
                               and verifying the
                               authenticity of
                               the Docker host
                               server.
- name: Log into a Docker registry.
  action: docker_login
      api_version            # The version of the Docker API running on the
                               Docker Host.
                               Defaults to the
                               latest version of
                               the API supported
                               by docker-py.
      cacert_path            # Use a CA certificate when performing server
                               verification by
                               providing the
                               path to a CA
                               certificate file.
      cert_path              # Path to the client's TLS certificate file.
      config_path            # Custom path to the Docker CLI configuration
                               file.
      docker_host            # The URL or Unix socket path used to connect to
                               the Docker API.
                               To connect to a
                               remote host,
                               provide the TCP
                               connection
                               string. For
                               example, 'tcp://1
                               92.0.2.23:2376'.
                               If TLS is used to
                               encrypt the
                               connection, the
                               module will
                               automatically
                               replace 'tcp' in
                               the connection
                               URL with 'https'.
      email                  # The email address for the registry account.
                               NOTE: private
                               registries may
                               not require this,
                               but Docker Hub
                               requires it.
      key_path               # Path to the client's TLS key file.
      password=              # The plaintext password for the registry account
      reauthorize            # Refresh exiting authentication found in the
                               configuration
                               file.
      registry_url           # The registry URL.
      ssl_version            # Provide a valid SSL version number. Default
                               value determined
                               by docker-py,
                               currently 1.0.
      timeout                # The maximum amount of time in seconds to wait on
                               a response from
                               the API.
      tls                    # Secure the connection to the API by using TLS
                               without verifying
                               the authenticity
                               of the Docker
                               host server.
      tls_hostname           # When verifying the authenticity of the Docker
                               Host server,
                               provide the
                               expected name of
                               the server.
      tls_verify             # Secure the connection to the API by using TLS
                               and verifying the
                               authenticity of
                               the Docker host
                               server.
      username=              # The username for the registry account
- name: Manage Docker networks
  action: docker_network
      api_version            # The version of the Docker API running on the
                               Docker Host.
                               Defaults to the
                               latest version of
                               the API supported
                               by docker-py.
      appends                # By default the connected list is canonical,
                               meaning
                               containers not on
                               the list are
                               removed from the
                               network. Use
                               `appends' to
                               leave existing
                               containers
                               connected.
      cacert_path            # Use a CA certificate when performing server
                               verification by
                               providing the
                               path to a CA
                               certificate file.
      cert_path              # Path to the client's TLS certificate file.
      connected              # List of container names or container IDs to
                               connect to a
                               network.
      docker_host            # The URL or Unix socket path used to connect to
                               the Docker API.
                               To connect to a
                               remote host,
                               provide the TCP
                               connection
                               string. For
                               example, 'tcp://1
                               92.0.2.23:2376'.
                               If TLS is used to
                               encrypt the
                               connection, the
                               module will
                               automatically
                               replace 'tcp' in
                               the connection
                               URL with 'https'.
      driver                 # Specify the type of network. Docker provides
                               bridge and
                               overlay drivers,
                               but 3rd party
                               drivers can also
                               be used.
      driver_options         # Dictionary of network settings. Consult docker
                               docs for valid
                               options and
                               values.
      force                  # With state `absent' forces disconnecting all
                               containers from
                               the network prior
                               to deleting the
                               network. With
                               state `present'
                               will disconnect
                               all containers,
                               delete the
                               network and re-
                               create the
                               network.  This
                               option is
                               required if you
                               have changed the
                               IPAM or driver
                               options and want
                               an existing
                               network to be
                               updated to use
                               the new options.
      ipam_driver            # Specify an IPAM driver.
      ipam_options           # Dictionary of IPAM options.
      key_path               # Path to the client's TLS key file.
      name=                  # Name of the network to operate on.
      ssl_version            # Provide a valid SSL version number. Default
                               value determined
                               by docker-py,
                               currently 1.0.
      state                  # `absent' deletes the network. If a network has
                               connected
                               containers, it
                               cannot be
                               deleted. Use the
                               `force' option to
                               disconnect all
                               containers and
                               delete the
                               network.
                               `present' creates
                               the network, if
                               it does not
                               already exist
                               with the
                               specified
                               parameters, and
                               connects the list
                               of containers
                               provided via the
                               connected
                               parameter.
                               Containers not on
                               the list will be
                               disconnected. An
                               empty list will
                               leave no
                               containers
                               connected to the
                               network. Use the
                               `appends' option
                               to leave existing
                               containers
                               connected. Use
                               the `force'
                               options to force
                               re-creation of
                               the network.
      timeout                # The maximum amount of time in seconds to wait on
                               a response from
                               the API.
      tls                    # Secure the connection to the API by using TLS
                               without verifying
                               the authenticity
                               of the Docker
                               host server.
      tls_hostname           # When verifying the authenticity of the Docker
                               Host server,
                               provide the
                               expected name of
                               the server.
      tls_verify             # Secure the connection to the API by using TLS
                               and verifying the
                               authenticity of
                               the Docker host
                               server.
- name: Manage docker services and containers.
  action: docker_service
      api_version            # The version of the Docker API running on the
                               Docker Host.
                               Defaults to the
                               latest version of
                               the API supported
                               by docker-py.
      build                  # Use with state `present' to always build images
                               prior to starting
                               the application.
                               Same as running
                               docker-compose
                               build with the
                               pull option.
                               Images will only
                               be rebuilt if
                               Docker detects a
                               change in the
                               Dockerfile or
                               build directory
                               contents. Use the
                               `nocache' option
                               to ignore the
                               image cache when
                               performing the
                               build. If an
                               existing image is
                               replaced,
                               services using
                               the image will be
                               recreated unless
                               `recreate' is
                               `never'.
      cacert_path            # Use a CA certificate when performing server
                               verification by
                               providing the
                               path to a CA
                               certificate file.
      cert_path              # Path to the client's TLS certificate file.
      debug                  # Include `actions' in the return values.
      definition             # Provide docker-compose yaml describing one or
                               more services,
                               networks and
                               volumes. Mutually
                               exclusive with
                               `project_src' and
                               `files'.
      dependencies           # When `state' is `present' specify whether or not
                               to include linked
                               services.
      docker_host            # The URL or Unix socket path used to connect to
                               the Docker API.
                               To connect to a
                               remote host,
                               provide the TCP
                               connection
                               string. For
                               example, 'tcp://1
                               92.0.2.23:2376'.
                               If TLS is used to
                               encrypt the
                               connection, the
                               module will
                               automatically
                               replace 'tcp' in
                               the connection
                               URL with 'https'.
      files                  # List of file names relative to `project_src'.
                               Overrides docker-
                               compose.yml or
                               docker-
                               compose.yaml.
                               Files are loaded
                               and merged in the
                               order given.
      hostname_check         # Whether or not to check the Docker daemon's
                               hostname against
                               the name provided
                               in the client
                               certificate.
      key_path               # Path to the client's TLS key file.
      nocache                # Use with the build option to ignore the cache
                               during the image
                               build process.
      project_name           # Provide a project name. If not provided, the
                               project name is
                               taken from the
                               basename of
                               `project_src'.
                               Required when no
                               `definition' is
                               provided.
      project_src            # Path to a directory containing a docker-
                               compose.yml or
                               docker-
                               compose.yaml
                               file. Mutually
                               exclusive with
                               `definition'.
                               Required when no
                               `definition' is
                               provided.
      pull                   # Use with state `present' to always pull images
                               prior to starting
                               the application.
                               Same as running
                               docker-compose
                               pull. When a new
                               image is pulled,
                               services using
                               the image will be
                               recreated unless
                               `recreate' is
                               `never'.
      recreate               # By default containers will be recreated when
                               their
                               configuration
                               differs from the
                               service
                               definition.
                               Setting to
                               `never' ignores
                               configuration
                               differences and
                               leaves existing
                               containers
                               unchanged.
                               Setting to
                               `always' forces
                               recreation of all
                               existing
                               containers.
      remove_images          # Use with state `absent' to remove the all images
                               or only local
                               images.
      remove_volumes         # Use with state `absent' to remove data volumes.
      restarted              # Use with state `present' to restart all
                               containers.
      scale                  # When `state' is `present' scale services.
                               Provide a
                               dictionary of
                               key/value pairs
                               where the key is
                               the name of the
                               service and the
                               value is an
                               integer count for
                               the number of
                               containers.
      services               # When `state' is `present' run `docker-compose
                               up' on a subset
                               of services.
      ssl_version            # Provide a valid SSL version number. Default
                               value determined
                               by docker-py,
                               currently 1.0.
      state                  # Desired state of the project. Specifying
                               `present' is the
                               same as running
                               `docker-compose
                               up'. Specifying
                               `absent' is the
                               same as running
                               `docker-compose
                               down'.
      stopped                # Use with state `present' to leave the containers
                               in an exited or
                               non-running
                               state.
      timeout                # The maximum amount of time in seconds to wait on
                               a response from
                               the API.
      tls                    # Secure the connection to the API by using TLS
                               without verifying
                               the authenticity
                               of the Docker
                               host server.
      tls_hostname           # When verifying the authenticity of the Docker
                               Host server,
                               provide the
                               expected name of
                               the server.
      tls_verify             # Secure the connection to the API by using TLS
                               and verifying the
                               authenticity of
                               the Docker host
                               server.
- name: Dpkg package selection selections
  action: dpkg_selections
      name=                  # Name of the package
      selection=             # The selection state to set the package to.
- name: Create, update or delete AWS Dynamo DB tables.
  action: dynamodb_table
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      hash_key_name          # Name of the hash key. Required when
                               `state=present'.
      hash_key_type          # Type of the hash key.
      indexes                # list of dictionaries describing indexes to add
                               to the table.
                               global indexes
                               can be updated.
                               local indexes
                               don't support
                               updates or have
                               throughput.
                               required options:
                               ['name', 'type',
                               'hash_key_name']
                               valid types:
                               ['all',
                               'global_all',
                               'global_include',
                               'global_keys_only
                               ', 'include',
                               'keys_only']
                               other options:
                               ['hash_key_type',
                               'range_key_name',
                               'range_key_type',
                               'includes',
                               'read_capacity',
                               'write_capacity']
      name=                  # Name of the table.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      range_key_name         # Name of the range key.
      range_key_type         # Type of the range key.
      read_capacity          # Read throughput capacity (units) to provision.
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state                  # Create or delete the table
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
      write_capacity         # Write throughput capacity (units) to provision.
- name: Installs Python libraries
  action: easy_install
      executable             # The explicit executable or a pathname to the
                               executable to be
                               used to run
                               easy_install for
                               a specific
                               version of Python
                               installed in the
                               system. For
                               example `easy_ins
                               tall-3.3', if
                               there are both
                               Python 2.7 and
                               3.3 installations
                               in the system and
                               you want to run
                               easy_install for
                               the Python 3.3
                               installation.
      name=                  # A Python library name
      state                  # The desired state of the library. `latest'
                               ensures that the
                               latest version is
                               installed.
      virtualenv             # an optional `virtualenv' directory path to
                               install into. If
                               the `virtualenv'
                               does not exist,
                               it is created
                               automatically
      virtualenv_command     # The command to create the virtual environment
                               with. For example
                               `pyvenv',
                               `virtualenv',
                               `virtualenv2'.
      virtualenv_site_packages   # Whether the virtual environment will inherit
                               packages from the
                               global site-
                               packages
                               directory.  Note
                               that if this
                               setting is
                               changed on an
                               already existing
                               virtual
                               environment it
                               will not have any
                               effect, the
                               environment must
                               be deleted and
                               newly created.
- name: create, terminate, start or stop an instance in ec2
  action: ec2
      assign_public_ip       # when provisioning within vpc, assign a public IP
                               address. Boto
                               library must be
                               2.13.0+
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      count                  # number of instances to launch
      count_tag              # Used with 'exact_count' to determine how many
                               nodes based on a
                               specific tag
                               criteria should
                               be running.  This
                               can be expressed
                               in multiple ways
                               and is shown in
                               the EXAMPLES
                               section.  For
                               instance, one can
                               request 25
                               servers that are
                               tagged with "clas
                               s=webserver". The
                               specified tag
                               must already
                               exist or be
                               passed in as the
                               'instance_tags'
                               option.
      ebs_optimized          # whether instance is using optimized EBS volumes,
                               see http://docs.a
                               ws.amazon.com/AWS
                               EC2/latest/UserGu
                               ide/EBSOptimized.
                               html
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      exact_count            # An integer value which indicates how many
                               instances that
                               match the
                               'count_tag'
                               parameter should
                               be running.
                               Instances are
                               either created or
                               terminated based
                               on this value.
      group                  # security group (or list of groups) to use with
                               the instance
      group_id               # security group id (or list of ids) to use with
                               the instance
      image=                 # `ami' ID to use for the instance
      instance_ids           # list of instance ids, currently used for states:
                               absent, running,
                               stopped
      instance_initiated_shutdown_behavior   # Set whether AWS will Stop or Terminate an
                               instance on
                               shutdown
      instance_profile_name   # Name of the IAM instance profile to use. Boto
                               library must be
                               2.5.0+
      instance_tags          # a hash/dictionary of tags to add to the new
                               instance or for
                               starting/stopping
                               instance by tag;
                               '{"key":"value"}'
                               and '{"key":"valu
                               e","key":"value"}
                               '
      instance_type=         # instance type to use for the instance, see http:
                               //docs.aws.amazon
                               .com/AWSEC2/lates
                               t/UserGuide
                               /instance-
                               types.html
      kernel                 # kernel `eki' to use for the instance
      key_name               # key pair to use on the instance
      monitoring             # enable detailed monitoring (CloudWatch) for
                               instance
      network_interfaces     # A list of existing network interfaces to attach
                               to the instance
                               at launch. When
                               specifying
                               existing network
                               interfaces, none
                               of the
                               assign_public_ip,
                               private_ip,
                               vpc_subnet_id,
                               group, or
                               group_id
                               parameters may be
                               used. (Those
                               parameters are
                               for creating a
                               new network
                               interface at
                               launch.)
      placement_group        # placement group for the instance when using EC2
                               Clustered Compute
      private_ip             # the private ip address to assign the instance
                               (from the vpc
                               subnet)
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      ramdisk                # ramdisk `eri' to use for the instance
      region                 # The AWS region to use.  Must be specified if
                               ec2_url is not
                               used. If not
                               specified then
                               the value of the
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      source_dest_check      # Enable or Disable the Source/Destination checks
                               (for NAT
                               instances and
                               Virtual Routers)
      spot_launch_group      # Launch group for spot request, see http://docs.a
                               ws.amazon.com/AWS
                               EC2/latest/UserGu
                               ide/how-spot-
                               instances-
                               work.html#spot-
                               launch-group
      spot_price             # Maximum spot price to bid, If not set a regular
                               on-demand
                               instance is
                               requested. A spot
                               request is made
                               with this maximum
                               bid. When it is
                               filled, the
                               instance is
                               started.
      spot_type              # Type of spot request; one of "one-time" or
                               "persistent".
                               Defaults to "one-
                               time" if not
                               supplied.
      spot_wait_timeout      # how long to wait for the spot instance request
                               to be fulfilled
      state                  # create or terminate instances
      tenancy                # An instance with a tenancy of "dedicated" runs
                               on single-tenant
                               hardware and can
                               only be launched
                               into a VPC. Note
                               that to use
                               dedicated tenancy
                               you MUST specify
                               a vpc_subnet_id
                               as well.
                               Dedicated tenancy
                               is not available
                               for EC2 "micro"
                               instances.
      termination_protection   # Enable or Disable the Termination Protection
      user_data              # opaque blob of data which is made available to
                               the ec2 instance
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
      volumes                # a list of hash/dictionaries of volumes to add to
                               the new instance;
                               '[{"key":"value",
                               "key":"value"}]';
                               keys allowed are
                               - device_name
                               (str; required), 
                               delete_on_termina
                               tion (bool;
                               False),
                               device_type
                               (deprecated),
                               ephemeral (str),
                               encrypted (bool;
                               False), snapshot
                               (str),
                               volume_type
                               (str), iops (int)
                               - device_type is
                               deprecated use
                               volume_type, iops
                               must be set when 
                               volume_type='io1'
                               , ephemeral and
                               snapshot are
                               mutually
                               exclusive.
      vpc_subnet_id          # the subnet ID in which to launch the instance
                               (VPC)
      wait                   # wait for the instance to be 'running' before
                               returning.  Does
                               not wait for SSH,
                               see 'wait_for'
                               example for
                               details.
      wait_timeout           # how long before wait gives up, in seconds
      zone                   # AWS availability zone in which to launch the
                               instance
- name: create or destroy an image in ec2
  action: ec2_ami
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      delete_snapshot        # Whether or not to delete snapshots when
                               deregistering
                               AMI.
      description            # An optional human-readable string describing the
                               contents and
                               purpose of the
                               AMI.
      device_mapping         # An optional list of device hashes/dictionaries
                               with custom
                               configurations
                               (same block-
                               device-mapping
                               parameters) Valid
                               properties
                               include:
                               device_name,
                               volume_type, size
                               (in GB), delete_o
                               n_termination
                               (boolean),
                               no_device
                               (boolean),
                               snapshot_id, iops
                               (for io1
                               volume_type)
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      image_id               # Image ID to be deregistered.
      instance_id            # instance id of the image to create
      launch_permissions     # Users and groups that should be able to launch
                               the ami. Expects
                               dictionary with a
                               key of user_ids
                               and/or
                               group_names.
                               user_ids should
                               be a list of
                               account ids.
                               group_name should
                               be a list of
                               groups, "all" is
                               the only
                               acceptable value
                               currently.
      name                   # The name of the new image to create
      no_reboot              # An optional flag indicating that the bundling
                               process should
                               not attempt to
                               shutdown the
                               instance before
                               bundling. If this
                               flag is True, the
                               responsibility of
                               maintaining file
                               system integrity
                               is left to the
                               owner of the
                               instance. The
                               default choice is
                               "no".
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state                  # create or deregister/delete image
      tags                   # a dictionary of tags to add to the new image;
                               '{"key":"value"}'
                               and '{"key":"valu
                               e","key":"value"}
                               '
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
      wait                   # wait for the AMI to be in state 'available'
                               before returning.
      wait_timeout           # how long before wait gives up, in seconds
- name: copies AMI between AWS regions, return new image id
  action: ec2_ami_copy
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      description            # An optional human-readable string describing the
                               contents and
                               purpose of the
                               new AMI.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      encrypted              # Whether or not to encrypt the target image
      kms_key_id             # KMS key id used to encrypt image. If not
                               specified, uses
                               default EBS
                               Customer Master
                               Key (CMK) for
                               your account.
      name                   # The name of the new image to copy
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      source_image_id=       # the id of the image in source region that should
                               be copied
      source_region=         # the source region that AMI should be copied from
      tags                   # a hash/dictionary of tags to add to the new
                               copied AMI;
                               '{"key":"value"}'
                               and '{"key":"valu
                               e","key":"value"}
                               '
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
      wait                   # wait for the copied AMI to be in state
                               'available'
                               before returning.
      wait_timeout           # how long before wait gives up, in seconds
- name: Searches for AMIs to obtain the AMI ID and other information
  action: ec2_ami_find
      ami_id                 # An AMI ID to match.
      ami_tags               # A hash/dictionary of tags to match for the AMI.
      architecture           # An architecture type to match (e.g. x86_64).
      hypervisor             # A hypervisor type type to match (e.g. xen).
      is_public              # Whether or not the image(s) are public.
      name                   # An AMI name to match.
      no_result_action       # What to do when no results are found. 'success'
                               reports success
                               and returns an
                               empty array
                               'fail' causes the
                               module to report
                               failure
      owner                  # Search AMIs owned by the specified owner Can
                               specify an AWS
                               account ID, or
                               one of the
                               special IDs
                               'self', 'amazon'
                               or 'aws-
                               marketplace' If
                               not specified,
                               all EC2 AMIs in
                               the specified
                               region will be
                               searched. You can
                               include wildcards
                               in many of the
                               search options.
                               An asterisk (*)
                               matches zero or
                               more characters,
                               and a question
                               mark (?) matches
                               exactly one
                               character. You
                               can escape
                               special
                               characters using
                               a backslash (\)
                               before the
                               character. For
                               example, a value
                               of \*amazon\?\
                               searches for the
                               literal string
                               *amazon?\.
      platform               # Platform type to match.
      region=                # The AWS region to use.
      sort                   # Optional attribute which with to sort the
                               results. If
                               specifying 'tag',
                               the 'tag_name'
                               parameter is
                               required.
                               Starting at
                               version 2.1,
                               additional sort
                               choices of
                               architecture, blo
                               ck_device_mapping
                               , creationDate,
                               hypervisor,
                               is_public,
                               location,
                               owner_id,
                               platform,
                               root_device_name,
                               root_device_type,
                               state, and virtua
                               lization_type are
                               supported.
      sort_end               # Which result to end with (when sorting).
                               Corresponds to
                               Python slice
                               notation.
      sort_order             # Order in which to sort results. Only used when
                               the 'sort'
                               parameter is
                               specified.
      sort_start             # Which result to start with (when sorting).
                               Corresponds to
                               Python slice
                               notation.
      sort_tag               # Tag name with which to sort results. Required
                               when specifying
                               'sort=tag'.
      state                  # AMI state to match.
      virtualization_type    # Virtualization type to match (e.g. hvm).
- name: Create or delete AWS Autoscaling Groups
  action: ec2_asg
      availability_zones     # List of availability zone names in which to
                               create the group.
                               Defaults to all
                               the availability
                               zones in the
                               region if vpc_zon
                               e_identifier is
                               not set.
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      default_cooldown       # The number of seconds after a scaling activity
                               completes before
                               another can
                               begin.
      desired_capacity       # Desired number of instances in group, if
                               unspecified then
                               the current group
                               value will be
                               used.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      health_check_period    # Length of time in seconds after a new EC2
                               instance comes
                               into service that
                               Auto Scaling
                               starts checking
                               its health.
      health_check_type      # The service you want the health status from,
                               Amazon EC2 or
                               Elastic Load
                               Balancer.
      launch_config_name=    # Name of the Launch configuration to use for the
                               group. See the
                               ec2_lc module for
                               managing these.
      lc_check               # Check to make sure instances that are being
                               replaced with
                               replace_instances
                               do not already
                               have the current
                               launch_config.
      load_balancers         # List of ELB names to use for the group
      max_size               # Maximum number of instances in group, if
                               unspecified then
                               the current group
                               value will be
                               used.
      min_size               # Minimum number of instances in group, if
                               unspecified then
                               the current group
                               value will be
                               used.
      name=                  # Unique name for group to be created or deleted
      notification_topic     # A SNS topic ARN to send auto scaling
                               notifications to.
      notification_types     # A list of auto scaling events to trigger
                               notifications on.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      replace_all_instances   # In a rolling fashion, replace all instances with
                               an old launch
                               configuration
                               with one from the
                               current launch
                               configuration.
      replace_batch_size     # Number of instances you'd like to replace at a
                               time.  Used with 
                               replace_all_insta
                               nces.
      replace_instances      # List of instance_ids belonging to the named ASG
                               that you would
                               like to terminate
                               and be replaced
                               with instances
                               matching the
                               current launch
                               configuration.
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state                  # register or deregister the instance
      tags                   # A list of tags to add to the Auto Scale Group.
                               Optional key is '
                               propagate_at_laun
                               ch', which
                               defaults to true.
      termination_policies   # An ordered list of criteria used for selecting
                               instances to be
                               removed from the
                               Auto Scaling
                               group when
                               reducing
                               capacity. For
                               'Default', when
                               used to create a
                               new autoscaling
                               group, the
                               "Default"i value
                               is used. When
                               used to change an
                               existent
                               autoscaling
                               group, the
                               current
                               termination
                               policies are
                               maintained.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
      vpc_zone_identifier    # List of VPC subnets to use
      wait_for_instances     # Wait for the ASG instances to be in a ready
                               state before
                               exiting.  If
                               instances are
                               behind an ELB, it
                               will wait until
                               the ELB
                               determines all
                               instances have a
                               lifecycle_state
                               of  "InService"
                               and  a
                               health_status of
                               "Healthy".
      wait_timeout           # how long before wait instances to become viable
                               when replaced.
                               Used in
                               conjunction with
                               instance_ids
                               option.
- name: Gather facts about ec2 Auto Scaling Groups (ASGs) in AWS
  action: ec2_asg_facts
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      name                   # The prefix or name of the auto scaling group(s)
                               you are searching
                               for. Note: This
                               is a regular
                               expression match
                               with implicit '^'
                               (beginning of
                               string). Append
                               '$' for a
                               complete name
                               match.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      tags                   # A dictionary/hash of tags in the format {
                               tag1_name:
                               'tag1_value',
                               tag2_name:
                               'tag2_value' } to
                               match against the
                               auto scaling
                               group(s) you are
                               searching for.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: Manage an AWS customer gateway
  action: ec2_customer_gateway
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      bgp_asn                # Border Gateway Protocol (BGP) Autonomous System
                               Number (ASN),
                               required when
                               state=present.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      ip_address=            # Internet-routable IP address for customers
                               gateway, must be
                               a static address.
      name=                  # Name of the customer gateway.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state                  # Create or terminate the Customer Gateway.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: manages EC2 elastic IP (EIP) addresses.
  action: ec2_eip
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      device_id              # The id of the device for the EIP. Can be an EC2
                               Instance id or
                               Elastic Network
                               Interface (ENI)
                               id.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      in_vpc                 # allocate an EIP inside a VPC or not
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      public_ip              # The IP address of a previously allocated EIP. If
                               present and
                               device is
                               specified, the
                               EIP is associated
                               with the device.
                               If absent and
                               device is
                               specified, the
                               EIP is
                               disassociated
                               from the device.
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      release_on_disassociation   # whether or not to automatically release the EIP
                               when it is
                               disassociated
      reuse_existing_ip_allowed   # Reuse an EIP that is not associated to a device
                               (when available),
                               instead of
                               allocating a new
                               one.
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state                  # If present, allocate an EIP or associate an
                               existing EIP with
                               a device. If
                               absent,
                               disassociate the
                               EIP from the
                               device and
                               optionally
                               release it.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: De-registers or registers instances from EC2 ELBs
  action: ec2_elb
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      ec2_elbs               # List of ELB names, required for registration.
                               The ec2_elbs fact
                               should be used if
                               there was a
                               previous de-
                               register.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      enable_availability_zone   # Whether to enable the availability zone of the
                               instance on the
                               target ELB if the
                               availability zone
                               has not already
                               been enabled. If
                               set to no, the
                               task will fail if
                               the availability
                               zone is not
                               enabled on the
                               ELB.
      instance_id=           # EC2 Instance ID
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state=                 # register or deregister the instance
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
      wait                   # Wait for instance registration or deregistration
                               to complete
                               successfully
                               before returning.
      wait_timeout           # Number of seconds to wait for an instance to
                               change state. If
                               0 then this
                               module may return
                               an error if a
                               transient error
                               occurs. If non-
                               zero then any
                               transient errors
                               are ignored until
                               the timeout is
                               reached. Ignored
                               when wait=no.
- name: Gather facts about EC2 Elastic Load Balancers in AWS
  action: ec2_elb_facts
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      names                  # List of ELB names to gather facts about. Pass
                               this option to
                               gather facts
                               about a set of
                               ELBs, otherwise,
                               all ELBs are
                               returned.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: Creates or destroys Amazon ELB.
  action: ec2_elb_lb
      access_logs            # An associative array of access logs
                               configuration
                               settings (see
                               example)
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      connection_draining_timeout   # Wait a specified timeout allowing connections to
                               drain before
                               terminating an
                               instance
      cross_az_load_balancing   # Distribute load across all configured
                               Availability
                               Zones
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      health_check           # An associative array of health check
                               configuration
                               settings (see
                               example)
      idle_timeout           # ELB connections from clients and to servers are
                               timed out after
                               this amount of
                               time
      instance_ids           # List of instance ids to attach to this ELB
      listeners              # List of ports/protocols for this ELB to listen
                               on (see example)
      name=                  # The name of the ELB
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      purge_instance_ids     # Purge existing instance ids on ELB that are not
                               found in
                               instance_ids
      purge_listeners        # Purge existing listeners on ELB that are not
                               found in
                               listeners
      purge_subnets          # Purge existing subnet on ELB that are not found
                               in subnets
      purge_zones            # Purge existing availability zones on ELB that
                               are not found in
                               zones
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      scheme                 # The scheme to use when creating the ELB. For a
                               private VPC-
                               visible ELB use
                               'internal'.
      security_group_ids     # A list of security groups to apply to the elb
      security_group_names   # A list of security group names to apply to the
                               elb
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state=                 # Create or destroy the ELB
      stickiness             # An associative array of stickiness policy
                               settings. Policy
                               will be applied
                               to all listeners
                               ( see example )
      subnets                # A list of VPC subnets to use when creating ELB.
                               Zones should be
                               empty if using
                               this.
      tags                   # An associative array of tags. To delete all
                               tags, supply an
                               empty dict.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
      wait                   # When specified, Ansible will check the status of
                               the load balancer
                               to ensure it has
                               been successfully
                               removed from AWS.
      wait_timeout           # Used in conjunction with wait. Number of seconds
                               to wait for the
                               elb to be
                               terminated. A
                               maximum of 600
                               seconds (10
                               minutes) is
                               allowed.
      zones                  # List of availability zones to enable on this ELB
- name: Create and optionally attach an Elastic Network Interface (ENI) to an instance
  action: ec2_eni
      attached               # Specifies if network interface should be
                               attached or
                               detached from
                               instance. If
                               ommited,
                               attachment status
                               won't change
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      delete_on_termination   # Delete the interface when the instance it is
                               attached to is
                               terminated. You
                               can only specify
                               this flag when
                               the interface is
                               being modified,
                               not on creation.
      description            # Optional description of the ENI.
      device_index           # The index of the device for the network
                               interface
                               attachment on the
                               instance.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      eni_id                 # The ID of the ENI
      force_detach           # Force detachment of the interface. This applies
                               either when
                               explicitly
                               detaching the
                               interface by
                               setting
                               instance_id to
                               None or when
                               deleting an
                               interface with
                               state=absent.
      instance_id            # Instance ID that you wish to attach ENI to.
                               Since version
                               2.2, use the
                               'attached'
                               parameter to
                               attach or
                               detach an ENI.
                               Prior to 2.2, to
                               detach an ENI
                               from an instance,
                               use 'None'.
      private_ip_address     # Private IP address.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      secondary_private_ip_address_count   # The number of secondary IP addresses to assign
                               to the network
                               interface. This
                               option is
                               mutually
                               exclusive of seco
                               ndary_private_ip_
                               addresses
      secondary_private_ip_addresses   # A list of IP addresses to assign as secondary IP
                               addresses to the
                               network
                               interface. This
                               option is
                               mutually
                               exclusive of seco
                               ndary_private_ip_
                               address_count
      security_groups        # List of security groups associated with the
                               interface. Only
                               used when
                               state=present.
                               Since version
                               2.2, you
                               can specify
                               security groups
                               by ID or by name
                               or a combination
                               of both. Prior to
                               2.2, you can
                               specify only by
                               ID.
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      source_dest_check      # By default, interfaces perform
                               source/destinatio
                               n checks. NAT
                               instances however
                               need this check
                               to be disabled.
                               You can only
                               specify this flag
                               when the
                               interface is
                               being modified,
                               not on creation.
      state                  # Create or delete ENI
      subnet_id=             # ID of subnet in which to create the ENI. Only
                               required when
                               state=present.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: Gather facts about ec2 ENI interfaces in AWS
  action: ec2_eni_facts
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      filters                # A dict of filters to apply. Each dict item
                               consists of a
                               filter key and a
                               filter value. See
                               http://docs.aws.a
                               mazon.com/AWSEC2/
                               latest/APIReferen
                               ce/API_DescribeNe
                               tworkInterfaces.h
                               tml for possible
                               filters.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: Gathers facts about remote hosts within ec2 (aws)
  action: ec2_facts
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
- name: maintain an ec2 VPC security group.
  action: ec2_group
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      description=           # Description of the security group.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      name=                  # Name of the security group.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      purge_rules            # Purge existing rules on security group that are
                               not found in
                               rules
      purge_rules_egress     # Purge existing rules_egress on security group
                               that are not
                               found in
                               rules_egress
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      rules                  # List of firewall inbound rules to enforce in
                               this group (see
                               example). If none
                               are supplied, a
                               default all-out
                               rule is assumed.
                               If an empty list
                               is supplied, no
                               inbound rules
                               will be enabled.
      rules_egress           # List of firewall outbound rules to enforce in
                               this group (see
                               example). If none
                               are supplied, a
                               default all-out
                               rule is assumed.
                               If an empty list
                               is supplied, no
                               outbound rules
                               will be enabled.
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state                  # Create or delete a security group
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
      vpc_id                 # ID of the VPC to create the group in.
- name: maintain an ec2 key pair.
  action: ec2_key
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      key_material           # Public key material.
      name=                  # Name of the key pair.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state                  # create or delete keypair
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
      wait                   # Wait for the specified action to complete before
                               returning.
      wait_timeout           # How long before wait gives up, in seconds
- name: Create or delete AWS Autoscaling Launch Configurations
  action: ec2_lc
      assign_public_ip       # Used for Auto Scaling groups that launch
                               instances into an
                               Amazon Virtual
                               Private Cloud.
                               Specifies whether
                               to assign a
                               public IP address
                               to each instance
                               launched in a
                               Amazon VPC.
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      classic_link_vpc_id    # Id of ClassicLink enabled VPC
      classic_link_vpc_security_groups   # A list of security group id's with which to
                               associate the
                               ClassicLink VPC
                               instances.
      ebs_optimized          # Specifies whether the instance is optimized for
                               EBS I/O (true) or
                               not (false).
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      image_id               # The AMI unique identifier to be used for the
                               group
      instance_monitoring    # whether instances in group are launched with
                               detailed
                               monitoring.
      instance_profile_name   # The name or the Amazon Resource Name (ARN) of
                               the instance
                               profile
                               associated with
                               the IAM role for
                               the instances.
      instance_type=         # instance type to use for the instance
      kernel_id              # Kernel id for the EC2 instance
      key_name               # The SSH key name to be used for access to
                               managed instances
      name=                  # Unique name for configuration
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      ramdisk_id             # A RAM disk id for the instances.
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_groups        # A list of security groups to apply to the
                               instances. For
                               VPC instances,
                               specify security
                               group IDs. For
                               EC2-Classic,
                               specify either
                               security group
                               names or IDs.
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      spot_price             # The spot price you are bidding. Only applies for
                               an autoscaling
                               group with spot
                               instances.
      state=                 # register or deregister the instance
      user_data              # opaque blob of data which is made available to
                               the ec2 instance
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
      volumes                # a list of volume dicts, each containing device
                               name and
                               optionally
                               ephemeral id or
                               snapshot id. Size
                               and type (and
                               number of iops
                               for io device
                               type) must be
                               specified for a
                               new volume or a
                               root volume, and
                               may be passed for
                               a snapshot
                               volume. For any
                               volume, a volume
                               size less than 1
                               will be
                               interpreted as a
                               request not to
                               create the
                               volume.
- name: Find AWS Autoscaling Launch Configurations
  action: ec2_lc_find
      limit                  # How many results to show. Corresponds to Python
                               slice notation
                               like
                               list[:limit].
      name_regex=            # A Launch Configuration to match It'll be
                               compiled as regex
      region=                # The AWS region to use.
      sort_order             # Order in which to sort results.
- name: Create/update or delete AWS Cloudwatch 'metric alarms'
  action: ec2_metric_alarm
      alarm_actions          # A list of the names action(s) taken when the
                               alarm is in the
                               'alarm' status
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      comparison             # Determines how the threshold value is compared
      description            # A longer description of the alarm
      dimensions             # Describes to what the alarm is applied
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      evaluation_periods     # The number of times in which the metric is
                               evaluated before
                               final calculation
      insufficient_data_actions   # A list of the names of action(s) to take when
                               the alarm is in
                               the 'insufficient
                               _data' status
      metric                 # Name of the monitored metric (e.g.
                               CPUUtilization)
                               Metric must
                               already exist
      name=                  # Unique name for the alarm
      namespace              # Name of the appropriate namespace ('AWS/EC2',
                               'System/Linux',
                               etc.), which
                               determines the
                               category it will
                               appear under in
                               cloudwatch
      ok_actions             # A list of the names of action(s) to take when
                               the alarm is in
                               the 'ok' status
      period                 # The time (in seconds) between metric evaluations
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state=                 # register or deregister the alarm
      statistic              # Operation applied to the metric Works in
                               conjunction with
                               period and evalua
                               tion_periods to
                               determine the
                               comparison value
      threshold              # Sets the min/max bound for triggering the alarm
      unit                   # The threshold's unit of measurement
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: Gather facts about ec2 instances in AWS
  action: ec2_remote_facts
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      filters                # A dict of filters to apply. Each dict item
                               consists of a
                               filter key and a
                               filter value. See
                               http://docs.aws.a
                               mazon.com/AWSEC2/
                               latest/APIReferen
                               ce/API_DescribeIn
                               stances.html for
                               possible filters.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: Create or delete AWS scaling policies for Autoscaling groups
  action: ec2_scaling_policy
      adjustment_type        # The type of change in capacity of the
                               autoscaling group
      asg_name=              # Name of the associated autoscaling group
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      cooldown               # The minimum period of time between which
                               autoscaling
                               actions can take
                               place
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      min_adjustment_step    # Minimum amount of adjustment when policy is
                               triggered
      name=                  # Unique name for the scaling policy
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      scaling_adjustment     # The amount by which the autoscaling group is
                               adjusted by the
                               policy
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state=                 # register or deregister the policy
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: creates a snapshot from an existing volume
  action: ec2_snapshot
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      description            # description to be applied to the snapshot
      device_name            # device name of a mounted volume to be
                               snapshotted
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      instance_id            # instance that has the required volume to
                               snapshot mounted
      last_snapshot_min_age   # If the volume's most recent snapshot has started
                               less than `last_s
                               napshot_min_age'
                               minutes ago, a
                               new snapshot will
                               not be created.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      snapshot_id            # snapshot id to remove
      snapshot_tags          # a hash/dictionary of tags to add to the snapshot
      state                  # whether to add or create a snapshot
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
      volume_id              # volume from which to take the snapshot
      wait                   # wait for the snapshot to be ready
      wait_timeout           # how long before wait gives up, in seconds
                               specify 0 to wait
                               forever
- name: Gather facts about ec2 volume snapshots in AWS
  action: ec2_snapshot_facts
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      filters                # A dict of filters to apply. Each dict item
                               consists of a
                               filter key and a
                               filter value. See
                               http://docs.aws.a
                               mazon.com/AWSEC2/
                               latest/APIReferen
                               ce/API_DescribeSn
                               apshots.html for
                               possible filters.
                               Filter
                               names and values
                               are case
                               sensitive.
      owner_ids              # If you specify one or more snapshot owners, only
                               snapshots from
                               the specified
                               owners and for
                               which you have
                               access are
                               returned.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      restorable_by_user_ids   # If you specify a list of restorable users, only
                               snapshots with
                               create snapshot
                               permissions for
                               those users are
                               returned.
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      snapshot_ids           # If you specify one or more snapshot IDs, only
                               snapshots that
                               have the
                               specified IDs are
                               returned.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: create and remove tag(s) to ec2 resources.
  action: ec2_tag
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      resource=              # The EC2 resource id.
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state                  # Whether the tags should be present or absent on
                               the resource. Use
                               list to
                               interrogate the
                               tags of an
                               instance.
      tags=                  # a hash/dictionary of tags to add to the
                               resource;
                               '{"key":"value"}'
                               and '{"key":"valu
                               e","key":"value"}
                               '
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: create and attach a volume, return volume id and device map
  action: ec2_vol
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      delete_on_termination   # When set to "yes", the volume will be deleted
                               upon instance
                               termination.
      device_name            # device id to override device mapping. Assumes
                               /dev/sdf for
                               Linux/UNIX and
                               /dev/xvdf for
                               Windows.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      encrypted              # Enable encryption at rest for this volume.
      id                     # volume id if you wish to attach an existing
                               volume (requires
                               instance) or
                               remove an
                               existing volume
      instance               # instance ID if you wish to attach the volume.
                               Since 1.9 you can
                               set to None to
                               detach.
      iops                   # the provisioned IOPs you want to associate with
                               this volume
                               (integer).
      name                   # volume Name tag if you wish to attach an
                               existing volume
                               (requires
                               instance)
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      snapshot               # snapshot ID on which to base the volume
      state                  # whether to ensure the volume is present or
                               absent, or to
                               list existing
                               volumes (The
                               `list' option was
                               added in version
                               1.8).
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
      volume_size            # size of volume (in GB) to create.
      volume_type            # Type of EBS volume; standard (magnetic), gp2
                               (SSD), io1
                               (Provisioned
                               IOPS). "Standard"
                               is the old EBS
                               default and
                               continues to
                               remain the
                               Ansible default
                               for backwards
                               compatibility.
      zone                   # zone in which to create the volume, if unset
                               uses the zone the
                               instance is in
                               (if set)
- name: Gather facts about ec2 volumes in AWS
  action: ec2_vol_facts
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      filters                # A dict of filters to apply. Each dict item
                               consists of a
                               filter key and a
                               filter value. See
                               http://docs.aws.a
                               mazon.com/AWSEC2/
                               latest/APIReferen
                               ce/API_DescribeVo
                               lumes.html for
                               possible filters.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: configure AWS virtual private clouds
  action: ec2_vpc
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      cidr_block             # The cidr block representing the VPC, e.g.
                               10.0.0.0/16,
                               required when
                               `state' is
                               'present'.
      dns_hostnames          # toggles the "Enable DNS hostname support for
                               instances" flag
      dns_support            # toggles the "Enable DNS resolution" flag
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      instance_tenancy       # The supported tenancy options for instances
                               launched into the
                               VPC.
      internet_gateway       # Toggle whether there should be an Internet
                               gateway attached
                               to the VPC
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      resource_tags=         # A dictionary array of resource tags of the form:
                               { tag1: value1,
                               tag2: value2 }.
                               Tags in this list
                               are used in
                               conjunction with
                               CIDR block to
                               uniquely identify
                               a VPC in lieu of
                               vpc_id.
                               Therefore, if
                               CIDR/Tag
                               combination does
                               not exist, a new
                               VPC will be
                               created.  VPC
                               tags not on this
                               list will be
                               ignored. Prior to
                               1.7, specifying a
                               resource tag was
                               optional.
      route_tables           # A dictionary array of route tables to add of the
                               form: { subnets:
                               [172.22.2.0/24,
                               172.22.3.0/24,],
                               routes: [{ dest:
                               0.0.0.0/0, gw:
                               igw},],
                               resource_tags:
                               ... }. Where the
                               subnets list is
                               those subnets the
                               route table
                               should be
                               associated with,
                               and the routes
                               list is a list of
                               routes to be in
                               the table.  The
                               special keyword
                               for the gw of igw
                               specifies that
                               you should the
                               route should go
                               through the
                               internet gateway
                               attached to the
                               VPC. gw also
                               accepts instance-
                               ids, interface-
                               ids, and vpc-
                               peering-
                               connection-ids in
                               addition igw.
                               resource_tags is
                               optional and uses
                               dictionary form:
                               { "Name":
                               "public", ... }.
                               This module is
                               currently unable
                               to affect the
                               "main" route
                               table due to some
                               limitations in
                               boto, so you must
                               explicitly define
                               the associated
                               subnets or they
                               will be attached
                               to the main table
                               implicitly. As of
                               1.8, if the
                               route_tables
                               parameter is not
                               specified, no
                               existing routes
                               will be modified.
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state=                 # Create or terminate the VPC
      subnets                # A dictionary array of subnets to add of the
                               form: { cidr:
                               ..., az: ... ,
                               resource_tags:
                               ... }. Where az
                               is the desired
                               availability zone
                               of the subnet,
                               but it is not
                               required. Tags
                               (i.e.:
                               resource_tags) is
                               also optional and
                               use dictionary
                               form: { "Environm
                               ent":"Dev",
                               "Tier":"Web",
                               ...}. All VPC
                               subnets not in
                               this list will be
                               removed as well.
                               As of 1.8, if the
                               subnets parameter
                               is not specified,
                               no existing
                               subnets will be
                               modified.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
      vpc_id                 # A VPC id to terminate when state=absent
      wait                   # wait for the VPC to be in state 'available'
                               before returning
      wait_timeout           # how long before wait gives up, in seconds
- name: Manages DHCP Options, and can ensure the DHCP options for the given VPC match what's requested
  action: ec2_vpc_dhcp_options
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      delete_old             # Whether to delete the old VPC DHCP option set
                               when associating
                               a new one. This
                               is primarily
                               useful for debugg
                               ing/development
                               purposes when you
                               want to quickly
                               roll back to the
                               old option set.
                               Note that this
                               setting will be
                               ignored, and the
                               old DHCP option
                               set will be
                               preserved, if it
                               is in use by any
                               other VPC.
                               (Otherwise, AWS
                               will return an
                               error.)
      dhcp_options_id        # The resource_id of an existing DHCP options set.
                               If this is
                               specified, then
                               it will override
                               other settings,
                               except tags
                               (which will be
                               updated to match)
      dns_servers            # A list of hosts to set the DNS servers for the
                               VPC to. (Should
                               be a list of IP
                               addresses rather
                               than host names.)
      domain_name            # The domain name to set in the DHCP option sets
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      inherit_existing       # For any DHCP options not specified in these
                               parameters,
                               whether to
                               inherit them from
                               the options set
                               already applied
                               to vpc_id, or to
                               reset them to be
                               empty.
      netbios_name_servers   # List of hosts to advertise as NetBIOS servers.
      netbios_node_type      # NetBIOS node type to advertise in the DHCP
                               options. The AWS
                               recommendation is
                               to use 2 (when
                               using netbios
                               name services) ht
                               tp://docs.aws.ama
                               zon.com/AmazonVPC
                               /latest/UserGuide
                               /VPC_DHCP_Options
                               .html
      ntp_servers            # List of hosts to advertise as NTP servers for
                               the VPC.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state                  # create/assign or remove the DHCP options. If
                               state is set to
                               absent, then a
                               DHCP options set
                               matched either by
                               id, or tags and
                               options will be
                               removed if
                               possible.
      tags                   # Tags to be applied to a VPC options set if a new
                               one is created,
                               or if the
                               resource_id is
                               provided.
                               (options must
                               match)
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
      vpc_id                 # VPC ID to associate with the requested DHCP
                               option set. If no
                               vpc id is
                               provided, and no
                               matching option
                               set is found then
                               a new DHCP option
                               set is created.
- name: Gather facts about dhcp options sets in AWS
  action: ec2_vpc_dhcp_options_facts
      DhcpOptionsIds         # Get details of specific DHCP Option ID Provide
                               this value as a
                               list
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      filters                # A dict of filters to apply. Each dict item
                               consists of a
                               filter key and a
                               filter value. See
                               http://docs.aws.a
                               mazon.com/AWSEC2/
                               latest/APIReferen
                               ce/API_DescribeRo
                               uteTables.html
                               for possible
                               filters.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: Manage an AWS VPC Internet gateway
  action: ec2_vpc_igw
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state                  # Create or terminate the IGW
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
      vpc_id=                # The VPC ID for the VPC in which to manage the
                               Internet Gateway.
- name: create and delete Network ACLs.
  action: ec2_vpc_nacl
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      egress                 # A list of rules for outgoing traffic. Each rule
                               must be specified
                               as a list.
      ingress                # List of rules for incoming traffic. Each rule
                               must be specified
                               as a list.
      name=                  # Tagged name identifying a network ACL.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state                  # Creates or modifies an existing NACL Deletes a
                               NACL and
                               reassociates
                               subnets to the
                               default NACL
      subnets                # The list of subnets that should be associated
                               with the network
                               ACL. Must be
                               specified as a
                               list Each subnet
                               can be specified
                               as subnet ID, or
                               its tagged name.
      tags                   # Dictionary of tags to look for and apply when
                               creating a
                               network ACL.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
      vpc_id=                # VPC id of the requesting VPC.
- name: Gather facts about Network ACLs in an AWS VPC
  action: ec2_vpc_nacl_facts
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      filters                # A dict of filters to apply. Each dict item
                               consists of a
                               filter key and a
                               filter value. See
                               http://docs.aws.a
                               mazon.com/AWSEC2/
                               latest/APIReferen
                               ce/API_DescribeNe
                               tworkAcls.html
                               for possible
                               filters. Filter
                               names and values
                               are case
                               sensitive.
      nacl_ids               # A list of Network ACL IDs to retrieve facts
                               about.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: Manage AWS VPC NAT Gateways.
  action: ec2_vpc_nat_gateway
      allocation_id          # The id of the elastic IP allocation. If this is
                               not passed and
                               the eip_address
                               is not passed. An
                               EIP is generated
                               for this NAT
                               Gateway.
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      client_token           # Optional unique token to be used during create
                               to ensure
                               idempotency. When
                               specifying this
                               option, ensure
                               you specify the
                               eip_address
                               parameter as well
                               otherwise any
                               subsequent runs
                               will fail.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      eip_address            # The elastic IP address of the EIP you want
                               attached to this
                               NAT Gateway. If
                               this is not
                               passed and the
                               allocation_id is
                               not passed, an
                               EIP is generated
                               for this NAT
                               Gateway.
      if_exist_do_not_create   # if a NAT Gateway exists already in the
                               subnet_id, then
                               do not create a
                               new one.
      nat_gateway_id         # The id AWS dynamically allocates to the NAT
                               Gateway on
                               creation. This is
                               required when the
                               absent option is
                               present.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      release_eip            # Deallocate the EIP from the VPC. Option is only
                               valid with the
                               absent state. You
                               should use this
                               with the wait
                               option. Since you
                               can not release
                               an address while
                               a delete
                               operation is
                               happening.
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state                  # Ensure NAT Gateway is present or absent.
      subnet_id              # The id of the subnet to create the NAT Gateway
                               in. This is
                               required with the
                               present option.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
      wait                   # Wait for operation to complete before returning.
      wait_timeout           # How many seconds to wait for an operation to
                               complete before
                               timing out.
- name: Configure AWS virtual private clouds
  action: ec2_vpc_net
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      cidr_block=            # The CIDR of the VPC
      dhcp_opts_id           # the id of the DHCP options to use for this vpc
      dns_hostnames          # Whether to enable AWS hostname support.
      dns_support            # Whether to enable AWS DNS support.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      multi_ok               # By default the module will not create another
                               VPC if there is
                               another VPC with
                               the same name and
                               CIDR block.
                               Specify this as
                               true if you want
                               duplicate VPCs
                               created.
      name=                  # The name to give your VPC. This is used in
                               combination with
                               the cidr_block
                               parameter to
                               determine if a
                               VPC already
                               exists.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state                  # The state of the VPC. Either absent or present.
      tags                   # The tags you want attached to the VPC. This is
                               independent of
                               the name value,
                               note if you pass
                               a 'Name' key it
                               would override
                               the Name of the
                               VPC if it's
                               different.
      tenancy                # Whether to be default or dedicated tenancy. This
                               cannot be changed
                               after the VPC has
                               been created.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: Gather facts about ec2 VPCs in AWS
  action: ec2_vpc_net_facts
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      filters                # A dict of filters to apply. Each dict item
                               consists of a
                               filter key and a
                               filter value. See
                               http://docs.aws.a
                               mazon.com/AWSEC2/
                               latest/APIReferen
                               ce/API_DescribeVp
                               cs.html for
                               possible filters.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: create, delete, accept, and reject VPC peering connections between two VPCs.
  action: ec2_vpc_peer
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      peer_owner_id          # The AWS account number for cross account
                               peering.
      peer_vpc_id            # VPC id of the accepting VPC.
      peering_id             # Peering connection id.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state                  # Create, delete, accept, reject a peering
                               connection.
      tags                   # Dictionary of tags to look for and apply when
                               creating a
                               Peering
                               Connection.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
      vpc_id                 # VPC id of the requesting VPC.
- name: Manage route tables for AWS virtual private clouds
  action: ec2_vpc_route_table
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      lookup                 # Look up route table by either tags or by route
                               table ID. Non-
                               unique tag lookup
                               will fail. If no
                               tags are specifed
                               then no lookup
                               for an existing
                               route table is
                               performed and a
                               new route table
                               will be created.
                               To change tags of
                               a route table,
                               you must look up
                               by id.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      propagating_vgw_ids    # Enable route propagation from virtual gateways
                               specified by ID.
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      route_table_id         # The ID of the route table to update or delete.
      routes                 # List of routes in the route table. Routes are
                               specified as
                               dicts containing
                               the keys 'dest'
                               and one of
                               'gateway_id',
                               'instance_id',
                               'interface_id',
                               or 'vpc_peering_c
                               onnection_id'. If
                               'gateway_id' is
                               specified, you
                               can refer to the
                               VPC's IGW by
                               using the value
                               'igw'. Routes are
                               required for
                               present states.
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state                  # Create or destroy the VPC route table
      subnets=               # An array of subnets to add to this route table.
                               Subnets may be
                               specified by
                               either subnet ID,
                               Name tag, or by a
                               CIDR such as
                               '10.0.0.0/24'.
      tags                   # A dictionary of resource tags of the form: {
                               tag1: value1,
                               tag2: value2 }.
                               Tags are used to
                               uniquely identify
                               route tables
                               within a VPC when
                               the
                               route_table_id is
                               not supplied.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
      vpc_id=                # VPC ID of the VPC in which to create the route
                               table.
- name: Gather facts about ec2 VPC route tables in AWS
  action: ec2_vpc_route_table_facts
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      filters                # A dict of filters to apply. Each dict item
                               consists of a
                               filter key and a
                               filter value. See
                               http://docs.aws.a
                               mazon.com/AWSEC2/
                               latest/APIReferen
                               ce/API_DescribeRo
                               uteTables.html
                               for possible
                               filters.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: Manage subnets in AWS virtual private clouds
  action: ec2_vpc_subnet
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      az                     # The availability zone for the subnet. Only
                               required when
                               state=present.
      cidr                   # The CIDR block for the subnet. E.g.
                               192.0.2.0/24.
                               Only required
                               when
                               state=present.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state                  # Create or remove the subnet
      tags                   # A dict of tags to apply to the subnet. Any tags
                               currently applied
                               to the subnet and
                               not present here
                               will be removed.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
      vpc_id                 # VPC ID of the VPC in which to create the subnet.
- name: Gather facts about ec2 VPC subnets in AWS
  action: ec2_vpc_subnet_facts
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      filters                # A dict of filters to apply. Each dict item
                               consists of a
                               filter key and a
                               filter value. See
                               http://docs.aws.a
                               mazon.com/AWSEC2/
                               latest/APIReferen
                               ce/API_DescribeSu
                               bnets.html for
                               possible filters.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: Create and delete AWS VPN Virtual Gateways.
  action: ec2_vpc_vgw
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      name                   # name of the vgw to be created or deleted
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state                  # present to ensure resource is created. absent to
                               remove resource
      tags                   # dictionary of resource tags
      type                   # type of the virtual gateway to be created
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
      vpc_id                 # the vpc-id of a vpc to attach or detach
      vpn_gateway_id         # vpn gateway id of an existing virtual gateway
      wait_timeout           # number of seconds to wait for status during vpc
                               attach and detach
- name: gets the default administrator password for ec2 windows instances
  action: ec2_win_password
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      instance_id=           # The instance id to get the password data from.
      key_file=              # Path to the file containing the key pair used on
                               the instance.
      key_passphrase         # The passphrase for the instance key pair. The
                               key must use DES
                               or 3DES
                               encryption for
                               this module to
                               decrypt it. You
                               can use openssl
                               to convert your
                               password
                               protected keys if
                               they do not use
                               DES or 3DES. ex)
                               openssl rsa -in
                               current_key -out
                               new_key -des3.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
      wait                   # Whether or not to wait for the password to be
                               available before
                               returning.
      wait_timeout           # Number of seconds to wait before giving up.
- name: create or terminate ecs clusters
  action: ecs_cluster
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      delay                  # Number of seconds to wait
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      name=                  # The cluster name
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      repeat                 # The number of times to wait for the cluster to
                               have an instance
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state=                 # The desired state of the cluster
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: create, terminate, start or stop a service in ecs
  action: ecs_service
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      client_token           # Unique, case-sensitive identifier you provide to
                               ensure the
                               idempotency of
                               the request. Up
                               to 32 ASCII
                               characters are
                               allowed.
      cluster                # The name of the cluster in which the service
                               exists
      delay                  # The time to wait before checking that the
                               service is
                               available
      desired_count          # The count of how many instances of the service
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      load_balancers         # The list of ELBs defined for this service
      name=                  # The name of the service
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      repeat                 # The number of times to check that the service is
                               available
      role                   # The name or full Amazon Resource Name (ARN) of
                               the IAM role that
                               allows your
                               Amazon ECS
                               container agent
                               to make calls to
                               your load
                               balancer on your
                               behalf. This
                               parameter is only
                               required if you
                               are using a load
                               balancer with
                               your service.
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state=                 # The desired state of the service
      task_definition        # The task definition the service will run
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: list or describe services in ecs
  action: ecs_service_facts
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      cluster                # The cluster ARNS in which to list the services.
      details                # Set this to true if you want detailed
                               information about
                               the services.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      service                # The service to get details for (required if
                               details is true)
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: run, start or stop a task in ecs
  action: ecs_task
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      cluster                # The name of the cluster to run the task on
      container_instances    # The list of container instances on which to
                               deploy the task
      count                  # How many new instances to start
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      operation=             # Which task operation to execute
      overrides              # A dictionary of values to pass to the new
                               instances
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      started_by             # A value showing who or what started the task
                               (for
                               informational
                               purposes)
      task                   # The task to stop
      task_definition        # The task definition to start or run
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: register a task definition in ecs
  action: ecs_taskdefinition
      arn                    # The arn of the task description to delete
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      containers             # A list of containers definitions
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      family                 # A Name that would be given to the task
                               definition
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      revision               # A revision number for the task definition
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state=                 # State whether the task definition should exist
                               or be deleted
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
      volumes                # A list of names of volumes to be attached
- name: create and maintain EFS file systems
  action: efs
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      id                     # ID of Amazon EFS. Either name or ID required for
                               delete.
      name                   # Creation Token of Amazon EFS file system.
                               Required for
                               create. Either
                               name or ID
                               required for
                               delete.
      performance_mode       # File system's performance mode to use. Only
                               takes effect
                               during creation.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state                  # Allows to create, search and destroy Amazon EFS
                               file system
      tags                   # List of tags of Amazon EFS. Should be defined as
                               dictionary In
                               case of 'present'
                               state with list
                               of tags and
                               existing EFS
                               (matched by
                               'name'), tags of
                               EFS will be
                               replaced with
                               provided data.
      targets                # List of mounted targets. It should be a list of
                               dictionaries,
                               every dictionary
                               should include
                               next attributes:
                               - subnet_id -
                               Mandatory. The ID
                               of the subnet to
                               add the mount
                               target in.     -
                               ip_address -
                               Optional. A valid
                               IPv4 address
                               within the
                               address range of
                               the specified
                               subnet.     -
                               security_groups -
                               Optional. List of
                               security group
                               IDs, of the form
                               "sg-xxxxxxxx".
                               These must be for
                               the same VPC as
                               subnet specified
                               This data may be
                               modified for
                               existing EFS
                               using state
                               'present' and new
                               list of mount
                               targets.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
      wait                   # In case of 'present' state should wait for EFS
                               'available' life
                               cycle state (of
                               course, if
                               current state not
                               'deleting' or
                               'deleted') In
                               case of 'absent'
                               state should wait
                               for EFS 'deleted'
                               life cycle state
      wait_timeout           # How long the module should wait (in seconds) for
                               desired state
                               before returning.
                               Zero means wait
                               as long as
                               necessary.
- name: Get information about Amazon EFS file systems
  action: efs_facts
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      id                     # ID of Amazon EFS.
      name                   # Creation Token of Amazon EFS file system.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      tags                   # List of tags of Amazon EFS. Should be defined as
                               dictionary
      targets                # List of mounted targets. It should be a list of
                               dictionaries,
                               every dictionary
                               should include
                               next attributes:
                               - SubnetId -
                               Mandatory. The ID
                               of the subnet to
                               add the mount
                               target in.     -
                               IpAddress -
                               Optional. A valid
                               IPv4 address
                               within the
                               address range of
                               the specified
                               subnet.     -
                               SecurityGroups -
                               Optional. List of
                               security group
                               IDs, of the form
                               "sg-xxxxxxxx".
                               These must be for
                               the same VPC as
                               subnet specified.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: Manages users for ejabberd servers
  action: ejabberd_user
      host=                  # the ejabberd host associated with this username
      logging                # enables or disables the local syslog facility
                               for this module
      password               # the password to assign to the username
      state                  # describe the desired state of the user to be
                               managed
      username=              # the name of the user to manage
- name: Manage cache clusters in Amazon Elasticache.
  action: elasticache
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      cache_engine_version   # The version number of the cache engine
      cache_parameter_group   # The name of the cache parameter group to
                               associate with
                               this cache
                               cluster. If this
                               argument is
                               omitted, the
                               default cache
                               parameter group
                               for the specified
                               engine will be
                               used.
      cache_port             # The port number on which each of the cache nodes
                               will accept
                               connections
      cache_security_groups   # A list of cache security group names to
                               associate with
                               this cache
                               cluster. Must be
                               an empty list if
                               inside a vpc
      cache_subnet_group     # The subnet group name to associate with. Only
                               use if inside a
                               vpc. Required if
                               inside a vpc
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      engine                 # Name of the cache engine to be used.
      hard_modify            # Whether to destroy and recreate an existing
                               cache cluster if
                               necessary in
                               order to modify
                               its state
      name=                  # The cache cluster identifier
      node_type              # The compute and memory capacity of the nodes in
                               the cache cluster
      num_nodes              # The initial number of cache nodes that the cache
                               cluster will
                               have. Required
                               when
                               state=present.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_group_ids     # A list of vpc security group names to associate
                               with this cache
                               cluster. Only use
                               if inside a vpc
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state=                 # `absent' or `present' are idempotent actions
                               that will create
                               or destroy a
                               cache cluster as
                               needed.
                               `rebooted' will
                               reboot the
                               cluster,
                               resulting in a
                               momentary outage.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
      wait                   # Wait for cache cluster result before returning
      zone                   # The EC2 Availability Zone in which the cache
                               cluster will be
                               created
- name: manage Elasticache subnet groups
  action: elasticache_subnet_group
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      description            # Elasticache subnet group description. Only set
                               when a new group
                               is added.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      name=                  # Database subnet group identifier.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state=                 # Specifies whether the subnet should be present
                               or absent.
      subnets                # List of subnet IDs that make up the Elasticache
                               subnet group.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: Manage Elasticsearch plugins
  action: elasticsearch_plugin
      name=                  # Name of the plugin to install. In ES 2.x, the
                               name can be an
                               url or file
                               location
      plugin_bin             # Location of the plugin binary
      plugin_dir             # Your configured plugin directory specified in
                               Elasticsearch
      proxy_host             # Proxy host to use during plugin installation
      proxy_port             # Proxy port to use during plugin installation
      state                  # Desired state of a plugin.
      timeout                # Timeout setting: 30s, 1m, 1h...
      url                    # Set exact URL to download the plugin from (Only
                               works for ES 1.x)
      version                # Version of the plugin to be installed. If plugin
                               exists with
                               previous version,
                               it will NOT be
                               updated
- name: Run arbitrary commands on an Arista EOS device
  action: eos_command
      auth_pass              # Specifies the password to use if required to
                               enter privileged
                               mode on the
                               remote device.
                               If `authorize' is
                               false, then this
                               argument does
                               nothing. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_AUTH_PASS'
                               will be used
                               instead.
      authorize              # Instructs the module to enter privileged mode on
                               the remote device
                               before sending
                               any commands.  If
                               not specified,
                               the device will
                               attempt to
                               execute all
                               commands in non-
                               privileged mode.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_AUTHORIZE'
                               will be used
                               instead.
      commands=              # The commands to send to the remote EOS device
                               over the
                               configured
                               provider.  The
                               resulting output
                               from the command
                               is returned.  If
                               the `wait_for'
                               argument is
                               provided, the
                               module is not
                               returned until
                               the condition is
                               satisfied or the
                               number of
                               `retries' has
                               been exceeded.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      interval               # Configures the interval in seconds to wait
                               between retries
                               of the command.
                               If the command
                               does not pass the
                               specified
                               conditional, the
                               interval
                               indicates how to
                               long to wait
                               before trying the
                               command again.
      match                  # The `match' argument is used in conjunction with
                               the `wait_for'
                               argument to
                               specify the match
                               policy.  Valid
                               values are `all'
                               or `any'.  If the
                               value is set to
                               `all' then all
                               conditionals in
                               the `wait_for'
                               must be
                               satisfied.  If
                               the value is set
                               to `any' then
                               only one of the
                               values must be
                               satisfied.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `eapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `eapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `eos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      retries                # Specifies the number of retries a command should
                               be tried before
                               it is considered
                               failed.  The
                               command is run on
                               the target device
                               every retry and
                               evaluated against
                               the `wait_for'
                               conditionals.
      ssh_keyfile            # Specifies the SSH keyfile to use to authenticate
                               the connection to
                               the remote
                               device.  This
                               argument is only
                               used for `cli'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the
                               `transport=eapi'.
                               If the transport
                               argument is not
                               eapi, this value
                               is ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the eAPI
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
      wait_for               # Specifies what to evaluate from the output of
                               the command and
                               what conditionals
                               to apply.  This
                               argument will
                               cause the task to
                               wait for a
                               particular
                               conditional to be
                               true before
                               moving forward.
                               If the
                               conditional is
                               not true by the
                               configured
                               retries, the task
                               fails.  See
                               examples.
- name: Manage Arista EOS configuration sections
  action: eos_config
      after                  # The ordered set of commands to append to the end
                               of the command
                               stack if a change
                               needs to be made.
                               Just like with
                               `before' this
                               allows the
                               playbook designer
                               to append a set
                               of commands to be
                               executed after
                               the command set.
      auth_pass              # Specifies the password to use if required to
                               enter privileged
                               mode on the
                               remote device.
                               If `authorize' is
                               false, then this
                               argument does
                               nothing. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_AUTH_PASS'
                               will be used
                               instead.
      authorize              # Instructs the module to enter privileged mode on
                               the remote device
                               before sending
                               any commands.  If
                               not specified,
                               the device will
                               attempt to
                               execute all
                               commands in non-
                               privileged mode.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_AUTHORIZE'
                               will be used
                               instead.
      backup                 # This argument will cause the module to create a
                               full backup of
                               the current
                               `running-config'
                               from the remote
                               device before any
                               changes are made.
                               The backup file
                               is written to the
                               `backup' folder
                               in the playbook
                               root directory.
                               If the directory
                               does not exist,
                               it is created.
      before                 # The ordered set of commands to push on to the
                               command stack if
                               a change needs to
                               be made.  This
                               allows the
                               playbook designer
                               the opportunity
                               to perform
                               configuration
                               commands prior to
                               pushing any
                               changes without
                               affecting how the
                               set of commands
                               are matched
                               against the
                               system.
      config                 # The module, by default, will connect to the
                               remote device and
                               retrieve the
                               current running-
                               config to use as
                               a base for
                               comparing against
                               the contents of
                               source.  There
                               are times when it
                               is not desirable
                               to have the task
                               get the current
                               running-config
                               for every task in
                               a playbook.  The
                               `config' argument
                               allows the
                               implementer to
                               pass in the
                               configuration to
                               use as the base
                               config for
                               comparison.
      defaults               # The `defaults' argument will influence how the
                               running-config is
                               collected from
                               the device.  When
                               the value is set
                               to true, the
                               command used to
                               collect the
                               running-config is
                               append with the
                               all keyword.
                               When the value is
                               set to false, the
                               command is issued
                               without the all
                               keyword
      force                  # The force argument instructs the module to not
                               consider the
                               current devices
                               running-config.
                               When set to true,
                               this will cause
                               the module to
                               push the contents
                               of `src' into the
                               device without
                               first checking if
                               already
                               configured. Note
                               this argument
                               should be
                               considered
                               deprecated.  To
                               achieve the
                               equivalent, set
                               the `match=none'
                               which is
                               idempotent.  This
                               argument will be
                               removed in a
                               future release.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      lines                  # The ordered set of commands that should be
                               configured in the
                               section.  The
                               commands must be
                               the exact same
                               commands as found
                               in the device
                               running-config.
                               Be sure to note
                               the configuration
                               command syntax as
                               some commands are
                               automatically
                               modified by the
                               device config
                               parser.
      match                  # Instructs the module on the way to perform the
                               matching of the
                               set of commands
                               against the
                               current device
                               config.  If match
                               is set to `line',
                               commands are
                               matched line by
                               line.  If match
                               is set to
                               `strict', command
                               lines are matched
                               with respect to
                               position.  If
                               match is set to
                               `exact', command
                               lines must be an
                               equal match.
                               Finally, if match
                               is set to `none',
                               the module will
                               not attempt to
                               compare the
                               source
                               configuration
                               with the running
                               configuration on
                               the remote
                               device.
      parents                # The ordered set of parents that uniquely
                               identify the
                               section the
                               commands should
                               be checked
                               against.  If the
                               parents argument
                               is omitted, the
                               commands are
                               checked against
                               the set of top
                               level or global
                               commands.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `eapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `eapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `eos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      replace                # Instructs the module on the way to perform the
                               configuration on
                               the device.  If
                               the replace
                               argument is set
                               to `line' then
                               the modified
                               lines are pushed
                               to the device in
                               configuration
                               mode.  If the
                               replace argument
                               is set to `block'
                               then the entire
                               command block is
                               pushed to the
                               device in
                               configuration
                               mode if any line
                               is not correct.
      save                   # The `save' argument instructs the module to save
                               the running-
                               config to
                               startup-config.
                               This operation is
                               performed after
                               any changes are
                               made to the
                               current running
                               config.  If no
                               changes are made,
                               the configuration
                               is still saved to
                               the startup
                               config.  This
                               option will
                               always cause the
                               module to return
                               changed.
      src                    # The `src' argument provides a path to the
                               configuration
                               file to load into
                               the remote
                               system.  The path
                               can either be a
                               full system path
                               to the
                               configuration
                               file if the value
                               starts with / or
                               relative to the
                               root of the
                               implemented role
                               or playbook. This
                               argument is
                               mutually
                               exclusive with
                               the `lines' and
                               `parents'
                               arguments.
      ssh_keyfile            # Specifies the SSH keyfile to use to authenticate
                               the connection to
                               the remote
                               device.  This
                               argument is only
                               used for `cli'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the
                               `transport=eapi'.
                               If the transport
                               argument is not
                               eapi, this value
                               is ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the eAPI
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Manage and configure Arista EOS eAPI.
  action: eos_eapi
      auth_pass              # Specifies the password to use if required to
                               enter privileged
                               mode on the
                               remote device.
                               If `authorize' is
                               false, then this
                               argument does
                               nothing. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_AUTH_PASS'
                               will be used
                               instead.
      authorize              # Instructs the module to enter privileged mode on
                               the remote device
                               before sending
                               any commands.  If
                               not specified,
                               the device will
                               attempt to
                               execute all
                               commands in non-
                               privileged mode.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_AUTHORIZE'
                               will be used
                               instead.
      config                 # The module, by default, will connect to the
                               remote device and
                               retrieve the
                               current running-
                               config to use as
                               a base for
                               comparing against
                               the contents of
                               source.  There
                               are times when it
                               is not desirable
                               to have the task
                               get the current
                               running-config
                               for every task in
                               a playbook.  The
                               `config' argument
                               allows the
                               implementer to
                               pass in the
                               configuration to
                               use as the base
                               config for
                               comparison.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      http                   # The `http' argument controls the operating state
                               of the HTTP
                               transport
                               protocol when
                               eAPI is present
                               in the running-
                               config. When the
                               value is set to
                               True, the HTTP
                               protocol is
                               enabled and when
                               the value is set
                               to False, the
                               HTTP protocol is
                               disabled. By
                               default, when
                               eAPI is first
                               configured, the
                               HTTP protocol is
                               disabled.
      http_port              # Configures the HTTP port that will listen for
                               connections when
                               the HTTP
                               transport
                               protocol is
                               enabled.  This
                               argument accepts
                               integer values in
                               the valid range
                               of 1 to 65535.
      https                  # The `https' argument controls the operating
                               state of the
                               HTTPS transport
                               protocol when
                               eAPI is present
                               in the running-
                               config. When the
                               value is set to
                               True, the HTTPS
                               protocol is
                               enabled and when
                               the value is set
                               to False, the
                               HTTPS protocol is
                               disabled. By
                               default, when
                               eAPI is first
                               configured, the
                               HTTPS protocol is
                               enabled.
      https_port             # Configures the HTTP port that will listen for
                               connections when
                               the HTTP
                               transport
                               protocol is
                               enabled.  This
                               argument accepts
                               integer values in
                               the valid range
                               of 1 to 65535.
      local_http             # The `local_http' argument controls the operating
                               state of the
                               local HTTP
                               transport
                               protocol when
                               eAPI is present
                               in the running-
                               config.  When the
                               value is set to
                               True, the HTTP
                               protocol is
                               enabled and
                               restricted to
                               connections from
                               localhost only.
                               When the value is
                               set to False, the
                               HTTP local
                               protocol is
                               disabled. Note is
                               value is
                               independent of
                               the `http'
                               argument
      local_http_port        # Configures the HTTP port that will listen for
                               connections when
                               the HTTP
                               transport
                               protocol is
                               enabled.  This
                               argument accepts
                               integer values in
                               the valid range
                               of 1 to 65535.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `eapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `eapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `eos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      socket                 # The `socket' argument controls the operating
                               state of the UNIX
                               Domain Socket
                               used to receive
                               eAPI requests.
                               When the value of
                               this argument is
                               set to True, the
                               UDS will listen
                               for eAPI
                               requests.  When
                               the value is set
                               to False, the UDS
                               will not be
                               available to
                               handle requests.
                               By default when
                               eAPI is first
                               configured, the
                               UDS is disabled.
      ssh_keyfile            # Specifies the SSH keyfile to use to authenticate
                               the connection to
                               the remote
                               device.  This
                               argument is only
                               used for `cli'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state                  # The `state' argument controls the operational
                               state of eAPI on
                               the remote
                               device.  When
                               this argument is
                               set to `started',
                               eAPI is enabled
                               to receive
                               requests and when
                               this argument is
                               `stopped', eAPI
                               is disabled and
                               will not receive
                               requests.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the
                               `transport=eapi'.
                               If the transport
                               argument is not
                               eapi, this value
                               is ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the eAPI
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
      vrf                    # The `vrf' argument will configure eAPI to listen
                               for connections
                               in the specified
                               VRF.  By default,
                               eAPI transports
                               will listen for
                               connections in
                               the global table.
                               This value
                               requires the VRF
                               to already be
                               created otherwise
                               the task will
                               fail.
- name: Collect facts from remote devices running Arista EOS
  action: eos_facts
      auth_pass              # Specifies the password to use if required to
                               enter privileged
                               mode on the
                               remote device.
                               If `authorize' is
                               false, then this
                               argument does
                               nothing. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_AUTH_PASS'
                               will be used
                               instead.
      authorize              # Instructs the module to enter privileged mode on
                               the remote device
                               before sending
                               any commands.  If
                               not specified,
                               the device will
                               attempt to
                               execute all
                               commands in non-
                               privileged mode.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_AUTHORIZE'
                               will be used
                               instead.
      gather_subset          # When supplied, this argument will restrict the
                               facts collected
                               to a given
                               subset.  Possible
                               values for this
                               argument include
                               all, hardware,
                               config, and
                               interfaces.  Can
                               specify a list of
                               values to include
                               a larger subset.
                               Values can also
                               be used with an
                               initial `[!]' to
                               specify that a
                               specific subset
                               should not be
                               collected.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `eapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `eapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `eos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Specifies the SSH keyfile to use to authenticate
                               the connection to
                               the remote
                               device.  This
                               argument is only
                               used for `cli'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the
                               `transport=eapi'.
                               If the transport
                               argument is not
                               eapi, this value
                               is ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the eAPI
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Execute an AWS Lambda function
  action: execute_lambda
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      dry_run                # Do not *actually* invoke the function. A
                               `DryRun' call
                               will check that
                               the caller has
                               permissions to
                               call the
                               function,
                               especially for
                               checking cross-
                               account
                               permissions.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      function_arn           # The name of the function to be invoked
      name                   # The name of the function to be invoked. This can
                               only be used for
                               invocations
                               within the
                               calling account.
                               To invoke a
                               function in
                               another account,
                               use
                               `function_arn' to
                               specify the full
                               ARN.
      payload                # A dictionary in any form to be provided as input
                               to the Lambda
                               function.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      tail_log               # If `tail_log=true', the result of the task will
                               include the last
                               4 KB of the
                               CloudWatch log
                               for the function
                               execution. Log
                               tailing only
                               works if you use
                               synchronous
                               invocation
                               `wait=true'. This
                               is usually used
                               for development
                               or testing
                               Lambdas.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
      version_qualifier      # Which version/alias of the function to run. This
                               defaults to the
                               `LATEST'
                               revision, but can
                               be set to any
                               existing version
                               or alias. See htt
                               ps;//docs.aws.ama
                               zon.com/lambda/la
                               test/dg
                               /versioning-
                               aliases.html for
                               details.
      wait                   # Whether to wait for the function results or not.
                               If `wait' is
                               false, the task
                               will not return
                               any results. To
                               wait for the
                               Lambda function
                               to complete, set
                               `wait=true' and
                               the result will
                               be available in
                               the `output' key.
- name: Manages domain records on Exoscale DNS API.
  action: exo_dns_domain
      api_key                # API key of the Exoscale DNS API.
      api_region             # Name of the ini section in the `cloustack.ini'
                               file.
      api_secret             # Secret key of the Exoscale DNS API.
      api_timeout            # HTTP timeout to Exoscale DNS API.
      name=                  # Name of the record.
      state                  # State of the resource.
      validate_certs         # Validate SSL certs of the Exoscale DNS API.
- name: Manages DNS records on Exoscale DNS.
  action: exo_dns_record
      api_key                # API key of the Exoscale DNS API.
      api_region             # Name of the ini section in the `cloustack.ini'
                               file.
      api_secret             # Secret key of the Exoscale DNS API.
      api_timeout            # HTTP timeout to Exoscale DNS API.
      content                # Content of the record. Required if
                               `state=present'
                               or `name=""'
      domain=                # Domain the record is related to.
      multiple               # Whether there are more than one records with
                               similar `name'.
                               Only allowed with
                               `record_type=A'.
                               `content' will
                               not be updated as
                               it is used as key
                               to find the
                               record.
      name                   # Name of the record.
      prio                   # Priority of the record.
      record_type            # Type of the record.
      state                  # State of the record.
      ttl                    # TTL of the record in seconds.
      validate_certs         # Validate SSL certs of the Exoscale DNS API.
- name: Executes a command and responds to prompts
  action: expect
      chdir                  # cd into this directory before running the
                               command
      command=               # the command module takes command to run.
      creates                # a filename, when it already exists, this step
                               will *not* be
                               run.
      echo                   # Whether or not to echo out your response strings
      removes                # a filename, when it does not exist, this step
                               will *not* be
                               run.
      responses=             # Mapping of expected string/regex and string to
                               respond with. If
                               the response is a
                               list, successive
                               matches return
                               successive
                               responses. List
                               functionality is
                               new in 2.1.
      timeout                # Amount of time in seconds to wait for the
                               expected strings
- name: Runs the discovery program `facter' on the remote system
  action: facter
- name: Fail with custom message
  action: fail
      msg                    # The customized message used for failing
                               execution. If
                               omitted, fail
                               will simple bail
                               out with a
                               generic message.
- name: Fetches a file from remote nodes
  action: fetch
      dest=                  # A directory to save the file into. For example,
                               if the `dest'
                               directory is
                               `/backup' a `src'
                               file named
                               `/etc/profile' on
                               host `host.exampl
                               e.com', would be
                               saved into `/back
                               up/host.example.c
                               om/etc/profile'
      fail_on_missing        # When set to 'yes', the task will fail if the
                               source file is
                               missing.
      flat                   # Allows you to override the default behavior of
                               appending hostnam
                               e/path/to/file to
                               the destination.
                               If dest ends with
                               '/', it will use
                               the basename of
                               the source file,
                               similar to the
                               copy module.
                               Obviously this is
                               only handy if the
                               filenames are
                               unique.
      src=                   # The file on the remote system to fetch. This
                               `must' be a file,
                               not a directory.
                               Recursive
                               fetching may be
                               supported in a
                               later release.
      validate_checksum      # Verify that the source and destination checksums
                               match after the
                               files are
                               fetched.
- name: Sets attributes of files
  action: file
      follow                 # This flag indicates that filesystem links, if
                               they exist,
                               should be
                               followed.
      force                  # force the creation of the symlinks in two cases:
                               the source file
                               does not exist
                               (but will appear
                               later); the
                               destination
                               exists and is a
                               file (so, we need
                               to unlink the
                               "path" file and
                               create symlink to
                               the "src" file in
                               place of it).
      group                  # name of the group that should own the
                               file/directory,
                               as would be fed
                               to `chown'
      mode                   # mode the file or directory should be. For those
                               used to
                               `/usr/bin/chmod'
                               remember that
                               modes are
                               actually octal
                               numbers (like
                               0644). Leaving
                               off the leading
                               zero will likely
                               have unexpected
                               results. As of
                               version 1.8, the
                               mode may be
                               specified as a
                               symbolic mode
                               (for example,
                               `u+rwx' or
                               `u=rw,g=r,o=r').
      owner                  # name of the user that should own the
                               file/directory,
                               as would be fed
                               to `chown'
      path=                  # path to the file being managed.  Aliases:
                               `dest', `name'
      recurse                # recursively set the specified file attributes
                               (applies only to
                               state=directory)
      selevel                # level part of the SELinux file context. This is
                               the MLS/MCS
                               attribute,
                               sometimes known
                               as the `range'.
                               `_default'
                               feature works as
                               for `seuser'.
      serole                 # role part of SELinux file context, `_default'
                               feature works as
                               for `seuser'.
      setype                 # type part of SELinux file context, `_default'
                               feature works as
                               for `seuser'.
      seuser                 # user part of SELinux file context. Will default
                               to system policy,
                               if applicable. If
                               set to
                               `_default', it
                               will use the
                               `user' portion of
                               the policy if
                               available
      src                    # path of the file to link to (applies only to
                               `state=link').
                               Will accept
                               absolute,
                               relative and
                               nonexisting
                               paths. Relative
                               paths are not
                               expanded.
      state                  # If `directory', all immediate subdirectories
                               will be created
                               if they do not
                               exist, since 1.7
                               they will be
                               created with the
                               supplied
                               permissions. If
                               `file', the file
                               will NOT be
                               created if it
                               does not exist,
                               see the [copy] or
                               [template] module
                               if you want that
                               behavior.  If
                               `link', the
                               symbolic link
                               will be created
                               or changed. Use
                               `hard' for
                               hardlinks. If
                               `absent',
                               directories will
                               be recursively
                               deleted, and
                               files or symlinks
                               will be unlinked.
                               Note that [file]
                               will not fail if
                               the `path' does
                               not exist as the
                               state did not
                               change. If
                               `touch' (new in
                               1.4), an empty
                               file will be
                               created if the
                               `path' does not
                               exist, while an
                               existing file or
                               directory will
                               receive updated
                               file access and
                               modification
                               times (similar to
                               the way `touch`
                               works from the
                               command line).
      unsafe_writes          # Normally this module uses atomic operations to
                               prevent data
                               corruption or
                               inconsistent
                               reads from the
                               target files,
                               sometimes systems
                               are configured or
                               just broken in
                               ways that prevent
                               this. One example
                               are docker
                               mounted files,
                               they cannot be
                               updated
                               atomically and
                               can only be done
                               in an unsafe
                               manner. This
                               boolean option
                               allows ansible to
                               fall back to
                               unsafe methods of
                               updating files
                               for those cases
                               in which you do
                               not have any
                               other choice. Be
                               aware that this
                               is subject to
                               race conditions
                               and can lead to
                               data corruption.
- name: Makes file system on block device
  action: filesystem
      dev=                   # Target block device.
      force                  # If yes, allows to create new filesystem on
                               devices that
                               already has
                               filesystem.
      fstype=                # File System type to be created. reiserfs support
                               was added in 2.2.
      opts                   # List of options to be passed to mkfs command.
      resizefs               # If yes, if the block device and filessytem size
                               differ, grow the
                               filesystem into
                               the space. Note,
                               XFS Will only
                               grow if mounted.
- name: return a list of files based on specific criteria
  action: find
      age                    # Select files whose age is equal to or greater
                               than the
                               specified time.
                               Use a negative
                               age to find files
                               equal to or less
                               than the
                               specified time.
                               You can choose
                               seconds, minutes,
                               hours, days, or
                               weeks by
                               specifying the
                               first letter of
                               any of those
                               words (e.g.,
                               "1w").
      age_stamp              # Choose the file property against which we
                               compare age.
                               Default is mtime.
      contains               # One or more regex patterns which should be
                               matched against
                               the file content
      file_type              # Type of file to select
      follow                 # Set this to true to follow symlinks in path for
                               systems with
                               python 2.6+
      get_checksum           # Set this to true to retrieve a file's sha1
                               checksum
      hidden                 # Set this to true to include hidden files,
                               otherwise they'll
                               be ignored.
      paths=                 # List of paths to the file or directory to
                               search. All paths
                               must be fully
                               qualified.
      patterns               # One or more (shell or regex) patterns, which
                               type is
                               controlled by
                               `use_regex'
                               option. The
                               patterns restrict
                               the list of files
                               to be returned to
                               those whose
                               basenames match
                               at least one of
                               the patterns
                               specified.
                               Multiple patterns
                               can be specified
                               using a list.
      recurse                # If target is a directory, recursively descend
                               into the
                               directory looking
                               for files.
      size                   # Select files whose size is equal to or greater
                               than the
                               specified size.
                               Use a negative
                               size to find
                               files equal to or
                               less than the
                               specified size.
                               Unqualified
                               values are in
                               bytes, but b, k,
                               m, g, and t can
                               be appended to
                               specify bytes,
                               kilobytes,
                               megabytes,
                               gigabytes, and
                               terabytes,
                               respectively.
                               Size is not
                               evaluated for
                               directories.
      use_regex              # If false the patterns are file globs (shell) if
                               true they are
                               python regexes
- name: Manage arbitrary ports/services with firewalld
  action: firewalld
      immediate              # Should this configuration be applied
                               immediately, if
                               set as permanent
      interface              # The interface you would like to add/remove
                               to/from a zone in
                               firewalld
      masquerade             # The masquerade setting you would like to
                               enable/disable
                               to/from zones
                               within firewalld
      permanent              # Should this configuration be in the running
                               firewalld
                               configuration or
                               persist across
                               reboots.
      port                   # Name of a port or port range to add/remove
                               to/from
                               firewalld. Must
                               be in the form
                               PORT/PROTOCOL or
                               PORT-
                               PORT/PROTOCOL for
                               port ranges.
      rich_rule              # Rich rule to add/remove to/from firewalld.
      service                # Name of a service to add/remove to/from
                               firewalld -
                               service must be
                               listed in
                               /etc/services.
      source                 # The source/network you would like to add/remove
                               to/from firewalld
      state=                 # Should this port accept(enabled) or
                               reject(disabled)
                               connections.
      timeout                # The amount of time the rule should be in effect
                               for when non-
                               permanent.
      zone                   # The firewalld zone to add/remove to/from (NOTE:
                               default zone can
                               be configured per
                               system but
                               "public" is
                               default from
                               upstream.
                               Available choices
                               can be extended
                               based on per-
                               system configs,
                               listed here are
                               "out of the box"
                               defaults).
- name: Manage bandwidth resource control and priority for protocols, services and zones.
  action: flowadm
      dsfield                # -   I d e n t i f i e s   t h e   8 - b i t   d
                               i f f e r e n t i
                               a t e d   s e r v
                               i c e s   f i e l
                               d   ( a s   d e f
                               i n e d   i n   R
                               F C   2 4 7 4 ) .
                               T h e   o p t i o
                               n a l   d s f i e
                               l d _ m a s k   i
                               s   u s e d   t o
                               s t a t e   t h e
                               b i t s   o f   i
                               n t e r e s t   i
                               n   t h e   d i f
                               f e r e n t i a t
                               e d   s e r v i c
                               e s   f i e l d
                               w h e n   c o m p
                               a r i n g   w i t
                               h   t h e   d s f
                               i e l d   v a l u
                               e .   B o t h   v
                               a l u e s   m u s
                               t   b e   i n   h
                               e x a d e c i m a
                               l .
      link                   # Specifiies a link to configure flow on.
      local_ip               # Identifies a network flow by the local IP
                               address.
      local_port             # Identifies a service specified by the local
                               port.
      maxbw                  # -   S e t s   t h e   f u l l   d u p l e x   b
                               a n d w i d t h
                               f o r   t h e   f
                               l o w .   T h e
                               b a n d w i d t h
                               i s   s p e c i f
                               i e d   a s   a n
                               i n t e g e r   w
                               i t h   o n e   o
                               f   t h e   s c a
                               l e   s u f f i x
                               e s ( K ,   M ,
                               o r   G   f o r
                               K b p s ,   M b p
                               s ,   a n d   G b
                               p s ) .   I f   n
                               o   u n i t s   a
                               r e   s p e c i f
                               i e d ,   t h e
                               i n p u t   v a l
                               u e   w i l l   b
                               e   r e a d   a s
                               M b p s .
      name=                  # -   A   f l o w   i s   d e f i n e d   a s   a
                               s e t   o f   a t
                               t r i b u t e s
                               b a s e d   o n
                               L a y e r   3   a
                               n d   L a y e r
                               4   h e a d e r s
                               ,   w h i c h   c
                               a n   b e   u s e
                               d   t o   i d e n
                               t i f y   a   p r
                               o t o c o l ,   s
                               e r v i c e ,   o
                               r   a   z o n e .
      priority               # Sets the relative priority for the flow.
      remove_ip              # Identifies a network flow by the remote IP
                               address.
      state                  # Create/delete/enable/disable an IP address on
                               the network
                               interface.
      temporary              # Specifies that the configured flow is temporary.
                               Temporary flows
                               do not persist
                               across reboots.
      transport              # -   S p e c i f i e s   a   L a y e r   4   p r
                               o t o c o l   t o
                               b e   u s e d .
                               I t   i s   t y p
                               i c a l l y   u s
                               e d   i n   c o m
                               b i n a t i o n
                               w i t h   I ( l o
                               c a l _ p o r t )
                               t o   i d e n t i
                               f y   t h e   s e
                               r v i c e   t h a
                               t   n e e d s   s
                               p e c i a l   a t
                               t e n t i o n .
- name: Send a message to a flowdock
  action: flowdock
      external_user_name     # (chat only - required) Name of the "user"
                               sending the
                               message
      from_address           # (inbox only - required) Email address of the
                               message sender
      from_name              # (inbox only) Name of the message sender
      link                   # (inbox only) Link associated with the message.
                               This will be used
                               to link the
                               message subject
                               in Team Inbox.
      msg=                   # Content of the message
      project                # (inbox only) Human readable identifier for more
                               detailed message
                               categorization
      reply_to               # (inbox only) Email address for replies
      source                 # (inbox only - required) Human readable
                               identifier of the
                               application that
                               uses the Flowdock
                               API
      subject                # (inbox only - required) Subject line of the
                               message
      tags                   # tags of the message, separated by commas
      token=                 # API token.
      type=                  # Whether to post to 'inbox' or 'chat'
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
- name: This module manages objects/buckets in Google Cloud Storage.
  action: gc_storage
      bucket=                # Bucket name.
      dest                   # The destination file path when downloading an
                               object/key with a
                               GET operation.
      expiration             # Time limit (in seconds) for the URL generated
                               and returned by
                               GCA when
                               performing a
                               mode=put or
                               mode=get_url
                               operation. This
                               url is only
                               available when
                               public-read is
                               the acl for the
                               object.
      force                  # Forces an overwrite either locally on the
                               filesystem or
                               remotely with the
                               object/key. Used
                               with PUT and GET
                               operations.
      gs_access_key=         # GS access key. If not set then the value of the
                               GS_ACCESS_KEY_ID
                               environment
                               variable is used.
      gs_secret_key=         # GS secret key. If not set then the value of the
                               GS_SECRET_ACCESS_
                               KEY environment
                               variable is used.
      headers                # Headers to attach to object.
      mode=                  # Switches the module behaviour between upload,
                               download, get_url
                               (return download
                               url) , get_str
                               (download object
                               as string),
                               create (bucket)
                               and delete
                               (bucket).
      object                 # Keyname of the object inside the bucket. Can be
                               also be used to
                               create "virtual
                               directories" (see
                               examples).
      permission             # This option let's the user set the canned
                               permissions on
                               the object/bucket
                               that are created.
                               The permissions
                               that can be set
                               are 'private',
                               'public-read',
                               'authenticated-
                               read'.
      src                    # The source file path when performing a PUT
                               operation.
- name: Creates or removes resource records in Google Cloud DNS
  action: gcdns_record
      credentials_file       # The path to the JSON file associated with the
                               service account
                               email.
      overwrite              # Whether an attempt to overwrite an existing
                               record should
                               succeed or fail.
                               The behavior of
                               this option
                               depends on
                               `state'. If
                               `state' is
                               `present' and
                               `overwrite' is
                               `True', this
                               module will
                               replace an
                               existing resource
                               record of the
                               same name with
                               the provided
                               `record_data'. If
                               `state' is
                               `present' and
                               `overwrite' is
                               `False', this
                               module will fail
                               if there is an
                               existing resource
                               record with the
                               same name and
                               type, but
                               different
                               resource data. If
                               `state' is
                               `absent' and
                               `overwrite' is
                               `True', this
                               module will
                               remove the given
                               resource record
                               unconditionally.
                               If `state' is
                               `absent' and
                               `overwrite' is
                               `False', this
                               module will fail
                               if the provided
                               record_data do
                               not match exactly
                               with the existing
                               resource record's
                               record_data.
      pem_file               # The path to the PEM file associated with the
                               service account
                               email. This
                               option is
                               deprecated and
                               may be removed in
                               a future release.
                               Use `credentials_
                               file' instead.
      project_id             # The Google Cloud Platform project ID to use.
      record=                # The fully-qualified domain name of the resource
                               record.
      record_data            # The record_data to use for the resource record.
                               `record_data'
                               must be specified
                               if `state' is
                               `present' or
                               `overwrite' is
                               `True', or the
                               module will fail.
                               Valid record_data
                               vary based on the
                               record's `type'.
                               In addition,
                               resource records
                               that contain a
                               DNS domain name
                               in the value
                               field (e.g.,
                               CNAME, PTR, SRV,
                               .etc) MUST
                               include a
                               trailing dot in
                               the value.
                               Individual string
                               record_data for
                               TXT records must
                               be enclosed in
                               double quotes.
                               For resource
                               records that have
                               the same name but
                               different
                               record_data
                               (e.g., multiple A
                               records), they
                               must be defined
                               as multiple list
                               entries in a
                               single record.
      service_account_email   # The e-mail address for a service account with
                               access to Google
                               Cloud DNS.
      state                  # Whether the given resource record should or
                               should not be
                               present.
      ttl                    # The amount of time in seconds that a resource
                               record will
                               remain cached by
                               a caching
                               resolver.
      type=                  # The type of resource record to add.
      zone                   # The DNS domain name of the zone (e.g.,
                               example.com). One
                               of either `zone'
                               or `zone_id' must
                               be specified as
                               an option, or the
                               module will fail.
                               If both `zone'
                               and `zone_id' are
                               specifed,
                               `zone_id' will be
                               used.
      zone_id                # The Google Cloud ID of the zone (e.g., example-
                               com). One of
                               either `zone' or
                               `zone_id' must be
                               specified as an
                               option, or the
                               module will fail.
                               These usually
                               take the form of
                               domain names with
                               the dots replaced
                               with dashes. A
                               zone ID will
                               never have any
                               dots in it.
                               `zone_id' can be
                               faster than
                               `zone' in
                               projects with a
                               large number of
                               zones. If both
                               `zone' and
                               `zone_id' are
                               specifed,
                               `zone_id' will be
                               used.
- name: Creates or removes zones in Google Cloud DNS
  action: gcdns_zone
      credentials_file       # The path to the JSON file associated with the
                               service account
                               email.
      description            # An arbitrary text string to use for the zone
                               description.
      pem_file               # The path to the PEM file associated with the
                               service account
                               email. This
                               option is
                               deprecated and
                               may be removed in
                               a future release.
                               Use `credentials_
                               file' instead.
      project_id             # The Google Cloud Platform project ID to use.
      service_account_email   # The e-mail address for a service account with
                               access to Google
                               Cloud DNS.
      state                  # Whether the given zone should or should not be
                               present.
      zone=                  # The DNS domain name of the zone. This is NOT the
                               Google Cloud DNS
                               zone ID (e.g.,
                               example-com). If
                               you attempt to
                               specify a zone
                               ID, this module
                               will attempt to
                               create a TLD and
                               will fail.
- name: create or terminate GCE instances
  action: gce
      credentials_file       # path to the JSON file associated with the
                               service account
                               email
      disk_auto_delete       # if set boot disk will be removed after instance
                               destruction
      disks                  # a list of persistent disks to attach to the
                               instance; a
                               string value
                               gives the name of
                               the disk;
                               alternatively, a
                               dictionary value
                               can define 'name'
                               and 'mode'
                               ('READ_ONLY' or
                               'READ_WRITE').
                               The first entry
                               will be the boot
                               disk (which must
                               be READ_WRITE).
      external_ip            # type of external ip, ephemeral by default;
                               alternatively, a
                               list of fixed gce
                               ips or ip names
                               can be given (if
                               there is not
                               enough specified
                               ip, 'ephemeral'
                               will be used).
                               Specify 'none' if
                               no external ip is
                               desired.
      image                  # image string to use for the instance
      instance_names         # a comma-separated list of instance names to
                               create or destroy
      ip_forward             # set to true if the instance can forward ip
                               packets (useful
                               for gateways)
      machine_type           # machine type to use for the instance, use
                               'n1-standard-1'
                               by default
      metadata               # a hash/dictionary of custom data for the
                               instance;
                               '{"key":"value",
                               ...}'
      name                   # identifier when working with a single instance
      network                # name of the network, 'default' will be used if
                               not specified
      pem_file               # path to the pem file associated with the service
                               account email
                               This option is
                               deprecated. Use '
                               credentials_file'
                               .
      persistent_boot_disk   # if set, create the instance with a persistent
                               boot disk
      preemptible            # if set to true, instances will be preemptible
                               and time-limited.
                               (requires
                               libcloud >=
                               0.20.0)
      project_id             # your GCE project ID
      service_account_email   # service account email
      service_account_permissions   # service account permissions (see https://cloud.g
                               oogle.com/sdk/gcl
                               oud/reference/com
                               pute/instances/cr
                               eate, --scopes
                               section for
                               detailed
                               information)
      state                  # desired state of the resource
      subnetwork             # name of the subnetwork in which the instance
                               should be created
      tags                   # a comma-separated list of tags to associate with
                               the instance
      zone=                  # the GCE zone to use
- name: utilize GCE image resources
  action: gce_img
      description            # an optional description
      family                 # an optional family name
      name=                  # the name of the image to create or delete
      pem_file               # path to the pem file associated with the service
                               account email
      project_id             # your GCE project ID
      service_account_email   # service account email
      source                 # the source disk or the Google Cloud Storage URI
                               to create the
                               image from
      state                  # desired state of the image
      timeout                # timeout for the operation
      zone                   # the zone of the disk specified by source
- name: create/destroy GCE load-balancer resources
  action: gce_lb
      credentials_file       # path to the JSON file associated with the
                               service account
                               email
      external_ip            # the external static IPv4 (or auto-assigned)
                               address for the
                               LB
      httphealthcheck_healthy_count   # number of consecutive successful checks before
                               marking a node
                               healthy
      httphealthcheck_host   # host header to pass through on HTTP check
                               requests
      httphealthcheck_interval   # the duration in seconds between each health
                               check request
      httphealthcheck_name   # the name identifier for the HTTP health check
      httphealthcheck_path   # the url path to use for HTTP health checking
      httphealthcheck_port   # the TCP port to use for HTTP health checking
      httphealthcheck_timeout   # the timeout in seconds before a request is
                               considered a
                               failed check
      httphealthcheck_unhealthy_count   # number of consecutive failed checks before
                               marking a node
                               unhealthy
      members                # a list of zone/nodename pairs, e.g ['us-
                               central1-a/www-a'
                               , ...]
      name                   # name of the load-balancer resource
      pem_file               # path to the pem file associated with the service
                               account email
                               This option is
                               deprecated. Use '
                               credentials_file'
                               .
      port_range             # the port (range) to forward, e.g. 80 or
                               8000-8888
                               defaults to all
                               ports
      project_id             # your GCE project ID
      protocol               # the protocol used for the load-balancer packet
                               forwarding, tcp
                               or udp
      region                 # the GCE region where the load-balancer is
                               defined
      service_account_email   # service account email
      state                  # desired state of the LB
- name: Create, Update or Destroy a Managed Instance Group (MIG).
  action: gce_mig
      autoscaling            # A dictionary of configuration for the
                               autoscaler.
                               'enabled (bool)',
                               'name (str)' and 
                               policy.max_instan
                               ces (int) are
                               required fields
                               if autoscaling is
                               used. See https:/
                               /cloud.google.com
                               /compute/docs/ref
                               erence/beta/autos
                               calers for more
                               information on
                               Autoscaling.
      credentials_file       # Path to the JSON file associated with the
                               service account
                               email
      name=                  # Name of the Managed Instance Group.
      project_id             # GCE project ID
      service_account_email   # service account email
      size                   # Size of Managed Instance Group.  If MIG already
                               exists, it will
                               be resized to the
                               number provided
                               here.  Required
                               for creating
                               MIGs.
      state                  # desired state of the resource
      template               # Instance Template to be used in creating the
                               VMs.  See https:/
                               /cloud.google.com
                               /compute/docs
                               /instance-
                               templates to
                               learn more about
                               Instance
                               Templates.
                               Required for
                               creating MIGs.
      zone=                  # The GCE zone to use for this Managed Instance
                               Group.
- name: create/destroy GCE networks and firewall rules
  action: gce_net
      allowed                # the protocol:ports to allow ('tcp:80' or
                               'tcp:80,443' or '
                               tcp:80-800;udp:1-
                               25') this
                               parameter is
                               mandatory when
                               creating or
                               updating a
                               firewall rule
      credentials_file       # path to the JSON file associated with the
                               service account
                               email
      fwname                 # name of the firewall rule
      ipv4_range             # the IPv4 address range in CIDR notation for the
                               network this
                               parameter is not
                               mandatory when
                               you specified
                               existing network
                               in name
                               parameter, but
                               when you create
                               new network, this
                               parameter is
                               mandatory
      mode                   # network mode for Google Cloud "legacy" indicates
                               a network with an
                               IP address range
                               "auto"
                               automatically
                               generates
                               subnetworks in
                               different regions
                               "custom" uses
                               networks to group
                               subnets of user
                               specified IP
                               address ranges ht
                               tps://cloud.googl
                               e.com/compute/doc
                               s/networking#netw
                               ork_types
      name                   # name of the network
      pem_file               # path to the pem file associated with the service
                               account email
                               This option is
                               deprecated. Use '
                               credentials_file'
                               .
      project_id             # your GCE project ID
      service_account_email   # service account email
      src_range              # the source IPv4 address range in CIDR notation
      src_tags               # the source instance tags for creating a firewall
                               rule
      state                  # desired state of the network or firewall
      subnet_desc            # description of subnet to create
      subnet_name            # name of subnet to create
      subnet_region          # region of subnet to create
      target_tags            # the target instance tags for creating a firewall
                               rule
- name: utilize GCE persistent disk resources
  action: gce_pd
      credentials_file       # path to the JSON file associated with the
                               service account
                               email
      detach_only            # do not destroy the disk, merely detach it from
                               an instance
      disk_type              # type of disk provisioned
      image                  # the source image to use for the disk
      instance_name          # instance name if you wish to attach or detach
                               the disk
      mode                   # GCE mount mode of disk, READ_ONLY (default) or
                               READ_WRITE
      name=                  # name of the disk
      pem_file               # path to the pem file associated with the service
                               account email
                               This option is
                               deprecated. Use '
                               credentials_file'
                               .
      project_id             # your GCE project ID
      service_account_email   # service account email
      size_gb                # whole integer size of disk (in GB) to create,
                               default is 10 GB
      snapshot               # the source snapshot to use for the disk
      state                  # desired state of the persistent disk
      zone                   # zone in which to create the disk
- name: add or remove tag(s) to/from GCE instance
  action: gce_tag
      instance_name=         # the name of the GCE instance to add/remove tags
      pem_file               # path to the pem file associated with the service
                               account email
      project_id             # your GCE project ID
      service_account_email   # service account email
      state                  # desired state of the tags
      tags=                  # comma-separated list of tags to add or remove
      zone                   # the zone of the disk specified by source
- name: Manage Ruby gems
  action: gem
      build_flags            # Allow adding build flags for gem compilation
      env_shebang            # Rewrite the shebang line on installed scripts to
                               use /usr/bin/env.
      executable             # Override the path to the gem executable
      gem_source             # The path to a local gem used as installation
                               source.
      include_dependencies   # Whether to include dependencies or not.
      include_doc            # Install with or without docs.
      name=                  # The name of the gem to be managed.
      pre_release            # Allow installation of pre-release versions of
                               the gem.
      repository             # The repository from which the gem will be
                               installed
      state                  # The desired state of the gem. `latest' ensures
                               that the latest
                               version is
                               installed.
      user_install           # Install gem in user's local gems cache or for
                               all users
      version                # Version of the gem to be installed/removed.
- name: Downloads files from HTTP, HTTPS, or FTP to node
  action: get_url
      backup                 # Create a backup file including the timestamp
                               information so
                               you can get the
                               original file
                               back if you
                               somehow clobbered
                               it incorrectly.
      checksum               # If a checksum is passed to this parameter, the
                               digest of the
                               destination file
                               will be
                               calculated after
                               it is downloaded
                               to ensure its
                               integrity and
                               verify that the
                               transfer
                               completed
                               successfully.
                               Format: <algorith
                               m>:<checksum>,
                               e.g.: checksum="s
                               ha256:D98291AC[..
                               .]B6DC7B97" If
                               you worry about
                               portability, only
                               the sha1
                               algorithm is
                               available on all
                               platforms and
                               python versions.
                               The third party
                               hashlib library
                               can be installed
                               for access to
                               additional
                               algorithms.
                               Additionally, if
                               a checksum is
                               passed to this
                               parameter, and
                               the file exist
                               under the `dest'
                               location, the des
                               tination_checksum
                               would be
                               calculated, and
                               if checksum
                               equals destinatio
                               n_checksum, the
                               file download
                               would be skipped
                               (unless `force'
                               is true).
      dest=                  # absolute path of where to download the file to.
                               If `dest' is a
                               directory, either
                               the server
                               provided filename
                               or, if none
                               provided, the
                               base name of the
                               URL on the remote
                               server will be
                               used. If a
                               directory,
                               `force' has no
                               effect. If `dest'
                               is a directory,
                               the file will
                               always be
                               downloaded
                               (regardless of
                               the force
                               option), but
                               replaced only if
                               the contents
                               changed.
      force                  # If `yes' and `dest' is not a directory, will
                               download the file
                               every time and
                               replace the file
                               if the contents
                               change. If `no',
                               the file will
                               only be
                               downloaded if the
                               destination does
                               not exist.
                               Generally should
                               be `yes' only for
                               small local
                               files. Prior to
                               0.6, this module
                               behaved as if
                               `yes' was the
                               default.
      force_basic_auth       # httplib2, the library used by the uri module
                               only sends
                               authentication
                               information when
                               a webservice
                               responds to an
                               initial request
                               with a 401
                               status. Since
                               some basic auth
                               services do not
                               properly send a
                               401, logins will
                               fail. This option
                               forces the
                               sending of the
                               Basic
                               authentication
                               header upon
                               initial request.
      group                  # name of the group that should own the
                               file/directory,
                               as would be fed
                               to `chown'
      headers                # Add custom HTTP headers to a request in the
                               format "key:value
                               ,key:value"
      mode                   # mode the file or directory should be. For those
                               used to
                               `/usr/bin/chmod'
                               remember that
                               modes are
                               actually octal
                               numbers (like
                               0644). Leaving
                               off the leading
                               zero will likely
                               have unexpected
                               results. As of
                               version 1.8, the
                               mode may be
                               specified as a
                               symbolic mode
                               (for example,
                               `u+rwx' or
                               `u=rw,g=r,o=r').
      others                 # all arguments accepted by the [file] module also
                               work here
      owner                  # name of the user that should own the
                               file/directory,
                               as would be fed
                               to `chown'
      selevel                # level part of the SELinux file context. This is
                               the MLS/MCS
                               attribute,
                               sometimes known
                               as the `range'.
                               `_default'
                               feature works as
                               for `seuser'.
      serole                 # role part of SELinux file context, `_default'
                               feature works as
                               for `seuser'.
      setype                 # type part of SELinux file context, `_default'
                               feature works as
                               for `seuser'.
      seuser                 # user part of SELinux file context. Will default
                               to system policy,
                               if applicable. If
                               set to
                               `_default', it
                               will use the
                               `user' portion of
                               the policy if
                               available
      sha256sum              # If a SHA-256 checksum is passed to this
                               parameter, the
                               digest of the
                               destination file
                               will be
                               calculated after
                               it is downloaded
                               to ensure its
                               integrity and
                               verify that the
                               transfer
                               completed
                               successfully.
                               This option is
                               deprecated. Use
                               'checksum'.
      timeout                # Timeout in seconds for URL request
      tmp_dest               # absolute path of where temporary file is
                               downloaded to.
                               Defaults to
                               TMPDIR, TEMP or
                               TMP env variables
                               or a platform
                               specific value ht
                               tps://docs.python
                               .org/2/library/te
                               mpfile.html#tempf
                               ile.tempdir
      unsafe_writes          # Normally this module uses atomic operations to
                               prevent data
                               corruption or
                               inconsistent
                               reads from the
                               target files,
                               sometimes systems
                               are configured or
                               just broken in
                               ways that prevent
                               this. One example
                               are docker
                               mounted files,
                               they cannot be
                               updated
                               atomically and
                               can only be done
                               in an unsafe
                               manner. This
                               boolean option
                               allows ansible to
                               fall back to
                               unsafe methods of
                               updating files
                               for those cases
                               in which you do
                               not have any
                               other choice. Be
                               aware that this
                               is subject to
                               race conditions
                               and can lead to
                               data corruption.
      url=                   # HTTP, HTTPS, or FTP URL in the form (http|https|
                               ftp)://[user[:pas
                               s]]@host.domain[:
                               port]/path
      url_password           # The password for use in HTTP basic
                               authentication.
                               If the
                               `url_username'
                               parameter is not
                               specified, the
                               `url_password'
                               parameter will
                               not be used.
      url_username           # The username for use in HTTP basic
                               authentication.
                               This parameter
                               can be used
                               without
                               `url_password'
                               for sites that
                               allow empty
                               passwords.
      use_proxy              # if `no', it will not use a proxy, even if one is
                               defined in an
                               environment
                               variable on the
                               target hosts.
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
- name: a wrapper to the unix getent utility
  action: getent
      database=              # the name of a getent database supported by the
                               target system
                               (passwd, group,
                               hosts, etc).
      fail_key               # If a supplied key is missing this will make the
                               task fail if True
      key                    # key from which to return values from the
                               specified
                               database,
                               otherwise the
                               full contents are
                               returned.
      split                  # character used to split the database values into
                               lists/arrays such
                               as ':' or '  ',
                               otherwise  it
                               will try to pick
                               one depending on
                               the database
- name: Deploy software (or files) from git checkouts
  action: git
      accept_hostkey         # if `yes', adds the hostkey for the repo url if
                               not already
                               added. If
                               ssh_opts contains
                               "-o StrictHostKey
                               Checking=no",
                               this parameter is
                               ignored.
      bare                   # if `yes', repository will be created as a bare
                               repo, otherwise
                               it will be a
                               standard repo
                               with a workspace.
      clone                  # If `no', do not clone the repository if it does
                               not exist locally
      depth                  # Create a shallow clone with a history truncated
                               to the specified
                               number or
                               revisions. The
                               minimum possible
                               value is `1',
                               otherwise
                               ignored. Needs
                               `git>=1.9.1' to
                               work correctly.
      dest=                  # Absolute path of where the repository should be
                               checked out to.
                               This parameter is
                               required, unless
                               `clone' is set to
                               `no' This change
                               was made in
                               version 1.8.3.
                               Prior to this
                               version, the
                               `dest' parameter
                               was always
                               required.
      executable             # Path to git executable to use. If not supplied,
                               the normal
                               mechanism for
                               resolving binary
                               paths will be
                               used.
      force                  # If `yes', any modified files in the working
                               repository will
                               be discarded.
                               Prior to 0.7,
                               this was always
                               'yes' and could
                               not be disabled.
                               Prior to 1.9, the
                               default was `yes`
      key_file               # Specify an optional private key file to use for
                               the checkout.
      recursive              # if `no', repository will be cloned without the
                               --recursive
                               option, skipping
                               sub-modules.
      reference              # Reference repository (see "git clone --reference
                               ...")
      refspec                # Add an additional refspec to be fetched. If
                               version is set to
                               a `SHA-1' not
                               reachable from
                               any branch or
                               tag, this option
                               may be necessary
                               to specify the
                               ref containing
                               the `SHA-1'. Uses
                               the same syntax
                               as the 'git
                               fetch' command.
                               An example value
                               could be "refs/me
                               ta/config".
      remote                 # Name of the remote.
      repo=                  # git, SSH, or HTTP(S) protocol address of the git
                               repository.
      ssh_opts               # Creates a wrapper script and exports the path as
                               GIT_SSH which git
                               then
                               automatically
                               uses to override
                               ssh arguments. An
                               example value
                               could be "-o Stri
                               ctHostKeyChecking
                               =no"
      track_submodules       # if `yes', submodules will track the latest
                               commit on their
                               master branch (or
                               other branch
                               specified in
                               .gitmodules).  If
                               `no', submodules
                               will be kept at
                               the revision
                               specified by the
                               main project.
                               This is
                               equivalent to
                               specifying the
                               --remote flag to
                               git submodule
                               update.
      umask                  # The umask to set before doing any checkouts, or
                               any other
                               repository
                               maintenance.
      update                 # If `no', do not retrieve new revisions from the
                               origin repository
      verify_commit          # if `yes', when cloning or checking out a
                               `version' verify
                               the signature of
                               a GPG signed
                               commit. This
                               requires `git'
                               version>=2.1.0 to
                               be installed. The
                               commit MUST be
                               signed and the
                               public key MUST
                               be trusted in the
                               GPG trustdb.
      version                # What version of the repository to check out.
                               This can be the
                               the literal
                               string `HEAD', a
                               branch name, a
                               tag name. It can
                               also be a `SHA-1'
                               hash, in which
                               case `refspec'
                               needs to be
                               specified if the
                               given revision is
                               not already
                               available.
- name: Read and write git configuration
  action: git_config
      list_all               # List all settings (optionally limited to a given
                               `scope')
      name                   # The name of the setting. If no value is
                               supplied, the
                               value will be
                               read from the
                               config if it has
                               been set.
      repo                   # Path to a git repository for reading and writing
                               values from a
                               specific repo.
      scope                  # Specify which scope to read/set values from.
                               This is required
                               when setting
                               config values. If
                               this is set to
                               local, you must
                               also specify the
                               repo parameter.
                               It defaults to
                               system only when
                               not using
                               `list_all'=yes.
      value                  # When specifying the name of a single setting,
                               supply a value to
                               set that setting
                               to the given
                               value.
- name: Manages github service hooks.
  action: github_hooks
      action=                # This tells the githooks module what you want it
                               to do.
      content_type           # Content type to use for requests made to the
                               webhook
      hookurl                # When creating a new hook, this is the url that
                               you want github
                               to post to. It is
                               only required
                               when creating a
                               new hook.
      oauthkey=              # The oauth key provided by github. It can be
                               found/generated
                               on github under
                               "Edit Your
                               Profile" >>
                               "Applications" >>
                               "Personal Access
                               Tokens"
      repo=                  # This is the API url for the repository you want
                               to manage hooks
                               for. It should be
                               in the form of: h
                               ttps://api.github
                               .com/repos/user:/
                               repo:. Note this
                               is different than
                               the normal repo
                               url.
      user=                  # Github username.
      validate_certs         # If `no', SSL certificates for the target repo
                               will not be
                               validated. This
                               should only be
                               used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
- name: Manage GitHub access keys.
  action: github_key
      force                  # The default is `yes', which will replace the
                               existing remote
                               key if it's
                               different than
                               `pubkey'. If
                               `no', the key
                               will only be set
                               if no key with
                               the given `name'
                               exists.
      name=                  # SSH key name
      pubkey                 # SSH public key value. Required when
                               `state=present'.
      state                  # Whether to remove a key, ensure that it exists,
                               or update its
                               value.
      token=                 # GitHub Access Token with permission to list and
                               create public
                               keys.
- name: Interact with GitHub Releases
  action: github_release
      action=                # Action to perform
      repo=                  # Repository name
      token=                 # Github Personal Access Token for authenticating
      user=                  # The GitHub account that owns the repository
- name: Creates/updates/deletes Gitlab Groups
  action: gitlab_group
      login_password         # Gitlab password for login_user
      login_token            # Gitlab token for logging in.
      login_user             # Gitlab user name.
      name=                  # Name of the group you want to create.
      path                   # The path of the group you want to create, this
                               will be server_ur
                               l/group_path If
                               not supplied, the
                               group_name will
                               be used.
      server_url=            # Url of Gitlab server, with protocol (http or
                               https).
      state                  # create or delete group. Possible values are
                               present and
                               absent.
      validate_certs         # When using https if SSL certificate needs to be
                               verified.
- name: Creates/updates/deletes Gitlab Projects
  action: gitlab_project
      description            # An description for the project.
      group                  # The name of the group of which this projects
                               belongs to. When
                               not provided,
                               project will
                               belong to user
                               which is
                               configured in
                               'login_user' or
                               'login_token'
                               When provided
                               with username,
                               project will be
                               created for this
                               user.
                               'login_user' or
                               'login_token'
                               needs admin
                               rights.
      import_url             # Git repository which will me imported into
                               gitlab. Gitlab
                               server needs read
                               access to this
                               git repository.
      issues_enabled         # Whether you want to create issues or not.
                               Possible values
                               are true and
                               false.
      login_password         # Gitlab password for login_user
      login_token            # Gitlab token for logging in.
      login_user             # Gitlab user name.
      merge_requests_enabled   # If merge requests can be made or not. Possible
                               values are true
                               and false.
      name=                  # The name of the project
      path                   # The path of the project you want to create, this
                               will be server_ur
                               l/<group>/path If
                               not supplied,
                               name will be
                               used.
      public                 # If the project is public available or not.
                               Setting this to
                               true is same as
                               setting
                               visibility_level
                               to 20. Possible
                               values are true
                               and false.
      server_url=            # Url of Gitlab server, with protocol (http or
                               https).
      snippets_enabled       # If creating snippets should be available or not.
                               Possible values
                               are true and
                               false.
      state                  # create or delete project. Possible values are
                               present and
                               absent.
      validate_certs         # When using https if SSL certificate needs to be
                               verified.
      visibility_level       # Private. visibility_level is 0. Project access
                               must be granted
                               explicitly for
                               each user.
                               Internal.
                               visibility_level
                               is 10. The
                               project can be
                               cloned by any
                               logged in user.
                               Public.
                               visibility_level
                               is 20. The
                               project can be
                               cloned without
                               any
                               authentication.
                               Possible values
                               are 0, 10 and 20.
      wiki_enabled           # If an wiki for this project should be available
                               or not. Possible
                               values are true
                               and false.
- name: Creates/updates/deletes Gitlab Users
  action: gitlab_user
      access_level           # The access level to the group. One of the
                               following can be
                               used. guest
                               reporter
                               developer master
                               owner
      email=                 # The email that belongs to the user.
      group                  # Add user as an member to this group.
      login_password         # Gitlab password for login_user
      login_token            # Gitlab token for logging in.
      login_user             # Gitlab user name.
      name=                  # Name of the user you want to create
      password=              # The password of the user.
      server_url=            # Url of Gitlab server, with protocol (http or
                               https).
      sshkey_file            # The ssh key itself.
      sshkey_name            # The name of the sshkey
      state                  # create or delete group. Possible values are
                               present and
                               absent.
      username=              # The username of the user.
      validate_certs         # When using https if SSL certificate needs to be
                               verified.
- name: Manage GlusterFS volumes
  action: gluster_volume
      bricks                 # Brick paths on servers. Multiple brick paths can
                               be separated by
                               commas
      cluster                # List of hosts to use for probing and brick setup
      directory              # Directory for limit-usage
      disperses              # Disperse count for volume
      force                  # If brick is being created in the root partition,
                               module will fail.
                               Set force to true
                               to override this
                               behaviour
      host                   # Override local hostname (for peer probing
                               purposes)
      name=                  # The volume name
      options                # A dictionary/hash with options/settings for the
                               volume
      quota                  # Quota value for limit-usage (be sure to use
                               10.0MB instead of
                               10MB, see quota
                               list)
      rebalance              # Controls whether the cluster is rebalanced after
                               changes
      redundancies           # Redundancy count for volume
      replicas               # Replica count for volume
      start_on_create        # Controls whether the volume is started after
                               creation or not,
                               defaults to yes
      state=                 # Use present/absent ensure if a volume exists or
                               not, use
                               started/stopped
                               to control it's
                               availability.
      stripes                # Stripe count for volume
      transport              # Transport type for volume
- name: Add or remove groups
  action: group
      gid                    # Optional `GID' to set for the group.
      name=                  # Name of the group to manage.
      state                  # Whether the group should be present or not on
                               the remote host.
      system                 # If `yes', indicates that the group created is a
                               system group.
- name: Create Ansible groups based on facts
  action: group_by
      key=                   # The variables whose values will be used as
                               groups
- name: Sends a notification to a grove.io channel
  action: grove
      channel_token=         # Token of the channel to post to.
      icon_url               # Icon for the service
      message=               # Message content
      service                # Name of the service (displayed as the "user" in
                               the message)
      url                    # Service URL for the web client
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
- name: Send notification to Hall
  action: hall
      msg=                   # The message you wish to deliver as a notifcation
      picture                # The full URL to the image you wish to use for
                               the Icon of the
                               message. Defaults
                               to http://cdn2.hu
                               bspot.net/hub/330
                               046/file-76907821
                               0-png/Official_Lo
                               gos/ansible_logo_
                               black_square_smal
                               l.png?t=142107612
                               8627
      room_token=            # Room token provided to you by setting up the
                               Ansible room
                               integation on
                               https://hall.com
      title=                 # The title of the message
- name: Enable, disable, and set weights for HAProxy backend servers using socket commands.
  action: haproxy
      backend                # Name of the HAProxy backend pool.
      fail_on_not_found      # Fail whenever trying to enable/disable a backend
                               host that does
                               not exist
      host=                  # Name of the backend host to change.
      shutdown_sessions      # When disabling a server, immediately terminate
                               all the sessions
                               attached to the
                               specified server.
                               This can be used
                               to terminate
                               long-running
                               sessions after a
                               server is put
                               into maintenance
                               mode.
      socket                 # Path to the HAProxy socket file.
      state=                 # Desired state of the provided backend host.
      wait                   # Wait until the server reports a status of 'UP'
                               when
                               `state=enabled`,
                               or status of
                               'MAINT' when
                               `state=disabled`.
      wait_interval          # Number of seconds to wait between retries.
      wait_retries           # Number of times to check for status after
                               changing the
                               state.
      weight                 # The value passed in argument. If the value ends
                               with the `%`
                               sign, then the
                               new weight will
                               be relative to
                               the initially
                               configured
                               weight. Relative
                               weights are only
                               permitted between
                               0 and 100% and
                               absolute weights
                               are permitted
                               between 0 and
                               256.
- name: Manages Mercurial (hg) repositories.
  action: hg
      clone                  # If `no', do not clone the repository if it does
                               not exist
                               locally.
      dest=                  # Absolute path of where the repository should be
                               cloned to. This
                               parameter is
                               required, unless
                               clone and update
                               are set to no
      executable             # Path to hg executable to use. If not supplied,
                               the normal
                               mechanism for
                               resolving binary
                               paths will be
                               used.
      force                  # Discards uncommitted changes. Runs `hg update
                               -C'.  Prior to
                               1.9, the default
                               was `yes`.
      purge                  # Deletes untracked files. Runs `hg purge'.
      repo=                  # The repository address.
      revision               # Equivalent `-r' option in hg command which could
                               be the changeset,
                               revision number,
                               branch name or
                               even tag.
      update                 # If `no', do not retrieve new revisions from the
                               origin repository
- name: Send a message to hipchat.
  action: hipchat
      api                    # API url if using a self-hosted hipchat server.
                               For hipchat api
                               version 2 use
                               `/v2' path in URI
      color                  # Background color for the message. Default is
                               yellow.
      from                   # Name the message will appear be sent from. max
                               15 characters.
                               Over 15, will be
                               shorten.
      msg=                   # The message body.
      msg_format             # message format. html or text. Default is text.
      notify                 # notify or not (change the tab color, play a
                               sound, etc)
      room=                  # ID or name of the room.
      token=                 # API token.
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
- name: Package manager for Homebrew
  action: homebrew
      install_options        # options flags to install a package
      name                   # name of package to install/remove
      path                   # ':' separated list of paths to search for 'brew'
                               executable. Since
                               A package
                               (`formula' in
                               homebrew
                               parlance)
                               location is
                               prefixed relative
                               to the actual
                               path of `brew'
                               command,
                               providing an
                               alternative
                               `brew' path
                               enables managing
                               different set of
                               packages in an
                               alternative
                               location in the
                               system.
      state                  # state of the package
      update_homebrew        # update homebrew itself first
      upgrade_all            # upgrade all homebrew packages
- name: Install/uninstall homebrew casks.
  action: homebrew_cask
      install_options        # options flags to install a package
      name=                  # name of cask to install/remove
      path                   # ':' separated list of paths to search for 'brew'
                               executable.
      state                  # state of the cask
      update_homebrew        # update homebrew itself first. Note that `brew
                               cask update' is a
                               synonym for `brew
                               update'.
- name: Tap a Homebrew repository.
  action: homebrew_tap
      name=                  # The GitHub user/organization repository to tap.
      state                  # state of the repository.
      url                    # The optional git URL of the repository to tap.
                               The URL is not
                               assumed to be on
                               GitHub, and the
                               protocol doesn't
                               have to be HTTP.
                               Any location and
                               protocol that git
                               can handle is
                               fine.
- name: Notify Honeybadger.io about app deployments
  action: honeybadger_deployment
      environment=           # The environment name, typically 'production',
                               'staging', etc.
      repo                   # URL of the project repository
      revision               # A hash, number, tag, or other identifier showing
                               what revision was
                               deployed
      token=                 # API token.
      url                    # Optional URL to submit the notification to.
      user                   # The username of the person doing the deployment
      validate_certs         # If `no', SSL certificates for the target url
                               will not be
                               validated. This
                               should only be
                               used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
- name: Manage hostname
  action: hostname
      name=                  # Name of the host
- name: manage user files for basic authentication
  action: htpasswd
      create                 # Used with `state=present'. If specified, the
                               file will be
                               created if it
                               does not already
                               exist. If set to
                               "no", will fail
                               if the file does
                               not exist
      crypt_scheme           # Encryption scheme to be used.  As well as the
                               four choices
                               listed here, you
                               can also use any
                               other hash
                               supported by
                               passlib, such as
                               md5_crypt and
                               sha256_crypt,
                               which are linux
                               passwd hashes.
                               If you do so the
                               password file
                               will not be
                               compatible with
                               Apache or Nginx
      name=                  # User name to add or remove
      password               # Password associated with user. Must be specified
                               if user does not
                               exist yet.
      path=                  # Path to the file that contains the usernames and
                               passwords
      state                  # Whether the user entry should be present or not
- name: Manage IAM users, groups, roles and keys
  action: iam
      access_key_ids         # A list of the keys that you want impacted by the
                               access_key_state
                               parameter.
      access_key_state       # When type is user, it creates, removes,
                               deactivates or
                               activates a
                               user's access
                               key(s). Note that
                               actions apply
                               only to keys
                               specified.
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      groups                 # A list of groups the user should belong to. When
                               update, will
                               gracefully remove
                               groups not
                               listed.
      iam_type=              # Type of IAM resource
      key_count              # When access_key_state is create it will ensure
                               this quantity of
                               keys are present.
                               Defaults to 1.
      name=                  # Name of IAM resource to create or identify
      new_name               # When state is update, will replace name with
                               new_name on IAM
                               resource
      new_path               # When state is update, will replace the path with
                               new_path on the
                               IAM resource
      password               # When type is user and state is present, define
                               the users login
                               password. Also
                               works with
                               update. Note that
                               always returns
                               changed.
      path                   # When creating or updating, specify the desired
                               path of the
                               resource. If
                               state is present,
                               it will replace
                               the current path
                               to match what is
                               passed in when
                               they do not
                               match.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state=                 # Whether to create, delete or update the IAM
                               resource. Note,
                               roles cannot be
                               updated.
      trust_policy           # The inline (JSON or YAML) trust policy document
                               that grants an
                               entity permission
                               to assume the
                               role. Mutually
                               exclusive with `t
                               rust_policy_filep
                               ath'.
      trust_policy_filepath   # The path to the trust policy document that
                               grants an entity
                               permission to
                               assume the role.
                               Mutually
                               exclusive with
                               `trust_policy'.
      update_password        # `always' will update passwords if they differ.
                               `on_create' will
                               only set the
                               password for
                               newly created
                               users.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: Manage server certificates for use on ELBs and CloudFront
  action: iam_cert
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      cert                   # The path to the certificate body in PEM encoded
                               format.
      cert_chain             # The path to the CA certificate chain in PEM
                               encoded format.
      dup_ok                 # By default the module will not upload a
                               certificate that
                               is already
                               uploaded into
                               AWS. If set to
                               True, it will
                               upload the
                               certificate as
                               long as the name
                               is unique.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      key                    # The path to the private key of the certificate
                               in PEM encoded
                               format.
      name=                  # Name of certificate to add, update or remove.
      new_name               # When present, this will update the name of the
                               cert with the
                               value passed
                               here.
      new_path               # When present, this will update the path of the
                               cert with the
                               value passed
                               here.
      path                   # When creating or updating, specify the desired
                               path of the
                               certificate
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state=                 # Whether to create, delete certificate. When
                               present is
                               specified it will
                               attempt to make
                               an update if
                               new_path or
                               new_name is
                               specified.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: List the MFA (Multi-Factor Authentication) devices registered for a user
  action: iam_mfa_device_facts
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      user_name              # The name of the user whose MFA devices will be
                               listed
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: Manage IAM policies for users, groups, and roles
  action: iam_policy
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      iam_name=              # Name of IAM resource you wish to target for
                               policy actions.
                               In other words,
                               the user name,
                               group name or
                               role name.
      iam_type=              # Type of IAM resource
      policy_document        # The path to the properly json formatted policy
                               file (mutually
                               exclusive with
                               `policy_json')
      policy_json            # A properly json formatted policy as string
                               (mutually
                               exclusive with `p
                               olicy_document',
                               see https://githu
                               b.com/ansible/ans
                               ible/issues/7005#
                               issuecomment-4289
                               4813 on how to
                               use it properly)
      policy_name=           # The name label for the policy to create or
                               remove.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      skip_duplicates        # By default the module looks for any policies
                               that match the
                               document you pass
                               in, if there is a
                               match it will not
                               make a new policy
                               object with the
                               same rules. You
                               can override this
                               by specifying
                               false which would
                               allow for two
                               policy objects
                               with different
                               names but same
                               rules.
      state=                 # Whether to create or delete the IAM policy.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: Retrieve the facts of a server certificate
  action: iam_server_certificate_facts
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      name=                  # The name of the server certificate you are
                               retrieving
                               attributes for.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: include a play or task list.
  action: include
      free-form              # This module allows you to specify the name of
                               the file directly
                               w/o any other
                               options.
- name: Load and execute a role
  action: include_role
      allow_duplicates       # Overrides the role's metadata setting to allow
                               using a role more
                               than once with
                               the same
                               parameters.
      defaults_from          # File to load from a Role's defaults/ directory.
      name=                  # The name of the role to be executed.
      private                # If True the variables from defaults/ and vars/
                               in a role will
                               not be made
                               available to the
                               rest of the play.
      tasks_from             # File to load from a Role's tasks/ directory.
      vars_from              # File to load from a Role's vars/ directory.
- name: Load variables from files, dynamically within a task.
  action: include_vars
      depth                  # By default, this module will recursively go
                               through each sub
                               directory and
                               load up the
                               variables. By
                               explicitly
                               setting the
                               depth, this
                               module will only
                               go as deep as the
                               depth.
      dir                    # The directory name from which the variables
                               should be loaded.
                               If the path is
                               relative, it will
                               look for the file
                               in vars/
                               subdirectory of a
                               role or relative
                               to playbook.
      file                   # The file name from which variables should be
                               loaded. If the
                               path is relative,
                               it will look for
                               the file in vars/
                               subdirectory of a
                               role or relative
                               to playbook.
      files_matching         # Limit the variables that are loaded within any
                               directory to this
                               regular
                               expression.
      free-form              # This module allows you to specify the 'file'
                               option directly
                               w/o any other
                               options.
      ignore_files           # List of file names to ignore. The defaults can
                               not be
                               overridden, but
                               can be extended.
      name                   # The name of a variable into which assign the
                               included vars, if
                               omitted (null)
                               they will be made
                               top level vars.
- name: Manage InfluxDB databases
  action: influxdb_database
      database_name=         # Name of the database that will be
                               created/destroyed
      hostname=              # The hostname or IP address on which InfluxDB
                               server is
                               listening
      password               # Password that will be used to authenticate
                               against InfluxDB
                               server
      port                   # The port on which InfluxDB server is listening
      state                  # Determines if the database should be created or
                               destroyed
      username               # Username that will be used to authenticate
                               against InfluxDB
                               server
- name: Manage InfluxDB retention policies
  action: influxdb_retention_policy
      database_name=         # Name of the database where retention policy will
                               be created
      default=               # Sets the retention policy as default retention
                               policy
      duration=              # Determines how long InfluxDB should keep the
                               data
      hostname=              # The hostname or IP address on which InfluxDB
                               server is
                               listening
      password               # Password that will be used to authenticate
                               against InfluxDB
                               server
      policy_name=           # Name of the retention policy
      port                   # The port on which InfluxDB server is listening
      replication=           # Determines how many independent copies of each
                               point are stored
                               in the cluster
      username               # Username that will be used to authenticate
                               against InfluxDB
                               server
- name: Tweak settings in INI files
  action: ini_file
      backup                 # Create a backup file including the timestamp
                               information so
                               you can get the
                               original file
                               back if you
                               somehow clobbered
                               it incorrectly.
      create                 # If set to 'no', the module will fail if the file
                               does not already
                               exist. By default
                               it will create
                               the file if it is
                               missing.
      dest=                  # Path to the INI-style file; this file is created
                               if required
      group                  # name of the group that should own the
                               file/directory,
                               as would be fed
                               to `chown'
      mode                   # mode the file or directory should be. For those
                               used to
                               `/usr/bin/chmod'
                               remember that
                               modes are
                               actually octal
                               numbers (like
                               0644). Leaving
                               off the leading
                               zero will likely
                               have unexpected
                               results. As of
                               version 1.8, the
                               mode may be
                               specified as a
                               symbolic mode
                               (for example,
                               `u+rwx' or
                               `u=rw,g=r,o=r').
      no_extra_spaces        # do not insert spaces before and after '=' symbol
      option                 # if set (required for changing a `value'), this
                               is the name of
                               the option. May
                               be omitted if
                               adding/removing a
                               whole `section'.
      others                 # all arguments accepted by the [file] module also
                               work here
      owner                  # name of the user that should own the
                               file/directory,
                               as would be fed
                               to `chown'
      section=               # Section name in INI file. This is added if
                               `state=present'
                               automatically
                               when a single
                               value is being
                               set.
      selevel                # level part of the SELinux file context. This is
                               the MLS/MCS
                               attribute,
                               sometimes known
                               as the `range'.
                               `_default'
                               feature works as
                               for `seuser'.
      serole                 # role part of SELinux file context, `_default'
                               feature works as
                               for `seuser'.
      setype                 # type part of SELinux file context, `_default'
                               feature works as
                               for `seuser'.
      seuser                 # user part of SELinux file context. Will default
                               to system policy,
                               if applicable. If
                               set to
                               `_default', it
                               will use the
                               `user' portion of
                               the policy if
                               available
      state                  # If set to `absent' the option or section will be
                               removed if
                               present instead
                               of created.
      unsafe_writes          # Normally this module uses atomic operations to
                               prevent data
                               corruption or
                               inconsistent
                               reads from the
                               target files,
                               sometimes systems
                               are configured or
                               just broken in
                               ways that prevent
                               this. One example
                               are docker
                               mounted files,
                               they cannot be
                               updated
                               atomically and
                               can only be done
                               in an unsafe
                               manner. This
                               boolean option
                               allows ansible to
                               fall back to
                               unsafe methods of
                               updating files
                               for those cases
                               in which you do
                               not have any
                               other choice. Be
                               aware that this
                               is subject to
                               race conditions
                               and can lead to
                               data corruption.
      value                  # the string value to be associated with an
                               `option'. May be
                               omitted when
                               removing an
                               `option'.
- name: Run commands on remote devices running Cisco IOS
  action: ios_command
      auth_pass              # Specifies the password to use if required to
                               enter privileged
                               mode on the
                               remote device.
                               If `authorize' is
                               false, then this
                               argument does
                               nothing. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_AUTH_PASS
                               will be used
                               instead.
      authorize              # Instructs the module to enter privileged mode on
                               the remote device
                               before sending
                               any commands.  If
                               not specified,
                               the device will
                               attempt to
                               execute all
                               commands in non-
                               privileged mode.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable ANSIBLE_
                               NET_AUTHORIZE
                               will be used
                               instead.
      commands=              # List of commands to send to the remote ios
                               device over the
                               configured
                               provider. The
                               resulting output
                               from the command
                               is returned. If
                               the `wait_for'
                               argument is
                               provided, the
                               module is not
                               returned until
                               the condition is
                               satisfied or the
                               number of retries
                               has expired.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      interval               # Configures the interval in seconds to wait
                               between retries
                               of the command.
                               If the command
                               does not pass the
                               specified
                               conditions, the
                               interval
                               indicates how
                               long to wait
                               before trying the
                               command again.
      match                  # The `match' argument is used in conjunction with
                               the `wait_for'
                               argument to
                               specify the match
                               policy.  Valid
                               values are `all'
                               or `any'.  If the
                               value is set to
                               `all' then all
                               conditionals in
                               the wait_for must
                               be satisfied.  If
                               the value is set
                               to `any' then
                               only one of the
                               values must be
                               satisfied.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.   The
                               value of
                               `password' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_PASSWORD will
                               be used instead.
      port                   # Specifies the port to use when buiding the
                               connection to the
                               remote. device.
      provider               # Convience method that allows all [ios] arguments
                               to be passed as a
                               dict object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      retries                # Specifies the number of retries a command should
                               by tried before
                               it is considered
                               failed. The
                               command is run on
                               the target device
                               every retry and
                               evaluated against
                               the `wait_for'
                               conditions.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               The value of
                               `ssh_keyfile' is
                               the path to the
                               key used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_SSH_KEYFILE
                               will be used
                               instead.
      timeout                # Specifies idle timeout for the connection.
                               Useful if the
                               console freezes
                               before
                               continuing. For
                               example when
                               saving
                               configurations.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_USERNAME will
                               be used instead.
      wait_for               # List of conditions to evaluate against the
                               output of the
                               command. The task
                               will wait for
                               each condition to
                               be true before
                               moving forward.
                               If the
                               conditional is
                               not true within
                               the configured
                               number of
                               retries, the task
                               fails. See
                               examples.
- name: Manage Cisco IOS configuration sections
  action: ios_config
      after                  # The ordered set of commands to append to the end
                               of the command
                               stack if a change
                               needs to be made.
                               Just like with
                               `before' this
                               allows the
                               playbook designer
                               to append a set
                               of commands to be
                               executed after
                               the command set.
      auth_pass              # Specifies the password to use if required to
                               enter privileged
                               mode on the
                               remote device.
                               If `authorize' is
                               false, then this
                               argument does
                               nothing. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_AUTH_PASS
                               will be used
                               instead.
      authorize              # Instructs the module to enter privileged mode on
                               the remote device
                               before sending
                               any commands.  If
                               not specified,
                               the device will
                               attempt to
                               execute all
                               commands in non-
                               privileged mode.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable ANSIBLE_
                               NET_AUTHORIZE
                               will be used
                               instead.
      backup                 # This argument will cause the module to create a
                               full backup of
                               the current
                               `running-config'
                               from the remote
                               device before any
                               changes are made.
                               The backup file
                               is written to the
                               `backup' folder
                               in the playbook
                               root directory.
                               If the directory
                               does not exist,
                               it is created.
      before                 # The ordered set of commands to push on to the
                               command stack if
                               a change needs to
                               be made.  This
                               allows the
                               playbook designer
                               the opportunity
                               to perform
                               configuration
                               commands prior to
                               pushing any
                               changes without
                               affecting how the
                               set of commands
                               are matched
                               against the
                               system.
      config                 # The `config' argument allows the playbook
                               designer to
                               supply the base
                               configuration to
                               be used to
                               validate
                               configuration
                               changes
                               necessary.  If
                               this argument is
                               provided, the
                               module will not
                               download the
                               running-config
                               from the remote
                               node.
      defaults               # This argument specifies whether or not to
                               collect all
                               defaults when
                               getting the
                               remote device
                               running config.
                               When enabled, the
                               module will get
                               the current
                               config by issuing
                               the command `show
                               running-config
                               all'.
      force                  # The force argument instructs the module to not
                               consider the
                               current devices
                               running-config.
                               When set to true,
                               this will cause
                               the module to
                               push the contents
                               of `src' into the
                               device without
                               first checking if
                               already
                               configured. Note
                               this argument
                               should be
                               considered
                               deprecated.  To
                               achieve the
                               equivalent, set
                               the `match=none'
                               which is
                               idempotent.  This
                               argument will be
                               removed in a
                               future release.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      lines                  # The ordered set of commands that should be
                               configured in the
                               section.  The
                               commands must be
                               the exact same
                               commands as found
                               in the device
                               running-config.
                               Be sure to note
                               the configuration
                               command syntax as
                               some commands are
                               automatically
                               modified by the
                               device config
                               parser.
      match                  # Instructs the module on the way to perform the
                               matching of the
                               set of commands
                               against the
                               current device
                               config.  If match
                               is set to `line',
                               commands are
                               matched line by
                               line.  If match
                               is set to
                               `strict', command
                               lines are matched
                               with respect to
                               position.  If
                               match is set to
                               `exact', command
                               lines must be an
                               equal match.
                               Finally, if match
                               is set to `none',
                               the module will
                               not attempt to
                               compare the
                               source
                               configuration
                               with the running
                               configuration on
                               the remote
                               device.
      parents                # The ordered set of parents that uniquely
                               identify the
                               section the
                               commands should
                               be checked
                               against.  If the
                               parents argument
                               is omitted, the
                               commands are
                               checked against
                               the set of top
                               level or global
                               commands.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.   The
                               value of
                               `password' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_PASSWORD will
                               be used instead.
      port                   # Specifies the port to use when buiding the
                               connection to the
                               remote. device.
      provider               # Convience method that allows all [ios] arguments
                               to be passed as a
                               dict object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      replace                # Instructs the module on the way to perform the
                               configuration on
                               the device.  If
                               the replace
                               argument is set
                               to `line' then
                               the modified
                               lines are pushed
                               to the device in
                               configuration
                               mode.  If the
                               replace argument
                               is set to `block'
                               then the entire
                               command block is
                               pushed to the
                               device in
                               configuration
                               mode if any line
                               is not correct.
      save                   # The `save' argument instructs the module to save
                               the running-
                               config to the
                               startup-config at
                               the conclusion of
                               the module
                               running.  If
                               check mode is
                               specified, this
                               argument is
                               ignored.
      src                    # Specifies the source path to the file that
                               contains the
                               configuration or
                               configuration
                               template to load.
                               The path to the
                               source file can
                               either be the
                               full path on the
                               Ansible control
                               host or a
                               relative path
                               from the playbook
                               or role root
                               directory.  This
                               argument is
                               mutually
                               exclusive with
                               `lines'.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               The value of
                               `ssh_keyfile' is
                               the path to the
                               key used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_SSH_KEYFILE
                               will be used
                               instead.
      timeout                # Specifies idle timeout for the connection.
                               Useful if the
                               console freezes
                               before
                               continuing. For
                               example when
                               saving
                               configurations.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_USERNAME will
                               be used instead.
- name: Collect facts from remote devices running IOS
  action: ios_facts
      auth_pass              # Specifies the password to use if required to
                               enter privileged
                               mode on the
                               remote device.
                               If `authorize' is
                               false, then this
                               argument does
                               nothing. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_AUTH_PASS
                               will be used
                               instead.
      authorize              # Instructs the module to enter privileged mode on
                               the remote device
                               before sending
                               any commands.  If
                               not specified,
                               the device will
                               attempt to
                               execute all
                               commands in non-
                               privileged mode.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable ANSIBLE_
                               NET_AUTHORIZE
                               will be used
                               instead.
      gather_subset          # When supplied, this argument will restrict the
                               facts collected
                               to a given
                               subset.  Possible
                               values for this
                               argument include
                               all, hardware,
                               config, and
                               interfaces.  Can
                               specify a list of
                               values to include
                               a larger subset.
                               Values can also
                               be used with an
                               initial `[!]' to
                               specify that a
                               specific subset
                               should not be
                               collected.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.   The
                               value of
                               `password' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_PASSWORD will
                               be used instead.
      port                   # Specifies the port to use when buiding the
                               connection to the
                               remote. device.
      provider               # Convience method that allows all [ios] arguments
                               to be passed as a
                               dict object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               The value of
                               `ssh_keyfile' is
                               the path to the
                               key used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_SSH_KEYFILE
                               will be used
                               instead.
      timeout                # Specifies idle timeout for the connection.
                               Useful if the
                               console freezes
                               before
                               continuing. For
                               example when
                               saving
                               configurations.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_USERNAME will
                               be used instead.
- name: Run commands on remote devices running Cisco iosxr
  action: iosxr_command
      commands=              # List of commands to send to the remote iosxr
                               device over the
                               configured
                               provider. The
                               resulting output
                               from the command
                               is returned. If
                               the `wait_for'
                               argument is
                               provided, the
                               module is not
                               returned until
                               the condition is
                               satisfied or the
                               number of retries
                               has expired.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      interval               # Configures the interval in seconds to wait
                               between retries
                               of the command.
                               If the command
                               does not pass the
                               specified
                               conditions, the
                               interval
                               indicates how
                               long to wait
                               before trying the
                               command again.
      match                  # The `match' argument is used in conjunction with
                               the `wait_for'
                               argument to
                               specify the match
                               policy.  Valid
                               values are `all'
                               or `any'.  If the
                               value is set to
                               `all' then all
                               conditionals in
                               the wait_for must
                               be satisfied.  If
                               the value is set
                               to `any' then
                               only one of the
                               values must be
                               satisfied.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.   The
                               value of
                               `password' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
      provider               # Convenience method that allows all `iosxr'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      retries                # Specifies the number of retries a command should
                               by tried before
                               it is considered
                               failed. The
                               command is run on
                               the target device
                               every retry and
                               evaluated against
                               the `wait_for'
                               conditions.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               The value of
                               `ssh_keyfile' is
                               the path to the
                               key used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
      wait_for               # List of conditions to evaluate against the
                               output of the
                               command. The task
                               will wait for
                               each condition to
                               be true before
                               moving forward.
                               If the
                               conditional is
                               not true within
                               the configured
                               number of
                               retries, the task
                               fails. See
                               examples.
- name: Manage Cisco IOS XR configuration sections
  action: iosxr_config
      after                  # The ordered set of commands to append to the end
                               of the command
                               stack if a change
                               needs to be made.
                               Just like with
                               `before' this
                               allows the
                               playbook designer
                               to append a set
                               of commands to be
                               executed after
                               the command set.
      backup                 # This argument will cause the module to create a
                               full backup of
                               the current
                               `running-config'
                               from the remote
                               device before any
                               changes are made.
                               The backup file
                               is written to the
                               `backup' folder
                               in the playbook
                               root directory.
                               If the directory
                               does not exist,
                               it is created.
      before                 # The ordered set of commands to push on to the
                               command stack if
                               a change needs to
                               be made.  This
                               allows the
                               playbook designer
                               the opportunity
                               to perform
                               configuration
                               commands prior to
                               pushing any
                               changes without
                               affecting how the
                               set of commands
                               are matched
                               against the
                               system.
      comment                # Allows a commit description to be specified to
                               be included when
                               the configuration
                               is committed.  If
                               the configuration
                               is not changed or
                               committed, this
                               argument is
                               ignored.
      config                 # The module, by default, will connect to the
                               remote device and
                               retrieve the
                               current running-
                               config to use as
                               a base for
                               comparing against
                               the contents of
                               source.  There
                               are times when it
                               is not desirable
                               to have the task
                               get the current
                               running-config
                               for every task in
                               a playbook.  The
                               `config' argument
                               allows the
                               implementer to
                               pass in the
                               configuration to
                               use as the base
                               config for
                               comparison.
      force                  # The force argument instructs the module to not
                               consider the
                               current devices
                               running-config.
                               When set to true,
                               this will cause
                               the module to
                               push the contents
                               of `src' into the
                               device without
                               first checking if
                               already
                               configured. Note
                               this argument
                               should be
                               considered
                               deprecated.  To
                               achieve the
                               equivalent, set
                               the `match=none'
                               which is
                               idempotent.  This
                               argument will be
                               removed in a
                               future release.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      lines                  # The ordered set of commands that should be
                               configured in the
                               section.  The
                               commands must be
                               the exact same
                               commands as found
                               in the device
                               running-config.
                               Be sure to note
                               the configuration
                               command syntax as
                               some commands are
                               automatically
                               modified by the
                               device config
                               parser.
      match                  # Instructs the module on the way to perform the
                               matching of the
                               set of commands
                               against the
                               current device
                               config.  If match
                               is set to `line',
                               commands are
                               matched line by
                               line.  If match
                               is set to
                               `strict', command
                               lines are matched
                               with respect to
                               position.  If
                               match is set to
                               `exact', command
                               lines must be an
                               equal match.
                               Finally, if match
                               is set to `none',
                               the module will
                               not attempt to
                               compare the
                               source
                               configuration
                               with the running
                               configuration on
                               the remote
                               device.
      parents                # The ordered set of parents that uniquely
                               identify the
                               section the
                               commands should
                               be checked
                               against.  If the
                               parents argument
                               is omitted, the
                               commands are
                               checked against
                               the set of top
                               level or global
                               commands.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.   The
                               value of
                               `password' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
      provider               # Convenience method that allows all `iosxr'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      replace                # Instructs the module on the way to perform the
                               configuration on
                               the device.  If
                               the replace
                               argument is set
                               to `line' then
                               the modified
                               lines are pushed
                               to the device in
                               configuration
                               mode.  If the
                               replace argument
                               is set to `block'
                               then the entire
                               command block is
                               pushed to the
                               device in
                               configuration
                               mode if any line
                               is not correct.
      src                    # Specifies the source path to the file that
                               contains the
                               configuration or
                               configuration
                               template to load.
                               The path to the
                               source file can
                               either be the
                               full path on the
                               Ansible control
                               host or a
                               relative path
                               from the playbook
                               or role root
                               directory.  This
                               argument is
                               mutually
                               exclusive with
                               `lines'.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               The value of
                               `ssh_keyfile' is
                               the path to the
                               key used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Collect facts from remote devices running IOS-XR
  action: iosxr_facts
      gather_subset          # When supplied, this argument will restrict the
                               facts collected
                               to a given
                               subset.  Possible
                               values for this
                               argument include
                               all, hardware,
                               config, and
                               interfaces.  Can
                               specify a list of
                               values to include
                               a larger subset.
                               Values can also
                               be used with an
                               initial `[!]' to
                               specify that a
                               specific subset
                               should not be
                               collected.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.   The
                               value of
                               `password' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
      provider               # Convenience method that allows all `iosxr'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               The value of
                               `ssh_keyfile' is
                               the path to the
                               key used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Manage IP interfaces  on Solaris/illumos systems.
  action: ipadm_if
      name=                  # IP interface name.
      state                  # Create or delete Solaris/illumos IP interfaces.
      temporary              # Specifies that the IP interface is temporary.
                               Temporary IP
                               interfaces do not
                               persist across
                               reboots.
- name: Manage protocol properties on Solaris/illumos systems.
  action: ipadm_prop
      property=              # Specifies the name of property we want to
                               manage.
      protocol=              # Specifies the procotol for which we want to
                               manage
                               properties.
      state                  # Set or reset the property value.
      temporary              # Specifies that the property value is temporary.
                               Temporary
                               property values
                               do not persist
                               across reboots.
      value                  # Specifies the value we want to set for the
                               property.
- name: Retrieve the public IP of your internet gateway.
  action: ipify_facts
      api_url                # URL of the ipify.org API service. `?format=json'
                               will be appended
                               per default.
- name: Management of order of boot devices
  action: ipmi_boot
      bootdev=               # Set boot device to use on next reboot
      name=                  # Hostname or ip address of the BMC.
      password=              # Password to connect to the BMC.
      persistent             # If set, ask that system firmware uses this
                               device beyond
                               next boot. Be
                               aware many
                               systems do not
                               honor this.
      port                   # Remote RMCP port.
      state                  # Whether to ensure that boot devices is desired.
      uefiboot               # If set, request UEFI boot explicitly. Strictly
                               speaking, the
                               spec suggests
                               that if not set,
                               the system should
                               BIOS boot and
                               offers no "don't
                               care" option. In
                               practice, this
                               flag not being
                               set does not
                               preclude UEFI
                               boot on any
                               system I've
                               encountered.
      user=                  # Username to use to connect to the BMC.
- name: Power management for machine
  action: ipmi_power
      name=                  # Hostname or ip address of the BMC.
      password=              # Password to connect to the BMC.
      port                   # Remote RMCP port.
      state=                 # Whether to ensure that the machine in desired
                               state.
      timeout                # Maximum number of seconds before interrupt
                               request.
      user=                  # Username to use to connect to the BMC.
- name: Modify the systems iptables
  action: iptables
      action                 # Whether the rule should be appended at the
                               bottom or
                               inserted at the
                               top. If the rule
                               already exists
                               the chain won't
                               be modified.
      chain                  # Chain to operate on. This option can either be
                               the name of a
                               user defined
                               chain or any of
                               the builtin
                               chains: 'INPUT',
                               'FORWARD',
                               'OUTPUT',
                               'PREROUTING',
                               'POSTROUTING',
                               'SECMARK',
                               'CONNSECMARK'.
      comment                # This specifies a comment that will be added to
                               the rule
      ctstate                # ctstate is a list of the connection states to
                               match in the
                               conntrack module.
                               Possible states
                               are: 'INVALID',
                               'NEW',
                               'ESTABLISHED',
                               'RELATED',
                               'UNTRACKED',
                               'SNAT', 'DNAT'
      destination            # Destination specification. Address can be either
                               a network name, a
                               hostname, a
                               network IP
                               address (with
                               /mask), or a
                               plain IP address.
                               Hostnames will be
                               resolved once
                               only, before the
                               rule is submitted
                               to the kernel.
                               Please note that
                               specifying any
                               name to be
                               resolved with a
                               remote query such
                               as DNS is a
                               really bad idea.
                               The mask can be
                               either a network
                               mask or a plain
                               number,
                               specifying the
                               number of 1's at
                               the left side of
                               the network mask.
                               Thus, a mask of
                               24 is equivalent
                               to 255.255.255.0.
                               A "!" argument
                               before the
                               address
                               specification
                               inverts the sense
                               of the address.
      destination_port       # Destination port or port range specification.
                               This can either
                               be a service name
                               or a port number.
                               An inclusive
                               range can also be
                               specified, using
                               the format
                               first:last. If
                               the first port is
                               omitted, '0' is
                               assumed; if the
                               last is omitted,
                               '65535' is
                               assumed. If the
                               first port is
                               greater than the
                               second one they
                               will be swapped.
      flush                  # Flushes the specified table and chain of all
                               rules. If no
                               chain is
                               specified then
                               the entire table
                               is purged.
                               Ignores all other
                               parameters.
      fragment               # This means that the rule only refers to second
                               and further
                               fragments of
                               fragmented
                               packets. Since
                               there is no way
                               to tell the
                               source or
                               destination ports
                               of such a packet
                               (or ICMP type),
                               such a packet
                               will not match
                               any rules which
                               specify them.
                               When the "!"
                               argument precedes
                               fragment
                               argument, the
                               rule will only
                               match head
                               fragments, or
                               unfragmented
                               packets.
      goto                   # This specifies that the processing should
                               continue in a
                               user specified
                               chain. Unlike the
                               jump argument
                               return will not
                               continue
                               processing in
                               this chain but
                               instead in the
                               chain that called
                               us via jump.
      icmp_type              # This allows specification of the ICMP type,
                               which can be a
                               numeric ICMP
                               type, type/code
                               pair, or one of
                               the ICMP type
                               names shown by
                               the command
                               'iptables -p icmp
                               -h'
      in_interface           # Name of an interface via which a packet was
                               received (only
                               for packets
                               entering the
                               INPUT, FORWARD
                               and PREROUTING
                               chains). When the
                               "!" argument is
                               used before the
                               interface name,
                               the sense is
                               inverted. If the
                               interface name
                               ends in a "+",
                               then any
                               interface which
                               begins with this
                               name will match.
                               If this option is
                               omitted, any
                               interface name
                               will match.
      ip_version             # Which version of the IP protocol this rule
                               should apply to.
      jump                   # This specifies the target of the rule; i.e.,
                               what to do if the
                               packet matches
                               it. The target
                               can be a user-
                               defined chain
                               (other than the
                               one this rule is
                               in), one of the
                               special builtin
                               targets which
                               decide the fate
                               of the packet
                               immediately, or
                               an extension (see
                               EXTENSIONS
                               below).  If this
                               option is omitted
                               in a rule (and
                               the goto
                               paramater is not
                               used), then
                               matching the rule
                               will have no
                               effect on the
                               packet's fate,
                               but the counters
                               on the rule will
                               be incremented.
      limit                  # Specifies the maximum average number of matches
                               to allow per
                               second. The
                               number can
                               specify units
                               explicitly, using
                               `/second',
                               `/minute',
                               `/hour' or
                               `/day', or parts
                               of them (so
                               `5/second' is the
                               same as `5/s').
      limit_burst            # Specifies the maximum burst before the above
                               limit kicks in.
      match                  # Specifies a match to use, that is, an extension
                               module that tests
                               for a specific
                               property. The set
                               of matches make
                               up the condition
                               under which a
                               target is
                               invoked. Matches
                               are evaluated
                               first to last if
                               specified as an
                               array and work in
                               short-circuit
                               fashion, i.e. if
                               one extension
                               yields false,
                               evaluation will
                               stop.
      out_interface          # Name of an interface via which a packet is going
                               to be sent (for
                               packets entering
                               the FORWARD,
                               OUTPUT and
                               POSTROUTING
                               chains). When the
                               "!" argument is
                               used before the
                               interface name,
                               the sense is
                               inverted. If the
                               interface name
                               ends in a "+",
                               then any
                               interface which
                               begins with this
                               name will match.
                               If this option is
                               omitted, any
                               interface name
                               will match.
      policy                 # Set the policy for the chain to the given
                               target. Valid
                               targets are
                               ACCEPT, DROP,
                               QUEUE, RETURN.
                               Only built in
                               chains can have
                               policies. This
                               parameter
                               requires the
                               chain parameter.
                               Ignores all other
                               parameters.
      protocol               # The protocol of the rule or of the packet to
                               check. The
                               specified
                               protocol can be
                               one of tcp, udp,
                               udplite, icmp,
                               esp, ah, sctp or
                               the special
                               keyword "all", or
                               it can be a
                               numeric value,
                               representing one
                               of these
                               protocols or a
                               different one. A
                               protocol name
                               from
                               /etc/protocols is
                               also allowed. A
                               "!" argument
                               before the
                               protocol inverts
                               the test.  The
                               number zero is
                               equivalent to
                               all. "all" will
                               match with all
                               protocols and is
                               taken as default
                               when this option
                               is omitted.
      reject_with            # Specifies the error packet type to return while
                               rejecting.
      set_counters           # This enables the administrator to initialize the
                               packet and byte
                               counters of a
                               rule (during
                               INSERT, APPEND,
                               REPLACE
                               operations).
      set_dscp_mark          # This allows specifying a DSCP mark to be added
                               to packets. It
                               takes either an
                               integer or hex
                               value. Mutually
                               exclusive with `s
                               et_dscp_mark_clas
                               s'.
      set_dscp_mark_class    # This allows specifying a predefined DiffServ
                               class which will
                               be translated to
                               the corresponding
                               DSCP mark.
                               Mutually
                               exclusive with
                               `set_dscp_mark'.
      source                 # Source specification. Address can be either a
                               network name, a
                               hostname, a
                               network IP
                               address (with
                               /mask), or a
                               plain IP address.
                               Hostnames will be
                               resolved once
                               only, before the
                               rule is submitted
                               to the kernel.
                               Please note that
                               specifying any
                               name to be
                               resolved with a
                               remote query such
                               as DNS is a
                               really bad idea.
                               The mask can be
                               either a network
                               mask or a plain
                               number,
                               specifying the
                               number of 1's at
                               the left side of
                               the network mask.
                               Thus, a mask of
                               24 is equivalent
                               to 255.255.255.0.
                               A "!" argument
                               before the
                               address
                               specification
                               inverts the sense
                               of the address.
      source_port            # Source port or port range specification. This
                               can either be a
                               service name or a
                               port number. An
                               inclusive range
                               can also be
                               specified, using
                               the format
                               first:last. If
                               the first port is
                               omitted, '0' is
                               assumed; if the
                               last is omitted,
                               '65535' is
                               assumed. If the
                               first port is
                               greater than the
                               second one they
                               will be swapped.
      state                  # Whether the rule should be absent or present.
      table                  # This option specifies the packet matching table
                               which the command
                               should operate
                               on. If the kernel
                               is configured
                               with automatic
                               module loading,
                               an attempt will
                               be made to load
                               the appropriate
                               module for that
                               table if it is
                               not already
                               there.
      to_destination         # This specifies a destination address to use with
                               DNAT: without
                               this, the
                               destination
                               address is never
                               altered.
      to_ports               # This specifies a destination port or range of
                               ports to use:
                               without this, the
                               destination port
                               is never altered.
                               This is only
                               valid if the rule
                               also specifies
                               one of the
                               following
                               protocols: tcp,
                               udp, dccp or
                               sctp.
      to_source              # This specifies a source address to use with
                               SNAT: without
                               this, the source
                               address is never
                               altered.
      uid_owner              # Specifies the UID or username to use in match by
                               owner rule.
- name: Send a message to an IRC channel
  action: irc
      channel=               # Channel name.  One of nick_to or channel needs
                               to be set.  When
                               both are set, the
                               message will be
                               sent to both of
                               them.
      color                  # Text color for the message. ("none" is a valid
                               option in 1.6 or
                               later, in 1.6 and
                               prior, the
                               default color is
                               black, not
                               "none"). Added 11
                               more colors in
                               version 2.0.
      key                    # Channel key
      msg=                   # The message body.
      nick                   # Nickname to send the message from. May be
                               shortened,
                               depending on
                               server's NICKLEN
                               setting.
      nick_to                # A list of nicknames to send the message to. One
                               of nick_to or
                               channel needs to
                               be set.  When
                               both are defined,
                               the message will
                               be sent to both
                               of them.
      part                   # Designates whether user should part from channel
                               after sending
                               message or not.
                               Useful for when
                               using a faux bot
                               and not wanting
                               join/parts
                               between messages.
      passwd                 # Server password
      port                   # IRC server port number
      server                 # IRC server name/address
      style                  # Text style for the message. Note italic does not
                               work on some
                               clients
      timeout                # Timeout to use while waiting for successful
                               registration and
                               join messages,
                               this is to
                               prevent an
                               endless loop
      topic                  # Set the channel topic
      use_ssl                # Designates whether TLS/SSL should be used when
                               connecting to the
                               IRC server
- name: Send a message to jabber user or chat room
  action: jabber
      encoding               # message encoding
      host                   # host to connect, overrides user info
      msg=                   # The message body.
      password=              # password for user to connect
      port                   # port to connect to, overrides default
      to=                    # user ID or name of the room, when using room use
                               a slash to
                               indicate your
                               nick.
      user=                  # User as which to connect
- name: deploy applications to JBoss
  action: jboss
      deploy_path            # The location in the filesystem where the
                               deployment
                               scanner listens
      deployment=            # The name of the deployment
      src                    # The remote path of the application ear or war to
                               deploy
      state                  # Whether the application should be deployed or
                               undeployed
- name: Manage jenkins jobs
  action: jenkins_job
      config                 # config in XML format. Required if job does not
                               yet exist.
                               Mututally
                               exclusive with
                               `enabled'.
                               Considered if
                               `state=present'.
      enabled                # Whether the job should be enabled or disabled.
                               Mututally
                               exclusive with
                               `config'.
                               Considered if
                               `state=present'.
      name=                  # Name of the Jenkins job.
      password               # Password to authenticate with the Jenkins
                               server.
      state                  # Attribute that specifies if the job has to be
                               created or
                               deleted.
      token                  # API token used to authenticate alternatively to
                               password.
      url                    # Url where the Jenkins server is accessible.
      user                   # User to authenticate with the Jenkins server.
- name: Add or remove Jenkins plugin
  action: jenkins_plugin
      group                  # Name of the Jenkins group on the OS.
      jenkins_home           # Home directory of the Jenkins user.
      mode                   # File mode applied on versioned plugins.
      name=                  # Plugin name.
      owner                  # Name of the Jenkins user on the OS.
      params                 # Option used to allow the user to overwrite any
                               of the other
                               options. To
                               remove an option,
                               set the value of
                               the option to
                               `null'.
      state                  # Desired plugin state. If the `latest' is set,
                               the check for new
                               version will be
                               performed every
                               time. This is
                               suitable to keep
                               the plugin up-to-
                               date.
      timeout                # Server connection timeout in secs.
      updates_expiration     # Number of seconds after which a new copy of the
                               `update-
                               center.json' file
                               is downloaded.
                               This is used to
                               avoid the need to
                               download the
                               plugin to
                               calculate its
                               checksum when
                               `latest' is
                               specified. Set it
                               to `0' if no
                               cache file should
                               be used. In that
                               case, the plugin
                               file will always
                               be downloaded to
                               calculate its
                               checksum when
                               `latest' is
                               specified.
      updates_url            # URL of the Update Centre. Used as the base URL
                               to download the
                               plugins and the
                               `update-
                               center.json' JSON
                               file.
      url                    # URL of the Jenkins server.
      version                # Plugin version number. If this option is
                               specified, all
                               plugin
                               dependencies must
                               be installed
                               manually. It
                               might take longer
                               to verify that
                               the correct
                               version is
                               installed. This
                               is especially
                               true if a
                               specific version
                               number is
                               specified.
      with_dependencies      # Defines whether to install plugin dependencies.
- name: create and modify issues in a JIRA instance
  action: jira
      assignee               # Sets the assignee on create or transition
                               operations. Note
                               not all
                               transitions will
                               allow this.
      comment                # The comment text to add.
      description            # The issue description, where appropriate.
      fields                 # This is a free-form data structure that can
                               contain arbitrary
                               data. This is
                               passed directly
                               to the JIRA REST
                               API (possibly
                               after merging
                               with other
                               required data, as
                               when passed to
                               create). See
                               examples for more
                               information, and
                               the JIRA REST API
                               for the structure
                               required for
                               various fields.
      issue                  # An existing issue key to operate on.
      issuetype              # The issue type, for issue creation.
      operation=             # The operation to perform.
      password=              # The password to log-in with.
      project                # The project for this operation. Required for
                               issue creation.
      status                 # The desired status; only relevant for the
                               transition
                               operation.
      summary                # The issue summary, where appropriate.
      uri=                   # Base URI for the JIRA instance
      username=              # The username to log-in with.
- name: Execute arbitrary commands on a remote device running Junos
  action: junos_command
      commands               # The `commands' to send to the remote device over
                               the Netconf
                               transport.  The
                               resulting output
                               from the command
                               is returned.  If
                               the `wait_for'
                               argument is
                               provided, the
                               module is not
                               returned until
                               the condition is
                               satisfied or the
                               number of
                               `retries' has
                               been exceeded.
      format                 # Configures the encoding scheme to use when
                               serializing
                               output from the
                               device.  This
                               handles how to
                               properly
                               understand the
                               output and apply
                               the conditionals
                               path to the
                               result set.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      interval               # Configures the interval in seconds to wait
                               between retries
                               of the command.
                               If the command
                               does not pass the
                               specified
                               conditional, the
                               interval
                               indicates how to
                               long to wait
                               before trying the
                               command again.
      match                  # The `match' argument is used in conjunction with
                               the `wait_for'
                               argument to
                               specify the match
                               policy.  Valid
                               values are `all'
                               or `any'.  If the
                               value is set to
                               `all' then all
                               conditionals in
                               the `wait_for'
                               must be
                               satisfied.  If
                               the value is set
                               to `any' then
                               only one of the
                               values must be
                               satisfied.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.   The
                               value of
                               `password' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_PASSWORD will
                               be used instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               The port value
                               will default to
                               the well known
                               SSH port of 22
                               (for
                               `transport=cli')
                               or port 830 (for 
                               `transport=netcon
                               f') device.
      provider               # Convenience method that allows all `ios'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      retries                # Specifies the number of retries a command should
                               by tried before
                               it is considered
                               failed.  The
                               command is run on
                               the target device
                               every retry and
                               evaluated against
                               the `waitfor'
                               conditionals.
      rpcs                   # The `rpcs' argument accepts a list of RPCs to be
                               executed over a
                               netconf session
                               and the results
                               from the RPC
                               execution is
                               return to the
                               playbook via the
                               modules results
                               dictionary.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               The value of
                               `ssh_keyfile' is
                               the path to the
                               key used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_SSH_KEYFILE
                               will be used
                               instead.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_USERNAME will
                               be used instead.
      wait_for               # Specifies what to evaluate from the output of
                               the command and
                               what conditionals
                               to apply.  This
                               argument will
                               cause the task to
                               wait for a
                               particular
                               conditional to be
                               true before
                               moving forward.
                               If the
                               conditional is
                               not true by the
                               configured
                               retries, the task
                               fails.  See
                               examples.
- name: Manage configuration on devices running Juniper JUNOS
  action: junos_config
      backup                 # This argument will cause the module to create a
                               full backup of
                               the current
                               `running-config'
                               from the remote
                               device before any
                               changes are made.
                               The backup file
                               is written to the
                               `backup' folder
                               in the playbook
                               root directory.
                               If the directory
                               does not exist,
                               it is created.
      comment                # The `comment' argument specifies a text string
                               to be used when
                               committing the
                               configuration.
                               If the `confirm'
                               argument is set
                               to False, this
                               argument is
                               silently ignored.
      confirm                # The `confirm' argument will configure a time out
                               value for the
                               commit to be
                               confirmed before
                               it is
                               automatically
                               rolled back.  If
                               the `confirm'
                               argument is set
                               to False, this
                               argument is
                               silently ignored.
                               If the value for
                               this argument is
                               set to 0, the
                               commit is
                               confirmed
                               immediately.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      lines                  # This argument takes a list of `set' or `delete'
                               configuration
                               lines to push
                               into the remote
                               device.  Each
                               line must start
                               with either `set'
                               or `delete'.
                               This argument is
                               mutually
                               exclusive with
                               the `src'
                               argument.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.   The
                               value of
                               `password' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_PASSWORD will
                               be used instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               The port value
                               will default to
                               the well known
                               SSH port of 22
                               (for
                               `transport=cli')
                               or port 830 (for 
                               `transport=netcon
                               f') device.
      provider               # Convenience method that allows all `ios'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      replace                # The `replace' argument will instruct the remote
                               device to replace
                               the current
                               configuration
                               hierarchy with
                               the one specified
                               in the
                               corresponding
                               hierarchy of the
                               source
                               configuration
                               loaded from this
                               module. Note this
                               argument should
                               be considered
                               deprecated.  To
                               achieve the
                               equivalent, set
                               the `update'
                               argument to
                               `replace'.  This
                               argument will be
                               removed in a
                               future release.
      rollback               # The `rollback' argument instructs the module to
                               rollback the
                               current
                               configuration to
                               the identifier
                               specified in the
                               argument.  If the
                               specified
                               rollback
                               identifier does
                               not exist on the
                               remote device,
                               the module will
                               fail.  To
                               rollback to the
                               most recent
                               commit, set the
                               `rollback'
                               argument to 0.
      src                    # The `src' argument provides a path to the
                               configuration
                               file to load into
                               the remote
                               system.  The path
                               can either be a
                               full system path
                               to the
                               configuration
                               file if the value
                               starts with / or
                               relative to the
                               root of the
                               implemented role
                               or playbook. This
                               argument is
                               mutually
                               exclusive with
                               the `lines'
                               argument.
      src_format             # The `src_format' argument specifies the format
                               of the
                               configuration
                               found int `src'.
                               If the
                               `src_format'
                               argument is not
                               provided, the
                               module will
                               attempt to
                               determine the
                               format of the
                               configuration
                               file specified in
                               `src'.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               The value of
                               `ssh_keyfile' is
                               the path to the
                               key used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_SSH_KEYFILE
                               will be used
                               instead.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_USERNAME will
                               be used instead.
      zeroize                # The `zeroize' argument is used to completely
                               sanitize the
                               remote device
                               configuration
                               back to initial
                               defaults.  This
                               argument will
                               effectively
                               remove all
                               current
                               configuration
                               statements on the
                               remote device.
- name: Collect facts from remote device running Junos
  action: junos_facts
      config                 # The `config' argument instructs the fact module
                               to collect the
                               configuration
                               from the remote
                               device.  The
                               configuration is
                               then included in
                               return facts.  By
                               default, the
                               configuration is
                               returned as text.
                               The
                               `config_format'
                               can be used to
                               return different
                               Junos
                               configuration
                               formats.
      config_format          # The `config_format' argument is used to specify
                               the desired
                               format of the
                               configuration
                               file.  Devices
                               support three
                               configuration
                               file formats.  By
                               default, the
                               configuration
                               from the device
                               is returned as
                               text.  The other
                               options include
                               set and xml.  If
                               the xml option is
                               chosen, the
                               configuration
                               file is returned
                               as both xml and
                               json.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.   The
                               value of
                               `password' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_PASSWORD will
                               be used instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               The port value
                               will default to
                               the well known
                               SSH port of 22
                               (for
                               `transport=cli')
                               or port 830 (for 
                               `transport=netcon
                               f') device.
      provider               # Convenience method that allows all `ios'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               The value of
                               `ssh_keyfile' is
                               the path to the
                               key used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_SSH_KEYFILE
                               will be used
                               instead.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_USERNAME will
                               be used instead.
- name: Configures the Junos Netconf system service
  action: junos_netconf
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      netconf_port           # This argument specifies the port the netconf
                               service should
                               listen on for SSH
                               connections.  The
                               default port as
                               defined in RFC
                               6242 is 830.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.   The
                               value of
                               `password' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_PASSWORD will
                               be used instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               The port value
                               will default to
                               the well known
                               SSH port of 22
                               (for
                               `transport=cli')
                               or port 830 (for 
                               `transport=netcon
                               f') device.
      provider               # Convenience method that allows all `ios'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               The value of
                               `ssh_keyfile' is
                               the path to the
                               key used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_SSH_KEYFILE
                               will be used
                               instead.
      state                  # Specifies the state of the [junos_netconf]
                               resource on the
                               remote device.
                               If the `state'
                               argument is set
                               to `present' the
                               netconf service
                               will be
                               configured.  If
                               the `state'
                               argument is set
                               to `absent' the
                               netconf service
                               will be removed
                               from the
                               configuration.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_USERNAME will
                               be used instead.
- name: Installs packages on remote devices running Junos
  action: junos_package
      force=                 # The `force' argument instructs the module to
                               bypass the
                               package version
                               check and install
                               the packaged
                               identified in
                               `src' on the
                               remote device.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      no_copy                # The `no_copy' argument is responsible for
                               instructing the
                               remote device on
                               where to install
                               the package from.
                               When enabled, the
                               package is
                               transferred to
                               the remote device
                               prior to
                               installing.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.   The
                               value of
                               `password' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_PASSWORD will
                               be used instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               The port value
                               will default to
                               the well known
                               SSH port of 22
                               (for
                               `transport=cli')
                               or port 830 (for 
                               `transport=netcon
                               f') device.
      provider               # Convenience method that allows all `ios'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      reboot=                # In order for a package to take effect, the
                               remote device
                               must be
                               restarted.  When
                               enabled, this
                               argument will
                               instruct the
                               module to reboot
                               the device once
                               the updated
                               package has been
                               installed. If
                               disabled or the
                               remote package
                               does not need to
                               be changed, the
                               device will not
                               be started.
      src=                   # The `src' argument specifies the path to the
                               source package to
                               be installed on
                               the remote device
                               in the advent of
                               a version
                               mismatch. The
                               `src' argument
                               can be either a
                               localized path or
                               a full path to
                               the package file
                               to install.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               The value of
                               `ssh_keyfile' is
                               the path to the
                               key used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_SSH_KEYFILE
                               will be used
                               instead.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_USERNAME will
                               be used instead.
      version                # The `version' argument can be used to explicitly
                               specify the
                               version of the
                               package that
                               should be
                               installed on the
                               remote device.
                               If the `version'
                               argument is not
                               specified, then
                               the version is
                               extracts from the
                               `src' filename.
- name: Blacklist kernel modules
  action: kernel_blacklist
      blacklist_file         # If specified, use this blacklist file instead of
                               `/etc/modprobe.d
                               /blacklist-
                               ansible.conf'.
      name=                  # Name of kernel module to black- or whitelist.
      state                  # Whether the module should be present in the
                               blacklist or
                               absent.
- name: Manage Kibana plugins
  action: kibana_plugin
      force                  # Delete and re-install the plugin. Can be useful
                               for plugins
                               update
      name=                  # Name of the plugin to install
      plugin_bin             # Location of the plugin binary
      plugin_dir             # Your configured plugin directory specified in
                               Kibana
      state                  # Desired state of a plugin.
      timeout                # Timeout setting: 30s, 1m, 1h...
      url                    # Set exact URL to download the plugin from. For
                               local file,
                               prefix its
                               absolute path
                               with file://
      version                # Version of the plugin to be installed. If plugin
                               exists with
                               previous version,
                               it will NOT be
                               updated if
                               `force' is not
                               set to yes
- name: Manage a Kinesis Stream.
  action: kinesis_stream
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      name=                  # The name of the Kinesis Stream you are managing.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      retention_period       # The default retention period is 24 hours and can
                               not be less than
                               24 hours. The
                               retention period
                               can be modified
                               during any point
                               in time.
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      shards                 # The number of shards you want to have with this
                               stream. This can
                               not be modified
                               after being
                               created. This is
                               required when
                               state == present
      state                  # Create or Delete the Kinesis Stream.
      tags                   # A dictionary of resource tags of the form: {
                               tag1: value1,
                               tag2: value2 }.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
      wait                   # Wait for operation to complete before returning.
      wait_timeout           # How many seconds to wait for an operation to
                               complete before
                               timing out.
- name: Add or remove a host from the `known_hosts' file
  action: known_hosts
      key                    # The SSH public host key, as a string (required
                               if state=present,
                               optional when
                               state=absent, in
                               which case all
                               keys for the host
                               are removed). The
                               key must be in
                               the right format
                               for ssh (see
                               sshd(1), section
                               "SSH_KNOWN_HOSTS
                               FILE FORMAT")
      name=                  # The host to add or remove (must match a host
                               specified in key)
      path                   # The known_hosts file to edit
      state                  # `present' to add the host key, `absent' to
                               remove it.
- name: Manage Kubernetes resources.
  action: kubernetes
      api_endpoint=          # The IPv4 API endpoint of the Kubernetes cluster.
      certificate_authority_data   # Certificate Authority data for Kubernetes
                               server. Should be
                               in either
                               standard PEM
                               format or base64
                               encoded PEM data.
                               Note that
                               certificate
                               verification is
                               broken until
                               ansible supports
                               a version of
                               'match_hostname'
                               that can match
                               the IP address
                               against the CA
                               data.
      file_reference         # Specify full path to a Kubernets YAML file to
                               send to API
                               `endpoint'. This
                               option is
                               mutually
                               exclusive with
                               `'inline_data''.
      inline_data=           # The Kubernetes YAML data to send to the API
                               `endpoint'. This
                               option is
                               mutually
                               exclusive with `'
                               file_reference''.
      insecure               # Reverts the connection to using HTTP instead of
                               HTTPS. This
                               option should
                               only be used when
                               execuing the
                               ['kubernetes']
                               module local to
                               the Kubernetes
                               cluster using the
                               insecure local
                               port
                               (locahost:8080 by
                               default).
      state=                 # The desired action to take on the Kubernetes
                               data.
      url_password           # The HTTP Basic Auth password for the API
                               `endpoint'. This
                               should be set
                               unless using the
                               `'insecure''
                               option.
      url_username           # The HTTP Basic Auth username for the API
                               `endpoint'. This
                               should be set
                               unless using the
                               `'insecure''
                               option.
      validate_certs         # Enable/disable certificate validation. Note that
                               this is set to
                               `false' until
                               Ansible can
                               support IP
                               address based
                               certificate
                               hostname matching
                               (exists in >=
                               python3.5.0).
- name: Manage AWS Lambda functions
  action: lambda
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      description            # A short, user-defined function description.
                               Lambda does not
                               use this value.
                               Assign a
                               meaningful
                               description as
                               you see fit.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      handler                # The function within your code that Lambda calls
                               to begin
                               execution
      memory_size            # The amount of memory, in MB, your Lambda
                               function is given
      name=                  # The name you want to assign to the function you
                               are uploading.
                               Cannot be
                               changed.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      role                   # The Amazon Resource Name (ARN) of the IAM role
                               that Lambda
                               assumes when it
                               executes your
                               function to
                               access any other
                               Amazon Web
                               Services (AWS)
                               resources. You
                               may use the bare
                               ARN if the role
                               belongs to the
                               same AWS account.
      runtime=               # The runtime environment for the Lambda function
                               you are
                               uploading.
                               Required when
                               creating a
                               function. Use
                               parameters as
                               described in
                               boto3 docs.
                               Current example
                               runtime
                               environments are
                               nodejs,
                               nodejs4.3, java8
                               or python2.7
      s3_bucket              # Amazon S3 bucket name where the .zip file
                               containing your
                               deployment
                               package is stored
      s3_key                 # The Amazon S3 object (the deployment package)
                               key name you want
                               to upload
      s3_object_version      # The Amazon S3 object (the deployment package)
                               version you want
                               to upload.
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state                  # Create or delete Lambda function
      timeout                # The function execution time at which Lambda
                               should terminate
                               the function.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
      vpc_security_group_ids   # List of VPC security group IDs to associate with
                               the Lambda
                               function.
                               Required when
                               vpc_subnet_ids is
                               used.
      vpc_subnet_ids         # List of subnet IDs to run Lambda function in.
                               Use this option
                               if you need to
                               access resources
                               in your VPC.
                               Leave empty if
                               you don't want to
                               run the function
                               in a VPC.
      zip_file               # A .zip file containing your deployment package
- name: Creates, updates or deletes AWS Lambda function aliases.
  action: lambda_alias
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      description            # A short, user-defined function alias
                               description.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      function_name=         # The name of the function alias.
      name=                  # Name of the function alias.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state=                 # Describes the desired state.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
      version                # Version associated with the Lambda function
                               alias. A value of
                               0 (or omitted
                               parameter) sets
                               the alias to the
                               $LATEST version.
- name: Creates, updates or deletes AWS Lambda function event mappings.
  action: lambda_event
      alias=                 # Name of the function alias. Mutually exclusive
                               with `version'.
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      event_source           # Source of the event that triggers the lambda
                               function.
      lambda_function_arn=   # The name or ARN of the lambda function.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      source_params=         # Sub-parameters required for event source. `==
                               stream event
                               source =='
                               `source_arn' The
                               Amazon Resource
                               Name (ARN) of the
                               Kinesis or
                               DynamoDB stream
                               that is the event
                               source. `enabled'
                               Indicates whether
                               AWS Lambda should
                               begin polling the
                               event source.
                               Default is True.
                               `batch_size' The
                               largest number of
                               records that AWS
                               Lambda will
                               retrieve from
                               your event source
                               at the time of
                               invoking your
                               function. Default
                               is 100. `starting
                               _position' The
                               position in the
                               stream where AWS
                               Lambda should
                               start reading.
                               Choices are
                               TRIM_HORIZON or
                               LATEST.
      state=                 # Describes the desired state.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
      version                # Version of the Lambda function. Mutually
                               exclusive with
                               `alias'.
- name: Gathers AWS Lambda function details as Ansible facts
  action: lambda_facts
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      event_source_arn       # For query type 'mappings', this is the Amazon
                               Resource Name
                               (ARN) of the
                               Amazon Kinesis or
                               DynamoDB stream.
      function_name          # The name of the lambda function for which facts
                               are requested.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      query=                 # Specifies the resource type for which to gather
                               facts.  Leave
                               blank to retrieve
                               all facts.
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: Manage Gentoo overlays
  action: layman
      list_url               # An URL of the alternative overlays list that
                               defines the
                               overlay to
                               install. This
                               list will be
                               fetched and saved
                               under `${overlay_
                               defs}'/${name}.xm
                               l), where
                               `overlay_defs' is
                               readed from the
                               Layman's
                               configuration.
      name=                  # The overlay id to install, synchronize, or
                               uninstall. Use
                               'ALL' to sync all
                               of the installed
                               overlays (can be
                               used only when
                               `state=updated').
      state                  # Whether to install (`present'), sync
                               (`updated'), or
                               uninstall
                               (`absent') the
                               overlay.
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be set to `no'
                               when no other
                               option exists.
                               Prior to 1.9.3
                               the code
                               defaulted to
                               `no'.
- name: Create SSL certificates with Let's Encrypt
  action: letsencrypt
      account_email          # The email address associated with this account.
                               It will be used
                               for certificate
                               expiration
                               warnings.
      account_key=           # File containing the the Let's Encrypt account
                               RSA key. Can be
                               created with
                               `openssl rsa
                               ...'.
      acme_directory         # The ACME directory to use. This is the entry
                               point URL to
                               access CA server
                               API. For safety
                               reasons the
                               default is set to
                               the Let's Encrypt
                               staging server.
                               This will create
                               technically
                               correct, but
                               untrusted
                               certificates.
      agreement              # URI to a terms of service document you agree to
                               when using the
                               ACME service at
                               `acme_directory'.
      challenge              # T h e   c h a l l e n g e   t o   b e   p e r f
                               o r m e d .
      csr=                   # File containing the CSR for the new certificate.
                               Can be created
                               with `openssl csr
                               ...'. The CSR may
                               contain multiple
                               Subject Alternate
                               Names, but each
                               one will lead to
                               an individual
                               challenge that
                               must be fulfilled
                               for the CSR to be
                               signed.
      data                   # The data to validate ongoing challenges. The
                               value that must
                               be used here will
                               be provided by a
                               previous use of
                               this module.
      dest=                  # T h e   d e s t i n a t i o n   f i l e   f o r
                               t h e   c e r t i
                               f i c a t e .
      remaining_days         # The number of days the certificate must have
                               left being valid
                               before it will be
                               renewed.
- name: create an annotation in librato
  action: librato_annotation
      api_key=               # Librato account api key
      description            # The description contains extra meta-data about a
                               particular
                               annotation The
                               description
                               should contain
                               specifics on the
                               individual
                               annotation e.g.
                               Deployed 9b562b2
                               shipped new
                               feature foo!
      end_time               # The unix timestamp indicating the the time at
                               which the event
                               referenced by
                               this annotation
                               ended For events
                               that have a
                               duration, this is
                               a useful way to
                               annotate the
                               duration of the
                               event
      links=                 # See examples
      name                   # The annotation stream name If the annotation
                               stream does not
                               exist, it will be
                               created
                               automatically
      source                 # A string which describes the originating source
                               of an annotation
                               when that
                               annotation is
                               tracked across
                               multiple members
                               of a population
      start_time             # The unix timestamp indicating the the time at
                               which the event
                               referenced by
                               this annotation
                               started
      title=                 # The title of an annotation is a string and may
                               contain spaces
                               The title should
                               be a short, high-
                               level summary of
                               the annotation
                               e.g. v45
                               Deployment
      user=                  # Librato account username
- name: Ensure a particular line is in a file, or replace an existing line using a back-referenced regular expression.
  action: lineinfile
      backrefs               # Used with `state=present'. If set, line can
                               contain
                               backreferences
                               (both positional
                               and named) that
                               will get
                               populated if the
                               `regexp' matches.
                               This flag changes
                               the operation of
                               the module
                               slightly;
                               `insertbefore'
                               and `insertafter'
                               will be ignored,
                               and if the
                               `regexp' doesn't
                               match anywhere in
                               the file, the
                               file will be left
                               unchanged. If the
                               `regexp' does
                               match, the last
                               matching line
                               will be replaced
                               by the expanded
                               line parameter.
      backup                 # Create a backup file including the timestamp
                               information so
                               you can get the
                               original file
                               back if you
                               somehow clobbered
                               it incorrectly.
      create                 # Used with `state=present'. If specified, the
                               file will be
                               created if it
                               does not already
                               exist. By default
                               it will fail if
                               the file is
                               missing.
      dest=                  # The file to modify.
      group                  # name of the group that should own the
                               file/directory,
                               as would be fed
                               to `chown'
      insertafter            # Used with `state=present'. If specified, the
                               line will be
                               inserted after
                               the last match of
                               specified regular
                               expression. A
                               special value is
                               available; `EOF'
                               for inserting the
                               line at the end
                               of the file. If
                               specified regular
                               expression has no
                               matches, EOF will
                               be used instead.
                               May not be used
                               with `backrefs'.
      insertbefore           # Used with `state=present'. If specified, the
                               line will be
                               inserted before
                               the last match of
                               specified regular
                               expression. A
                               value is
                               available; `BOF'
                               for inserting the
                               line at the
                               beginning of the
                               file. If
                               specified regular
                               expression has no
                               matches, the line
                               will be inserted
                               at the end of the
                               file.  May not be
                               used with
                               `backrefs'.
      line                   # Required for `state=present'. The line to
                               insert/replace
                               into the file. If
                               `backrefs' is
                               set, may contain
                               backreferences
                               that will get
                               expanded with the
                               `regexp' capture
                               groups if the
                               regexp matches.
      mode                   # mode the file or directory should be. For those
                               used to
                               `/usr/bin/chmod'
                               remember that
                               modes are
                               actually octal
                               numbers (like
                               0644). Leaving
                               off the leading
                               zero will likely
                               have unexpected
                               results. As of
                               version 1.8, the
                               mode may be
                               specified as a
                               symbolic mode
                               (for example,
                               `u+rwx' or
                               `u=rw,g=r,o=r').
      others                 # All arguments accepted by the [file] module also
                               work here.
      owner                  # name of the user that should own the
                               file/directory,
                               as would be fed
                               to `chown'
      regexp                 # The regular expression to look for in every line
                               of the file. For
                               `state=present',
                               the pattern to
                               replace if found;
                               only the last
                               line found will
                               be replaced. For
                               `state=absent',
                               the pattern of
                               the line to
                               remove.  Uses
                               Python regular
                               expressions; see 
                               http://docs.pytho
                               n.org/2/library/r
                               e.html.
      selevel                # level part of the SELinux file context. This is
                               the MLS/MCS
                               attribute,
                               sometimes known
                               as the `range'.
                               `_default'
                               feature works as
                               for `seuser'.
      serole                 # role part of SELinux file context, `_default'
                               feature works as
                               for `seuser'.
      setype                 # type part of SELinux file context, `_default'
                               feature works as
                               for `seuser'.
      seuser                 # user part of SELinux file context. Will default
                               to system policy,
                               if applicable. If
                               set to
                               `_default', it
                               will use the
                               `user' portion of
                               the policy if
                               available
      state                  # Whether the line should be there or not.
      unsafe_writes          # Normally this module uses atomic operations to
                               prevent data
                               corruption or
                               inconsistent
                               reads from the
                               target files,
                               sometimes systems
                               are configured or
                               just broken in
                               ways that prevent
                               this. One example
                               are docker
                               mounted files,
                               they cannot be
                               updated
                               atomically and
                               can only be done
                               in an unsafe
                               manner. This
                               boolean option
                               allows ansible to
                               fall back to
                               unsafe methods of
                               updating files
                               for those cases
                               in which you do
                               not have any
                               other choice. Be
                               aware that this
                               is subject to
                               race conditions
                               and can lead to
                               data corruption.
      validate               # The validation command to run before copying
                               into place. The
                               path to the file
                               to validate is
                               passed in via
                               '%s' which must
                               be present as in
                               the example
                               below. The
                               command is passed
                               securely so shell
                               features like
                               expansion and
                               pipes won't work.
- name: create / delete / stop / restart an instance in Linode Public Cloud
  action: linode
      api_key                # Linode API key
      datacenter             # datacenter to create an instance in (Linode
                               Datacenter)
      distribution           # distribution to use for the instance (Linode
                               Distribution)
      linode_id              # Unique ID of a linode server
      name                   # Name to give the instance (alphanumeric, dashes,
                               underscore) To
                               keep sanity on
                               the Linode Web
                               Console, name is
                               prepended with
                               LinodeID_
      password               # root password to apply to a new server (auto
                               generated if
                               missing)
      payment_term           # payment term to use for the instance (payment
                               term in months)
      plan                   # plan to use for the instance (Linode plan)
      ssh_pub_key            # SSH public key applied to root user
      state                  # Indicate desired state of the resource
      swap                   # swap size in MB
      wait                   # wait for the instance to be in state 'running'
                               before returning
      wait_timeout           # how long before wait gives up, in seconds
- name: get details reported by lldp
  action: lldp
- name: Creates or removes locales.
  action: locale_gen
      name=                  # Name and encoding of the locale, such as
                               "en_GB.UTF-8".
      state                  # Whether the locale shall be present.
- name: Module for tracking logs via logentries.com
  action: logentries
      logtype                # type of the log
      name                   # name of the log
      path=                  # path to a log file
      state                  # following state of the log
- name: Manage your LogicMonitor account through Ansible Playbooks
  action: logicmonitor
      action=                # The action you wish to perform on target. Add:
                               Add an object to
                               your LogicMonitor
                               account. Remove:
                               Remove an object
                               from your
                               LogicMonitor
                               account. Update:
                               Update
                               properties,
                               description, or
                               groups
                               (target=host) for
                               an object in your
                               LogicMonitor
                               account. SDT:
                               Schedule downtime
                               for an object in
                               your LogicMonitor
                               account.
      alertenable            # A boolean flag to turn alerting on or off for an
                               object. Optional
                               for managing all
                               hosts (action=add
                               or
                               action=update).
      collector              # The fully qualified domain name of a collector
                               in your
                               LogicMonitor
                               account. This is
                               required for the
                               creation of a
                               LogicMonitor host
                               (target=host
                               action=add). This
                               is required for
                               updating,
                               removing or
                               scheduling
                               downtime for
                               hosts if
                               'displayname'
                               isn't specified
                               (target=host
                               action=update
                               action=remove
                               action=sdt).
      company=               # The LogicMonitor account company name. If you
                               would log in to
                               your account at "
                               superheroes.logic
                               monitor.com" you
                               would use
                               "superheroes."
      description            # The long text description of the object in your
                               LogicMonitor
                               account. Optional
                               for managing
                               hosts and host
                               groups
                               (target=host or
                               target=hostgroup;
                               action=add or
                               action=update).
      displayname            # The display name of a host in your LogicMonitor
                               account or the
                               desired display
                               name of a device
                               to manage.
                               Optional for
                               managing hosts
                               (target=host).
      duration               # The duration (minutes) of the Scheduled Down
                               Time (SDT).
                               Optional for
                               putting an object
                               into SDT
                               (action=sdt).
      fullpath               # The fullpath of the host group object you would
                               like to manage.
                               Recommend running
                               on a single
                               Ansible host.
                               Required for
                               management of
                               LogicMonitor host
                               groups (target=ho
                               stgroup).
      groups                 # A list of groups that the host should be a
                               member of.
                               Optional for
                               managing hosts
                               (target=host;
                               action=add or
                               action=update).
      hostname               # The hostname of a host in your LogicMonitor
                               account, or the
                               desired hostname
                               of a device to
                               manage. Optional
                               for managing
                               hosts
                               (target=host).
      id                     # ID of the datasource to target. Required for
                               management of
                               LogicMonitor
                               datasources (targ
                               et=datasource).
      password=              # The password of the specified LogicMonitor user
      properties             # A dictionary of properties to set on the
                               LogicMonitor host
                               or host group.
                               Optional for
                               managing hosts
                               and host groups
                               (target=host or
                               target=hostgroup;
                               action=add or
                               action=update).
                               This parameter
                               will add or
                               update existing
                               properties in
                               your LogicMonitor
                               account.
      starttime              # The time that the Scheduled Down Time (SDT)
                               should begin.
                               Optional for
                               managing SDT
                               (action=sdt).
                               Y-m-d H:M
      target=                # The type of LogicMonitor object you wish to
                               manage.
                               Collector:
                               Perform actions
                               on a LogicMonitor
                               collector. NOTE
                               You should use
                               Ansible service
                               modules such as
                               [service] or
                               [supervisorctl]
                               for managing the
                               Collector
                               'logicmonitor-
                               agent' and
                               'logicmonitor-
                               watchdog'
                               services.
                               Specifically,
                               you'll probably
                               want to start
                               these services
                               after a Collector
                               add and stop
                               these services
                               before a
                               Collector remove.
                               Host: Perform
                               actions on a host
                               device.
                               Hostgroup:
                               Perform actions
                               on a LogicMonitor
                               host group. NOTE
                               Host and
                               Hostgroup tasks
                               should always be
                               performed via
                               local_action.
                               There are no
                               benefits to
                               running these
                               tasks on the
                               remote host and
                               doing so will
                               typically cause
                               problems.
      user=                  # A LogicMonitor user name. The module will
                               authenticate and
                               perform actions
                               on behalf of this
                               user.
- name: Collect facts about LogicMonitor objects
  action: logicmonitor_facts
      collector              # The fully qualified domain name of a collector
                               in your
                               LogicMonitor
                               account. This is
                               optional for
                               querying a
                               LogicMonitor host
                               when a
                               displayname is
                               specified. This
                               is required for
                               querying a
                               LogicMonitor host
                               when a
                               displayname is
                               not specified.
      company=               # The LogicMonitor account company name. If you
                               would log in to
                               your account at "
                               superheroes.logic
                               monitor.com" you
                               would use
                               "superheroes".
      displayname            # The display name of a host in your LogicMonitor
                               account or the
                               desired display
                               name of a device
                               to add into
                               monitoring.
      fullpath               # The fullpath of the hostgroup object you would
                               like to manage.
                               Recommend running
                               on a single
                               ansible host.
                               Required for
                               management of
                               LogicMonitor host
                               groups (target=ho
                               stgroup).
      hostname               # The hostname of a host in your LogicMonitor
                               account, or the
                               desired hostname
                               of a device to
                               add into
                               monitoring.
                               Required for
                               managing hosts
                               (target=host).
      password=              # The password for the chosen LogicMonitor User.
                               If an md5 hash is
                               used, the digest
                               flag must be set
                               to true.
      target=                # The LogicMonitor object you wish to manage.
      user=                  # A LogicMonitor user name. The module will
                               authenticate and
                               perform actions
                               on behalf of this
                               user.
- name: Configure LVM volume groups
  action: lvg
      force                  # If yes, allows to remove volume group with
                               logical volumes.
      pesize                 # The size of the physical extent in megabytes.
                               Must be a power
                               of 2.
      pvs                    # List of comma-separated devices to use as
                               physical devices
                               in this volume
                               group. Required
                               when creating or
                               resizing volume
                               group. The module
                               will take care of
                               running pvcreate
                               if needed.
      state                  # Control if the volume group exists.
      vg=                    # The name of the volume group.
      vg_options             # Additional options to pass to `vgcreate' when
                               creating the
                               volume group.
- name: Configure LVM logical volumes
  action: lvol
      active                 # Whether the volume is activate and visible to
                               the host.
      force                  # Shrink or remove operations of volumes requires
                               this switch.
                               Ensures that that
                               filesystems get
                               never corrupted/d
                               estroyed by
                               mistake.
      lv=                    # The name of the logical volume.
      opts                   # Free-form options to be passed to the lvcreate
                               command
      pvs                    # Comma separated list of physical volumes e.g.
                               /dev/sda,/dev/sdb
      shrink                 # shrink if current size is higher than size
                               requested
      size                   # The size of the logical volume, according to
                               lvcreate(8)
                               --size, by
                               default in
                               megabytes or
                               optionally with
                               one of [bBsSkKmMg
                               GtTpPeE] units;
                               or according to
                               lvcreate(8)
                               --extents as a
                               percentage of
                               [VG|PVS|FREE];
                               Float values must
                               begin with a
                               digit. Resizing
                               using percentage
                               values was not
                               supported prior
                               to 2.1.
      snapshot               # The name of the snapshot volume
      state                  # Control if the logical volume exists. If
                               `present' and the
                               volume does not
                               already exist
                               then the `size'
                               option is
                               required.
      vg=                    # The volume group this logical volume is part of.
- name: Manage LXC Containers
  action: lxc_container
      archive                # Create an archive of a container. This will
                               create a tarball
                               of the running
                               container.
      archive_compression    # Type of compression to use when creating an
                               archive of a
                               running
                               container.
      archive_path           # Path the save the archived container. If the
                               path does not
                               exist the archive
                               method will
                               attempt to create
                               it.
      backing_store          # Backend storage type for the container.
      clone_name             # Name of the new cloned server. This is only used
                               when state is
                               clone.
      clone_snapshot         # Create a snapshot a container when cloning. This
                               is not supported
                               by all container
                               storage backends.
                               Enabling this may
                               fail if the
                               backing store
                               does not support
                               snapshots.
      config                 # Path to the LXC configuration file.
      container_command      # Run a command within a container.
      container_config       # list of 'key=value' options to use when
                               configuring a
                               container.
      container_log          # Enable a container log for host actions to the
                               container.
      container_log_level    # Set the log level for a container where
                               *container_log*
                               was set.
      directory              # Place rootfs directory under DIR.
      fs_size                # File system Size.
      fs_type                # Create fstype TYPE.
      lv_name                # Name of the logical volume, defaults to the
                               container name.
      lxc_path               # Place container under PATH
      name=                  # Name of a container.
      state                  # Define the state of a container. If you clone a
                               container using
                               `clone_name` the
                               newly cloned
                               container created
                               in a stopped
                               state. The
                               running container
                               will be stopped
                               while the clone
                               operation is
                               happening and
                               upon completion
                               of the clone the
                               original
                               container state
                               will be restored.
      template               # Name of the template to use within an LXC
                               create.
      template_options       # Template options when building the container.
      thinpool               # Use LVM thin pool called TP.
      vg_name                # If Backend store is lvm, specify the name of the
                               volume group.
      zfs_root               # Create zfs under given zfsroot.
- name: Manage LXD Containers
  action: lxd_container
      architecture           # The archiecture for the container (e.g. "x86_64"
                               or "i686"). See h
                               ttps://github.com
                               /lxc/lxd/blob/mas
                               ter/doc/rest-
                               api.md#post-1
      cert_file              # The client certificate file path.
      config                 # The config for the container (e.g.
                               {"limits.cpu":
                               "2"}). See https:
                               //github.com/lxc/
                               lxd/blob/master/d
                               oc/rest-
                               api.md#post-1 If
                               the container
                               already exists
                               and its "config"
                               value in metadata
                               obtained from GET
                               /1.0/containers/<
                               name> https://git
                               hub.com/lxc/lxd/b
                               lob/master/doc
                               /rest-api.md#10co
                               ntainersname are
                               different, they
                               this module tries
                               to apply the
                               configurations.
                               The key starts
                               with 'volatile.'
                               are ignored for
                               this comparison.
                               Not all config
                               values are
                               supported to
                               apply the
                               existing
                               container. Maybe
                               you need to
                               delete and
                               recreate a
                               container.
      devices                # The devices for the container (e.g. { "rootfs":
                               { "path":
                               "/dev/kvm",
                               "type": "unix-
                               char" }). See htt
                               ps://github.com/l
                               xc/lxd/blob/maste
                               r/doc/rest-
                               api.md#post-1
      ephemeral              # Whether or not the container is ephemeral (e.g.
                               true or false).
                               See https://githu
                               b.com/lxc/lxd/blo
                               b/master/doc
                               /rest-
                               api.md#post-1
      force_stop             # If this is true, the [lxd_container] forces to
                               stop the
                               container when it
                               stops or restarts
                               the container.
      key_file               # The client certificate key file path.
      name=                  # Name of a container.
      source                 # The source for the container (e.g. { "type":
                               "image", "mode":
                               "pull", "server":
                               "https://images.l
                               inuxcontainers.or
                               g", "protocol":
                               "lxd", "alias": "
                               ubuntu/xenial/amd
                               64" }). See https
                               ://github.com/lxc
                               /lxd/blob/master/
                               doc/rest-
                               api.md#post-1
      state                  # Define the state of a container.
      timeout                # A timeout for changing the state of the
                               container. This
                               is also used as a
                               timeout for
                               waiting until
                               IPv4 addresses
                               are set to the
                               all network
                               interfaces in the
                               container after
                               starting or
                               restarting.
      trust_password         # The client trusted password. You need to set
                               this password on
                               the LXD server
                               before running
                               this module using
                               the following
                               command. lxc
                               config set core.t
                               rust_password
                               <some random
                               password> See htt
                               ps://www.stgraber
                               .org/2016/04/18
                               /lxd-api-direct-
                               interaction/ If
                               trust_password is
                               set, this module
                               send a request
                               for
                               authentication
                               before sending
                               any requests.
      url                    # The unix domain socket path or the https URL for
                               the LXD server.
      wait_for_ipv4_addresses   # If this is true, the [lxd_container] waits until
                               IPv4 addresses
                               are set to the
                               all network
                               interfaces in the
                               container after
                               starting or
                               restarting.
- name: Manage LXD profiles
  action: lxd_profile
      cert_file              # The client certificate file path.
      config                 # The config for the container (e.g.
                               {"limits.memory":
                               "4GB"}). See http
                               s://github.com/lx
                               c/lxd/blob/master
                               /doc/rest-
                               api.md#patch-3 If
                               the profile
                               already exists
                               and its "config"
                               value in metadata
                               obtained from GET
                               /1.0/profiles/<na
                               me> https://githu
                               b.com/lxc/lxd/blo
                               b/master/doc
                               /rest-
                               api.md#get-19 are
                               different, they
                               this module tries
                               to apply the
                               configurations.
                               Not all config
                               values are
                               supported to
                               apply the
                               existing profile.
                               Maybe you need to
                               delete and
                               recreate a
                               profile.
      devices                # The devices for the profile (e.g. {"rootfs":
                               {"path":
                               "/dev/kvm",
                               "type": "unix-
                               char"}). See http
                               s://github.com/lx
                               c/lxd/blob/master
                               /doc/rest-
                               api.md#patch-3
      key_file               # The client certificate key file path.
      name=                  # Name of a profile.
      new_name               # A new name of a profile. If this parameter is
                               specified a
                               profile will be
                               renamed to this
                               name. See https:/
                               /github.com/lxc/l
                               xd/blob/master/do
                               c/rest-
                               api.md#post-11
      state                  # Define the state of a profile.
      trust_password         # The client trusted password. You need to set
                               this password on
                               the LXD server
                               before running
                               this module using
                               the following
                               command. lxc
                               config set core.t
                               rust_password
                               <some random
                               password> See htt
                               ps://www.stgraber
                               .org/2016/04/18
                               /lxd-api-direct-
                               interaction/ If
                               trust_password is
                               set, this module
                               send a request
                               for
                               authentication
                               before sending
                               any requests.
      url                    # The unix domain socket path or the https URL for
                               the LXD server.
- name: Package manager for MacPorts
  action: macports
      name=                  # name of package to install/remove
      state                  # state of the package
      update_cache           # update the package db first
- name: Send an email
  action: mail
      attach                 # A space-separated list of pathnames of files to
                               attach to the
                               message. Attached
                               files will have
                               their content-
                               type set to
                               `application
                               /octet-stream'.
      bcc                    # The email-address(es) the mail is being 'blind'
                               copied to. This
                               is a comma-
                               separated list,
                               which may contain
                               address and
                               phrase portions.
      body                   # The body of the email being sent.
      cc                     # The email-address(es) the mail is being copied
                               to. This is a
                               comma-separated
                               list, which may
                               contain address
                               and phrase
                               portions.
      charset                # The character set of email being sent
      from                   # The email-address the mail is sent from. May
                               contain address
                               and phrase.
      headers                # A vertical-bar-separated list of headers which
                               should be added
                               to the message.
                               Each individual
                               header is
                               specified as
                               `header=value'
                               (see example
                               below).
      host                   # The mail server
      password               # If SMTP requires password
      port                   # The mail server port
      subject=               # The subject of the email being sent.
      subtype                # The minor mime type, can be either text or html.
                               The major type is
                               always text.
      to                     # The email-address(es) the mail is being sent to.
                               This is a comma-
                               separated list,
                               which may contain
                               address and
                               phrase portions.
      username               # If SMTP requires username
- name: Run targets in a Makefile
  action: make
      chdir=                 # cd into this directory before running make
      params                 # Any extra parameters to pass to make
      target                 # The target to run
- name: Downloads an Artifact from a Maven Repository
  action: maven_artifact
      artifact_id=           # The maven artifactId coordinate
      classifier             # The maven classifier coordinate
      dest=                  # The path where the artifact should be written to
      extension              # The maven type/extension coordinate
      group_id=              # The Maven groupId coordinate
      password               # The password to authenticate with to the Maven
                               Repository. Use
                               AWS secret access
                               key of the
                               repository is
                               hosted on S3
      repository_url         # The URL of the Maven Repository to download
                               from. Use
                               s3://... if the
                               repository is
                               hosted on Amazon
                               S3, added in
                               version 2.2.
      state=                 # The desired state of the artifact
      username               # The username to authenticate as to the Maven
                               Repository. Use
                               AWS secret key of
                               the repository is
                               hosted on S3
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be set to `no'
                               when no other
                               option exists.
      version                # The maven version coordinate
- name: Execute Ansible 'actions'
  action: meta
      free_form=             # This module takes a free form command, as a
                               string. There's
                               not an actual
                               option named
                               "free form".  See
                               the examples!
                               `flush_handlers'
                               makes Ansible run
                               any handler tasks
                               which have thus
                               far been
                               notified. Ansible
                               inserts these
                               tasks internally
                               at certain points
                               to implicitly
                               trigger handler
                               runs (after
                               pre/post tasks,
                               the final role
                               execution, and
                               the main tasks
                               section of your
                               plays). `refresh_
                               inventory' (added
                               in 2.0) forces
                               the reload of the
                               inventory, which
                               in the case of
                               dynamic inventory
                               scripts means
                               they will be re-
                               executed. This is
                               mainly useful
                               when additional
                               hosts are created
                               and users wish to
                               use them instead
                               of using the
                               `add_host`
                               module. `noop'
                               (added in 2.0)
                               This literally
                               does 'nothing'.
                               It is mainly used
                               internally and
                               not recommended
                               for general use.
                               `clear_facts'
                               (added in 2.1)
                               causes the
                               gathered facts
                               for the hosts
                               specified in the
                               play's list of
                               hosts to be
                               cleared,
                               including the
                               fact cache. `clea
                               r_host_errors'
                               (added in 2.1)
                               clears the failed
                               state (if any)
                               from hosts
                               specified in the
                               play's list of
                               hosts. `end_play'
                               (added in 2.2)
                               causes the play
                               to end without
                               failing the host.
- name: Add or remove kernel modules
  action: modprobe
      name=                  # Name of kernel module to manage.
      params                 # Modules parameters.
      state                  # Whether the module should be present or absent.
- name: Change an administrative parameter on a MongoDB server.
  action: mongodb_parameter
      database=              # The name of the database to add/remove the user
                               from
      login_database         # The database where login credentials are stored
      login_host             # The host running the database
      login_password         # The password used to authenticate with
      login_port             # The port to connect to
      login_user             # The username used to authenticate with
      param=                 # MongoDB administrative parameter to modify
      param_type             # Define the parameter value (str, int)
      replica_set            # Replica set to connect to (automatically
                               connects to
                               primary for
                               writes)
      ssl                    # Whether to use an SSL connection when connecting
                               to the database
      value=                 # MongoDB administrative parameter value to set
- name: Adds or removes a user from a MongoDB database.
  action: mongodb_user
      database=              # The name of the database to add/remove the user
                               from
      login_database         # The database where login credentials are stored
      login_host             # The host running the database
      login_password         # The password used to authenticate with
      login_port             # The port to connect to
      login_user             # The username used to authenticate with
      name=                  # The name of the user to add or remove
      password               # The password to use for the user
      replica_set            # Replica set to connect to (automatically
                               connects to
                               primary for
                               writes)
      roles                  # The database user roles valid values could
                               either be one or
                               more of the
                               following
                               strings: 'read',
                               'readWrite',
                               'dbAdmin',
                               'userAdmin',
                               'clusterAdmin', '
                               readAnyDatabase',
                               'readWriteAnyData
                               base', 'userAdmin
                               AnyDatabase', 'db
                               AdminAnyDatabase'
                               Or the following
                               dictionary '{ db:
                               DATABASE_NAME,
                               role: ROLE_NAME
                               }'. This param
                               requires pymongo
                               2.5+. If it is a
                               string, mongodb
                               2.4+ is also
                               required. If it
                               is a dictionary,
                               mongo 2.6+  is
                               required.
      ssl                    # Whether to use an SSL connection when connecting
                               to the database
      ssl_cert_reqs          # Specifies whether a certificate is required from
                               the other side of
                               the connection,
                               and whether it
                               will be validated
                               if provided.
      state                  # The database user state
      update_password        # `always' will update passwords if they differ.
                               `on_create' will
                               only set the
                               password for
                               newly created
                               users.
- name: Manage the state of a program monitored via Monit
  action: monit
      name=                  # The name of the `monit' program/process to
                               manage
      state=                 # The state of service
      timeout                # If there are pending actions for the service
                               monitored by
                               monit, then
                               Ansible will
                               check for up to
                               this many seconds
                               to verify the the
                               requested action
                               has been
                               performed.
                               Ansible will
                               sleep for five
                               seconds between
                               each check.
- name: Control active and configured mount points
  action: mount
      boot                   # Determines if the filesystem should be mounted
                               on boot. Only
                               applies to
                               Solaris systems.
      dump                   # Dump (see fstab(5)). Note that if set to `null'
                               and `state' set
                               to `present', it
                               will cease to
                               work and
                               duplicate entries
                               will be made with
                               subsequent runs.
                               Has no effect on
                               Solaris systems.
      fstab                  # File to use instead of `/etc/fstab'. You
                               shouldn't use
                               that option
                               unless you really
                               know what you are
                               doing. This might
                               be useful if you
                               need to configure
                               mountpoints in a
                               chroot
                               environment.
      fstype                 # Filesystem type. Required when `state' is
                               `present' or
                               `mounted'.
      name=                  # Path to the mount point (e.g. `/mnt/files')
      opts                   # Mount options (see fstab(5), or vfstab(4) on
                               Solaris).
      passno                 # Passno (see fstab(5)). Note that if set to
                               `null' and
                               `state' set to
                               `present', it
                               will cease to
                               work and
                               duplicate entries
                               will be made with
                               subsequent runs.
                               Deprecated on
                               Solaris systems.
      src                    # Device to be mounted on `name'. Required when
                               `state' set to
                               `present' or
                               `mounted'.
      state=                 # If `mounted' or `unmounted', the device will be
                               actively mounted
                               or unmounted as
                               needed and
                               appropriately
                               configured in
                               `fstab'. `absent'
                               and `present'
                               only deal with
                               `fstab' but will
                               not affect
                               current mounting.
                               If specifying
                               `mounted' and the
                               mount point is
                               not present, the
                               mount point will
                               be created.
                               Similarly,
                               specifying
                               `absent' will
                               remove the mount
                               point directory.
- name: Publish a message on an MQTT topic for the IoT
  action: mqtt
      client_id              # MQTT client identifier
      password               # Password for `username' to authenticate against
                               the broker.
      payload=               # Payload. The special string `"None"' may be used
                               to send a NULL
                               (i.e. empty)
                               payload which is
                               useful to simply
                               notify with the
                               `topic' or to
                               clear previously
                               retained
                               messages.
      port                   # MQTT broker port number
      qos                    # QoS (Quality of Service)
      retain                 # Setting this flag causes the broker to retain
                               (i.e. keep) the
                               message so that
                               applications that
                               subsequently
                               subscribe to the
                               topic can
                               received the last
                               retained message
                               immediately.
      server                 # MQTT broker address/name
      topic=                 # MQTT topic name
      username               # Username to authenticate against the broker.
- name: Add or remove MSSQL databases from a remote host.
  action: mssql_db
      autocommit             # Automatically commit the change only if the
                               import succeed.
                               Sometimes it is
                               necessary to use
                               autocommit=true,
                               since some
                               content can't be
                               changed within a
                               transaction.
      login_host             # Host running the database
      login_password         # The password used to authenticate with
      login_port             # Port of the MSSQL server. Requires login_host be
                               defined as other
                               then localhost if
                               login_port is
                               used
      login_user             # The username used to authenticate with
      name=                  # name of the database to add or remove
      state                  # The database state
      target                 # Location, on the remote host, of the dump file
                               to read from or
                               write to.
                               Uncompressed SQL
                               files (`.sql')
                               files are
                               supported.
- name: Add or remove MySQL databases from a remote host.
  action: mysql_db
      collation              # Collation mode (sorting). This only applies to
                               new
                               table/databases
                               and does not
                               update existing
                               ones, this is a
                               limitation of
                               MySQL.
      config_file            # Specify a config file from which user and
                               password are to
                               be read
      connect_timeout        # The connection timeout when connecting to the
                               MySQL server.
      encoding               # Encoding mode to use, examples include `utf8' or
                               `latin1_swedish_c
                               i'
      login_host             # Host running the database
      login_password         # The password used to authenticate with
      login_port             # Port of the MySQL server. Requires login_host be
                               defined as other
                               then localhost if
                               login_port is
                               used
      login_unix_socket      # The path to a Unix domain socket for local
                               connections
      login_user             # The username used to authenticate with
      name=                  # name of the database to add or remove name=all
                               May only be
                               provided if
                               `state' is `dump'
                               or `import'. if
                               name=all Works
                               like --all-
                               databases option
                               for mysqldump
                               (Added in 2.0)
      quick                  # Option used for dumping large tables
      single_transaction     # Execute the dump in a single transaction
      ssl_ca                 # The path to a Certificate Authority (CA)
                               certificate. This
                               option, if used,
                               must specify the
                               same certificate
                               as used by the
                               server.
      ssl_cert               # The path to a client public key certificate.
      ssl_key                # The path to the client private key.
      state                  # The database state
      target                 # Location, on the remote host, of the dump file
                               to read from or
                               write to.
                               Uncompressed SQL
                               files (`.sql') as
                               well as bzip2
                               (`.bz2'), gzip
                               (`.gz') and xz
                               (Added in 2.0)
                               compressed files
                               are supported.
- name: Manage MySQL replication
  action: mysql_replication
      config_file            # Specify a config file from which user and
                               password are to
                               be read
      connect_timeout        # The connection timeout when connecting to the
                               MySQL server.
      login_host             # Host running the database
      login_password         # The password used to authenticate with
      login_port             # Port of the MySQL server. Requires login_host be
                               defined as other
                               then localhost if
                               login_port is
                               used
      login_unix_socket      # The path to a Unix domain socket for local
                               connections
      login_user             # The username used to authenticate with
      master_auto_position   # does the host uses GTID based replication or not
      master_connect_retry   # same as mysql variable
      master_host            # same as mysql variable
      master_log_file        # same as mysql variable
      master_log_pos         # same as mysql variable
      master_password        # same as mysql variable
      master_port            # same as mysql variable
      master_ssl             # same as mysql variable
      master_ssl_ca          # same as mysql variable
      master_ssl_capath      # same as mysql variable
      master_ssl_cert        # same as mysql variable
      master_ssl_cipher      # same as mysql variable
      master_ssl_key         # same as mysql variable
      master_user            # same as mysql variable
      mode                   # module operating mode. Could be getslave (SHOW
                               SLAVE STATUS),
                               getmaster (SHOW
                               MASTER STATUS),
                               changemaster
                               (CHANGE MASTER
                               TO), startslave
                               (START SLAVE),
                               stopslave (STOP
                               SLAVE),
                               resetslave (RESET
                               SLAVE),
                               resetslaveall
                               (RESET SLAVE ALL)
      relay_log_file         # same as mysql variable
      relay_log_pos          # same as mysql variable
      ssl_ca                 # The path to a Certificate Authority (CA)
                               certificate. This
                               option, if used,
                               must specify the
                               same certificate
                               as used by the
                               server.
      ssl_cert               # The path to a client public key certificate.
      ssl_key                # The path to the client private key.
- name: Adds or removes a user from a MySQL database.
  action: mysql_user
      append_privs           # Append the privileges defined by priv to the
                               existing ones for
                               this user instead
                               of overwriting
                               existing ones.
      check_implicit_admin   # Check if mysql allows login as root/nopassword
                               before trying
                               supplied
                               credentials.
      config_file            # Specify a config file from which user and
                               password are to
                               be read
      connect_timeout        # The connection timeout when connecting to the
                               MySQL server.
      encrypted              # Indicate that the 'password' field is a
                               `mysql_native_pas
                               sword` hash
      host                   # the 'host' part of the MySQL username
      host_all               # override the host option, making ansible apply
                               changes to all
                               hostnames for a
                               given user.  This
                               option cannot be
                               used when
                               creating users
      login_host             # Host running the database
      login_password         # The password used to authenticate with
      login_port             # Port of the MySQL server. Requires login_host be
                               defined as other
                               then localhost if
                               login_port is
                               used
      login_unix_socket      # The path to a Unix domain socket for local
                               connections
      login_user             # The username used to authenticate with
      name=                  # name of the user (role) to add or remove
      password               # set the user's password.
      priv                   # MySQL privileges string in the format:
                               `db.table:priv1,p
                               riv2'
      sql_log_bin            # Whether binary logging should be enabled or
                               disabled for the
                               connection.
      ssl_ca                 # The path to a Certificate Authority (CA)
                               certificate. This
                               option, if used,
                               must specify the
                               same certificate
                               as used by the
                               server.
      ssl_cert               # The path to a client public key certificate.
      ssl_key                # The path to the client private key.
      state                  # Whether the user should exist.  When `absent',
                               removes the user.
      update_password        # `always' will update passwords if they differ.
                               `on_create' will
                               only set the
                               password for
                               newly created
                               users.
- name: Manage MySQL global variables
  action: mysql_variables
      config_file            # Specify a config file from which user and
                               password are to
                               be read
      connect_timeout        # The connection timeout when connecting to the
                               MySQL server.
      login_host             # Host running the database
      login_password         # The password used to authenticate with
      login_port             # Port of the MySQL server. Requires login_host be
                               defined as other
                               then localhost if
                               login_port is
                               used
      login_unix_socket      # The path to a Unix domain socket for local
                               connections
      login_user             # The username used to authenticate with
      ssl_ca                 # The path to a Certificate Authority (CA)
                               certificate. This
                               option, if used,
                               must specify the
                               same certificate
                               as used by the
                               server.
      ssl_cert               # The path to a client public key certificate.
      ssl_key                # The path to the client private key.
      value                  # If set, then sets variable value to this
      variable=              # Variable name to operate
- name: Perform common tasks in Nagios related to downtime and notifications.
  action: nagios
      action=                # Action to take. servicegroup options were added
                               in 2.0.
                               delete_downtime
                               options were
                               added in 2.2.
      author                 # Author to leave downtime comments as. Only
                               usable with the
                               `downtime'
                               action.
      cmdfile                # Path to the nagios `command file' (FIFO pipe).
                               Only required if
                               auto-detection
                               fails.
      command=               # The raw command to send to nagios, which should
                               not include the
                               submitted time
                               header or the
                               line-feed
                               *Required* option
                               when using the
                               `command' action.
      comment                # Comment for `downtime' action.
      host                   # Host to operate on in Nagios.
      minutes                # Minutes to schedule downtime for. Only usable
                               with the
                               `downtime'
                               action.
      servicegroup           # The Servicegroup we want to set downtimes/alerts
                               for. *Required*
                               option when using
                               the `servicegroup
                               _service_downtime
                               ' amd `servicegro
                               up_host_downtime'
                               .
      services=              # What to manage downtime/alerts for. Separate
                               multiple services
                               with commas.
                               `service' is an
                               alias for
                               `services'.
                               *Required* option
                               when using the
                               `downtime',
                               `enable_alerts',
                               and
                               `disable_alerts'
                               actions.
- name: Create, Remove, and Update Asynchronous Mirror Groups
  action: netapp_e_amg
      api_password=          # The password to authenticate with the SANtricity
                               WebServices Proxy
                               or embedded REST
                               API.
      api_url=               # The url to the SANtricity WebServices Proxy or
                               embedded REST
                               API.
      api_username=          # The username to authenticate with the SANtricity
                               WebServices Proxy
                               or embedded REST
                               API.
      interfaceType          # The intended protocol to use if both Fibre and
                               iSCSI are
                               available.
      manualSync             # Setting this to true will cause other
                               synchronization
                               values to be
                               ignored
      name=                  # The name of the async array you wish to target,
                               or create. If
                               `state' is
                               present and the
                               name isn't found,
                               it will attempt
                               to create.
      recoveryWarnThresholdMinutes   # Recovery point warning threshold (minutes). The
                               user will be
                               warned when the
                               age of the last
                               good failures
                               point exceeds
                               this value
      repoUtilizationWarnThreshold   # Recovery point warning threshold
      secondaryArrayId=      # The ID of the secondary array to be used in
                               mirroing process
      ssid=                  # The ID of the primary storage array for the
                               async mirror
                               action
      state=                 # A `state' of present will either create or
                               update the async
                               mirror group. A
                               `state' of absent
                               will remove the
                               async mirror
                               group.
      syncIntervalMinutes    # The synchronization interval in minutes
      syncWarnThresholdMinutes   # The threshold (in minutes) for notifying the
                               user that
                               periodic
                               synchronization
                               has taken too
                               long to complete.
      validate_certs         # Should https certificates be validated?
- name: Update the role of a storage array within an Asynchronous Mirror Group (AMG).
  action: netapp_e_amg_role
      api_password=          # The password to authenticate with the SANtricity
                               WebServices Proxy
                               or embedded REST
                               API.
      api_url=               # The url to the SANtricity WebServices Proxy or
                               embedded REST
                               API.
      api_username=          # The username to authenticate with the SANtricity
                               WebServices Proxy
                               or embedded REST
                               API.
      force                  # Whether to force the role reversal regardless of
                               the online-state
                               of the primary
      noSync                 # Whether to avoid synchronization prior to role
                               reversal
      role=                  # Whether the array should be the primary or
                               secondary array
                               for the AMG
      ssid=                  # The ID of the primary storage array for the
                               async mirror
                               action
      validate_certs         # Should https certificates be validated?
- name: Conduct synchronization actions on asynchronous member groups.
  action: netapp_e_amg_sync
      api_password=          # The password to authenticate with the SANtricity
                               WebServices Proxy
                               or embedded REST
                               API.
      api_url=               # The url to the SANtricity WebServices Proxy or
                               embedded REST
                               API.
      api_username=          # The username to authenticate with the SANtricity
                               WebServices Proxy
                               or embedded REST
                               API.
      delete_recovery_point   # Indicates whether the failures point can be
                               deleted on the
                               secondary if
                               necessary to
                               achieve the
                               synchronization.
                               If true, and if
                               the amount of
                               unsynchronized
                               data exceeds the
                               CoW repository
                               capacity on the
                               secondary for any
                               member volume,
                               the last failures
                               point will be
                               deleted and
                               synchronization
                               will continue. If
                               false, the
                               synchronization
                               will be suspended
                               if the amount of
                               unsynchronized
                               data exceeds the
                               CoW Repository
                               capacity on the
                               secondary and the
                               failures point
                               will be
                               preserved. NOTE:
                               This only has
                               impact for newly
                               launched syncs.
      name=                  # The name of the async mirror group you wish to
                               target
      ssid                   # The ID of the storage array containing the AMG
                               you wish to
                               target
      state=                 # The synchronization action you'd like to take.
                               If `running' then
                               it will begin
                               syncing if there
                               is no active sync
                               or will resume a
                               suspended sync.
                               If there is
                               already a sync in
                               progress, it will
                               return with an OK
                               status. If
                               `suspended' it
                               will suspend any
                               ongoing sync
                               action, but
                               return OK if
                               there is no
                               active sync or if
                               the sync is
                               already suspended
      validate_certs         # Should https certificates be validated?
- name: Sets or updates the password for a storage array.
  action: netapp_e_auth
      api_password           # The password used to authenticate against the
                               API This can
                               optionally be set
                               via an
                               environment
                               variable,
                               API_PASSWORD
      api_url                # The full API url. Example:
                               http://ENDPOINT:8
                               080/devmgr/v2
                               This can
                               optionally be set
                               via an
                               environment
                               variable, API_URL
      api_username           # The username used to authenticate against the
                               API This can
                               optionally be set
                               via an
                               environment
                               variable,
                               API_USERNAME
      current_password       # The current admin password. This is not required
                               if the password
                               hasn't been set
                               before.
      name                   # The name of the storage array. Note that if more
                               than one storage
                               array with this
                               name is detected,
                               the task will
                               fail and you'll
                               have to use the
                               ID instead.
      new_password=          # The password you would like to set. Cannot be
                               more than 30
                               characters.
      set_admin              # Boolean value on whether to update the admin
                               password. If set
                               to false then the
                               RO account is
                               updated.
      ssid                   # the identifier of the storage array in the Web
                               Services Proxy.
      validate_certs         # Should https certificates be validated?
- name: Get facts about NetApp E-Series arrays
  action: netapp_e_facts
      api_password=          # The password to authenticate with the SANtricity
                               WebServices Proxy
                               or embedded REST
                               API.
      api_url=               # The url to the SANtricity WebServices Proxy or
                               embedded REST
                               API.
      api_username=          # The username to authenticate with the SANtricity
                               WebServices Proxy
                               or embedded REST
                               API.
      ssid=                  # The ID of the array to manage. This value must
                               be unique for
                               each array.
      validate_certs         # Should https certificates be validated?
- name: Manage NetApp SSD caches
  action: netapp_e_flashcache
      api_password=          # The password to authenticate with the SANtricity
                               WebServices Proxy
                               or embedded REST
                               API.
      api_url=               # The url to the SANtricity WebServices Proxy or
                               embedded REST
                               API.
      api_username=          # The username to authenticate with the SANtricity
                               WebServices Proxy
                               or embedded REST
                               API.
      cache_size_min         # The minimum size (in size_units) of the ssd
                               cache. The cache
                               will be expanded
                               if this exceeds
                               the current size
                               of the cache.
      disk_count             # The minimum number of disks to use for building
                               the cache. The
                               cache will be
                               expanded if this
                               number exceeds
                               the number of
                               disks already in
                               place
      io_type                # The type of workload to optimize the cache for.
      name=                  # The name of the SSD cache to manage
      size_unit              # The unit to be applied to size arguments
      ssid=                  # The ID of the array to manage (as configured on
                               the web services
                               proxy).
      state=                 # Whether the specified SSD cache should exist or
                               not.
      validate_certs         # Should https certificates be validated?
- name: manage eseries hosts
  action: netapp_e_host
      api_password=          # The password to authenticate with the SANtricity
                               WebServices Proxy
                               or embedded REST
                               API.
      api_url=               # The url to the SANtricity WebServices Proxy or
                               embedded REST
                               API.
      api_username=          # The username to authenticate with the SANtricity
                               WebServices Proxy
                               or embedded REST
                               API.
      group                  # the group you want the host to be a member of
      host_type_index=       # The index that maps to host type you wish to
                               create. It is
                               recommended to
                               use the
                               [netapp_e_facts]
                               module to gather
                               this information.
                               Alternatively you
                               can use the WSP
                               portal to
                               retrieve the
                               information.
      name=                  # If the host doesnt yet exist, the label to
                               assign at
                               creation time. If
                               the hosts already
                               exists, this is
                               what is used to
                               identify the host
                               to apply any
                               desired changes
      ports                  # a list of of dictionaries of host ports you wish
                               to associate with
                               the newly created
                               host
      ssid=                  # the id of the storage array you wish to act
                               against
      validate_certs         # Should https certificates be validated?
- name: Manage NetApp Storage Array Host Groups
  action: netapp_e_hostgroup
      api_password=          # The password to authenticate with the SANtricity
                               WebServices Proxy
                               or embedded REST
                               API.
      api_url=               # The url to the SANtricity WebServices Proxy or
                               embedded REST
                               API.
      api_username=          # The username to authenticate with the SANtricity
                               WebServices Proxy
                               or embedded REST
                               API.
      hosts                 # a list of host names/labels to add to the group
      id                     # The id number of the host group to manage.
                               Either this or
                               `name' must be
                               supplied.
      name                   # The name of the host group to manage. Either
                               this or `id_num'
                               must be supplied.
      new_name               # specify this when you need to update the name of
                               a host group
      ssid=                  # The ID of the array to manage (as configured on
                               the web services
                               proxy).
      state=                 # Whether the specified host group should exist or
                               not.
      validate_certs         # Should https certificates be validated?
- name: Create or Remove LUN Mappings
  action: netapp_e_lun_mapping
      api_password           # The password used to authenticate against the
                               API. This can
                               optionally be set
                               via an
                               environment
                               variable,
                               API_PASSWORD
      api_url                # The full API url. Example:
                               http://ENDPOINT:8
                               080/devmgr/v2
                               This can
                               optionally be set
                               via an
                               environment
                               variable, API_URL
      api_username           # The username used to authenticate against the
                               API. This can
                               optionally be set
                               via an
                               environment
                               variable,
                               API_USERNAME
      lun                    # The LUN number you wish to give the mapping If
                               the supplied
                               `volume_name' is
                               associated with a
                               different LUN, it
                               will be updated
                               to what is
                               supplied here.
      ssid                   # The storage system array identifier.
      state=                 # Present will ensure the mapping exists, absent
                               will remove the
                               mapping. All
                               parameters `lun',
                               `target',
                               `target_type' and
                               `volume_name'
                               must still be
                               supplied.
      target                 # The name of host or hostgroup you wish to assign
                               to the mapping If
                               omitted, the
                               default hostgroup
                               is used. If the
                               supplied
                               `volume_name' is
                               associated with a
                               different target,
                               it will be
                               updated to what
                               is supplied here.
      target_type            # Whether the target is a host or group. Required
                               if supplying an
                               explicit target.
      validate_certs         # Should https certificates be validated?
      volume_name=           # The name of the volume you wish to include in
                               the mapping.
- name: Manage snapshot groups
  action: netapp_e_snapshot_group
      api_password=          # The password to authenticate with the SANtricity
                               WebServices Proxy
                               or embedded REST
                               API.
      api_url=               # The url to the SANtricity WebServices Proxy or
                               embedded REST
                               API.
      api_username=          # The username to authenticate with the SANtricity
                               WebServices Proxy
                               or embedded REST
                               API.
      base_volume_name=      # The name of the base volume or thin volume to
                               use as the base
                               for the new
                               snapshot group.
                               If a snapshot
                               group with an
                               identical `name'
                               already exists
                               but with a
                               different base
                               volume an error
                               will be returned.
      delete_limit           # The automatic deletion indicator. If non-zero,
                               the oldest
                               snapshot image
                               will be
                               automatically
                               deleted when
                               creating a new
                               snapshot image to
                               keep the total
                               number of
                               snapshot images
                               limited to the
                               number specified.
                               This value is
                               overridden by the
                               consistency group
                               setting if this
                               snapshot group is
                               associated with a
                               consistency
                               group.
      full_policy            # The behavior on when the data repository becomes
                               full. This value
                               is overridden by
                               consistency group
                               setting if this
                               snapshot group is
                               associated with a
                               consistency group
      name=                  # The name to give the snapshot group
      repo_pct               # The size of the repository in relation to the
                               size of the base
                               volume
      rollback_priority      # The importance of the rollback operation. This
                               value is
                               overridden by
                               consistency group
                               setting if this
                               snapshot group is
                               associated with a
                               consistency group
      state=                 # Whether to ensure the group is present or
                               absent.
      storage_pool_name=     # The name of the storage pool on which to
                               allocate the
                               repository
                               volume.
      validate_certs         # Should https certificates be validated?
      warning_threshold      # The repository utilization warning threshold, as
                               a percentage of
                               the repository
                               volume capacity.
- name: Create and delete snapshot images
  action: netapp_e_snapshot_images
      api_password=          # The password to authenticate with the SANtricity
                               WebServices Proxy
                               or embedded REST
                               API.
      api_url=               # The url to the SANtricity WebServices Proxy or
                               embedded REST
                               API.
      api_username=          # The username to authenticate with the SANtricity
                               WebServices Proxy
                               or embedded REST
                               API.
      snapshot_group=        # The name of the snapshot group in which you want
                               to create a
                               snapshot image.
      state=                 # Whether a new snapshot image should be created
                               or oldest be
                               deleted.
      validate_certs         # Should https certificates be validated?
- name: Manage E/EF-Series snapshot volumes.
  action: netapp_e_snapshot_volume
      api_password=          # The password to authenticate with the SANtricity
                               WebServices Proxy
                               or embedded REST
                               API.
      api_url=               # The url to the SANtricity WebServices Proxy or
                               embedded REST
                               API.
      api_username=          # The username to authenticate with the SANtricity
                               WebServices Proxy
                               or embedded REST
                               API.
      full_threshold         # The repository utilization warning threshold
                               percentage
      name=                  # The name you wish to give the snapshot volume
      repo_percentage        # The size of the view in relation to the size of
                               the base volume
      snapshot_image_id=     # The identifier of the snapshot image used to
                               create the new
                               snapshot volume.
                               Note: You'll
                               likely want to
                               use the
                               [netapp_e_facts]
                               module to find
                               the ID of the
                               image you want.
      ssid=                  # storage array ID
      state=                 # Whether to create or remove the snapshot volume
      storage_pool_name=     # Name of the storage pool on which to allocate
                               the repository
                               volume.
      validate_certs         # Should https certificates be validated?
      view_mode=             # The snapshot volume access mode
- name: Add/remove arrays from the Web Services Proxy
  action: netapp_e_storage_system
      api_password=          # The password to authenticate with the SANtricity
                               WebServices Proxy
                               or embedded REST
                               API.
      api_url=               # The url to the SANtricity WebServices Proxy or
                               embedded REST
                               API.
      api_username=          # The username to authenticate with the SANtricity
                               WebServices Proxy
                               or embedded REST
                               API.
      array_password         # The management password of the array to manage,
                               if set.
      array_wwn              # The WWN of the array to manage. Only necessary
                               if in-band
                               managing multiple
                               arrays on the
                               same agent host.
                               Mutually
                               exclusive of cont
                               roller_addresses
                               parameter.
      controller_addresses=   # The list addresses for the out-of-band
                               management
                               adapter or the
                               agent host.
                               Mutually
                               exclusive of
                               array_wwn
                               parameter.
      enable_trace           # Enable trace logging for SYMbol calls to the
                               storage system.
      meta_tags              # Optional meta tags to associate to this storage
                               system
      ssid=                  # The ID of the array to manage. This value must
                               be unique for
                               each array.
      state=                 # Whether the specified array should be configured
                               on the Web
                               Services Proxy or
                               not.
      validate_certs         # Should https certificates be validated?
- name: Manage disk groups and disk pools
  action: netapp_e_storagepool
      api_password=          # The password to authenticate with the SANtricity
                               WebServices Proxy
                               or embedded REST
                               API.
      api_url=               # The url to the SANtricity WebServices Proxy or
                               embedded REST
                               API.
      api_username=          # The username to authenticate with the SANtricity
                               WebServices Proxy
                               or embedded REST
                               API.
      criteria_drive_count   # The number of disks to use for building the
                               storage pool. The
                               pool will be
                               expanded if this
                               number exceeds
                               the number of
                               disks already in
                               place
      criteria_drive_interface_type   # The interface type to use when selecting drives
                               for the storage
                               pool (no value
                               means all
                               interface types
                               will be
                               considered)
      criteria_drive_min_size   # The minimum individual drive size (in size_unit)
                               to consider when
                               choosing drives
                               for the storage
                               pool.
      criteria_drive_require_fde   # Whether full disk encryption ability is required
                               for drives to be
                               added to the
                               storage pool
      criteria_drive_type    # The type of disk (hdd or ssd) to use when
                               searching for
                               candidates to
                               use.
      criteria_min_usable_capacity   # The minimum size of the storage pool (in
                               size_unit). The
                               pool will be
                               expanded if this
                               value exceeds
                               itscurrent size.
      criteria_size_unit     # The unit used to interpret size parameters
      erase_secured_drives   # Whether to erase secured disks before adding to
                               storage pool
      name=                  # The name of the storage pool to manage
      raid_level=            # Only required when the requested state is
                               'present'.  The
                               RAID level of the
                               storage pool to
                               be created.
      remove_volumes         # Prior to removing a storage pool, delete all
                               volumes in the
                               pool.
      reserve_drive_count    # Set the number of drives reserved by the storage
                               pool for
                               reconstruction
                               operations. Only
                               valide on raid
                               disk pools.
      secure_pool            # Whether to convert to a secure storage pool.
                               Will only work if
                               all drives in the
                               pool are security
                               capable.
      ssid=                  # The ID of the array to manage (as configured on
                               the web services
                               proxy).
      state=                 # Whether the specified storage pool should exist
                               or not. Note that
                               removing a
                               storage pool
                               currently
                               requires the
                               removal of all
                               defined volumes
                               first.
      validate_certs         # Should https certificates be validated?
- name: Manage storage volumes (standard and thin)
  action: netapp_e_volume
      api_password=          # The password to authenticate with the SANtricity
                               WebServices Proxy
                               or embedded REST
                               API.
      api_url=               # The url to the SANtricity WebServices Proxy or
                               embedded REST
                               API.
      api_username=          # The username to authenticate with the SANtricity
                               WebServices Proxy
                               or embedded REST
                               API.
      data_assurance_enabled   # If data assurance should be enabled for the
                               volume
      name=                  # The name of the volume to manage
      segment_size_kb        # The segment size of the new volume
      size=                  # Required only when state = 'present'.  The size
                               of the volume in
                               (size_unit).
      size_unit              # The unit used to interpret the size parameter
      ssd_cache_enabled      # Whether an existing SSD cache should be enabled
                               on the volume
                               (fails if no SSD
                               cache defined)
      ssid=                  # The ID of the array to manage (as configured on
                               the web services
                               proxy).
      state=                 # Whether the specified volume should exist or
                               not.
      storage_pool_name=     # Required only when requested state is 'present'.
                               The name of the
                               storage pool the
                               volume should
                               exist on.
      thin_provision         # Whether the volume should be thin provisioned.
                               Thin volumes can
                               only be created
                               on disk pools
                               (raidDiskPool).
      thin_volume_max_repo_size   # Maximum size that the thin volume repository
                               volume will
                               automatically
                               expand to
      thin_volume_repo_size=   # Initial size of the thin volume repository
                               volume (in
                               size_unit)
      validate_certs         # Should https certificates be validated?
- name: Create volume copy pairs
  action: netapp_e_volume_copy
      api_password=          # The password to authenticate with the SANtricity
                               WebServices Proxy
                               or embedded REST
                               API.
      api_url=               # The url to the SANtricity WebServices Proxy or
                               embedded REST
                               API.
      api_username=          # The username to authenticate with the SANtricity
                               WebServices Proxy
                               or embedded REST
                               API.
      create_copy_pair_if_does_not_exist   # Defines if a copy pair will be created if it
                               does not exist.
                               If set to True de
                               stination_volume_
                               id and
                               source_volume_id
                               are required.
      destination_volume_id   # The the id of the volume copy destination. If
                               used, must be
                               paired with
                               source_volume_id
                               Mutually
                               exclusive with vo
                               lume_copy_pair_id
                               , and
                               search_volume_id
      search_volume_id       # Searches for all valid potential target and
                               source volumes
                               that could be
                               used in a
                               copy_pair
                               Mutually
                               exclusive with vo
                               lume_copy_pair_id
                               , destination_vol
                               ume_id and
                               source_volume_id
      source_volume_id       # The the id of the volume copy source. If used,
                               must be paired
                               with destination_
                               volume_id
                               Mutually
                               exclusive with vo
                               lume_copy_pair_id
                               , and
                               search_volume_id
      start_stop_copy        # starts a re-copy or stops a copy in progress
                               Note: If you stop
                               the initial file
                               copy before it it
                               done the copy
                               pair will be
                               destroyed
                               Requires volume_c
                               opy_pair_id
      state=                 # Whether the specified volume copy pair should
                               exist or not.
      validate_certs         # Should https certificates be validated?
      volume_copy_pair_id    # The the id of a given volume copy pair Mutually
                               exclusive with de
                               stination_volume_
                               id,
                               source_volume_id,
                               and
                               search_volume_id
                               Can use to delete
                               or check presence
                               of volume pairs
                               Must specify this
                               or (destination_v
                               olume_id and
                               source_volume_id)
- name: netconf device configuration
  action: netconf_config
      host=                  # the hostname or ip address of the netconf device
      hostkey_verify         # if true, the ssh host key of the device must
                               match a ssh key
                               present on the
                               host if false,
                               the ssh host key
                               of the device is
                               not checked
      password=              # password of the user to authenticate with
      port                   # the netconf port
      username=              # the username to authenticate with
      xml=                   # the XML content to send to the device
- name: Manages Citrix NetScaler entities
  action: netscaler
      action                 # the action you want to perform on the entity
      name=                  # name of the entity
      nsc_host=              # hostname or ip of your netscaler
      nsc_protocol           # protocol used to access netscaler
      password=              # password
      type                   # type of the entity
      user=                  # username
      validate_certs         # If `no', SSL certificates for the target url
                               will not be
                               validated. This
                               should only be
                               used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
- name: Notify newrelic about app deployments
  action: newrelic_deployment
      app_name               # (one of app_name or application_id are required)
                               The value of
                               app_name in the
                               newrelic.yml file
                               used by the
                               application
      application_id         # (one of app_name or application_id are required)
                               The application
                               id, found in the
                               URL when viewing
                               the application
                               in RPM
      appname                # Name of the application
      changelog              # A list of changes for this deployment
      description            # Text annotation for the deployment - notes for
                               you
      environment            # The environment for this deployment
      revision               # A revision number (e.g., git commit SHA)
      token=                 # API token, to place in the x-api-key header.
      user                   # The name of the user/process that triggered this
                               deployment
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
- name: Send a SMS via nexmo
  action: nexmo
      api_key=               # Nexmo API Key
      api_secret=            # Nexmo API Secret
      dest=                  # Phone number(s) to send SMS message to
      msg=                   # Message to text to send. Messages longer than
                               160 characters
                               will be split
                               into multiple
                               messages
      src=                   # Nexmo Number to send from
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
- name: Manage Networking
  action: nmcli
      ageingtime             # This is only used with bridge - [ageing-time
                               <0-1000000>] the
                               Ethernet MAC
                               address aging
                               time, in seconds
      arp_interval           # This is only used with bond - ARP interval
      arp_ip_target          # This is only used with bond - ARP IP target
      autoconnect            # Whether the connection should start on boot.
                               Whether the
                               connection
                               profile can be
                               automatically
                               activated
      conn_name=             # Where conn_name will be the name used to call
                               the connection.
                               when not provided
                               a default name is
                               generated: <type>
                               [-<ifname>][-<num
                               >]
      dns4                   # A list of upto 3 dns servers, ipv4 format e.g.
                               To add two IPv4
                               DNS server
                               addresses:
                               ["192.0.2.53",
                               "198.51.100.53"]
      dns6                   # A list of upto 3 dns servers, ipv6 format e.g.
                               To add two IPv6
                               DNS server
                               addresses: ["2001
                               :4860:4860::8888 
                               2001:4860:4860::8
                               844"]
      downdelay              # This is only used with bond - downdelay
      egress                 # This is only used with VLAN - VLAN egress
                               priority mapping
      flags                  # This is only used with VLAN - flags
      forwarddelay           # This is only used with bridge - [forward-delay
                               <2-30>] STP
                               forwarding delay,
                               in seconds
      gw4                    # The IPv4 gateway for this interface using this
                               format ie:
                               "192.0.2.1"
      gw6                    # The IPv6 gateway for this interface using this
                               format ie:
                               "2001:db8::1"
      hairpin                # This is only used with 'bridge-slave' - 'hairpin
                               mode' for the
                               slave, which
                               allows frames to
                               be sent back out
                               through the slave
                               the frame was
                               received on.
      hellotime              # This is only used with bridge - [hello-time
                               <1-10>] STP hello
                               time, in seconds
      ifname                 # Where IFNAME will be the what we call the
                               interface name.
                               interface to bind
                               the connection
                               to. The
                               connection will
                               only be
                               applicable to
                               this interface
                               name. A special
                               value of "*" can
                               be used for
                               interface-
                               independent
                               connections. The
                               ifname argument
                               is mandatory for
                               all connection
                               types except
                               bond, team,
                               bridge and vlan.
      ingress                # This is only used with VLAN - VLAN ingress
                               priority mapping
      ip4                    # The IPv4 address to this interface using this
                               format ie:
                               "192.0.2.24/24"
      ip6                    # The IPv6 address to this interface using this
                               format ie:
                               "abbe::cafe"
      mac                    # This is only used with bridge - MAC address of
                               the bridge (note:
                               this requires a
                               recent kernel
                               feature,
                               originally
                               introduced in
                               3.15 upstream
                               kernel)
      master                 # master <master (ifname, or connection UUID or
                               conn_name) of
                               bridge, team,
                               bond master
                               connection
                               profile.
      maxage                 # This is only used with bridge - [max-age <6-42>]
                               STP maximum
                               message age, in
                               seconds
      miimon                 # This is only used with bond - miimon
      mode                   # This is the type of device or network connection
                               that you wish to
                               create for a
                               bond, team or
                               bridge.
      mtu                    # The connection MTU, e.g. 9000. This can't be
                               applied when
                               creating the
                               interface and is
                               done once the
                               interface has
                               been created. Can
                               be used when
                               modifying Team,
                               VLAN, Ethernet
                               (Future plans to
                               implement wifi,
                               pppoe,
                               infiniband)
      path_cost              # This is only used with 'bridge-slave' -
                               [<1-65535>] - STP
                               port cost for
                               destinations via
                               this slave
      primary                # This is only used with bond and is the primary
                               interface name
                               (for "active-
                               backup" mode),
                               this is the
                               usually the
                               'ifname'
      priority               # This is only used with 'bridge' - sets STP
                               priority
      slavepriority          # This is only used with 'bridge-slave' - [<0-63>]
                               - STP priority of
                               this slave
      state=                 # Whether the device should exist or not, taking
                               action if the
                               state is
                               different from
                               what is stated.
      stp                    # This is only used with bridge and controls
                               whether Spanning
                               Tree Protocol
                               (STP) is enabled
                               for this bridge
      type                   # This is the type of device or network connection
                               that you wish to
                               create.
      updelay                # This is only used with bond - updelay
      vlandev                # This is only used with VLAN - parent device this
                               VLAN is on, can
                               use ifname
      vlanid                 # This is only used with VLAN - VLAN ID in range
                               <0-4095>
- name: Manage node.js packages with npm
  action: npm
      executable             # The executable location for npm. This is useful
                               if you are using
                               a version
                               manager, such as
                               nvm
      global                 # Install the node.js library globally
      ignore_scripts         # Use the --ignore-scripts flag when installing.
      name                   # The name of a node.js library to install
      path                   # The base path where to install the node.js
                               libraries
      production             # Install dependencies in production mode,
                               excluding
                               devDependencies
      registry               # The registry to install modules from.
      state                  # The state of the node.js library
      version                # The version to be installed
- name: Manages AAA server global configuration.
  action: nxos_aaa_server
      deadtime               # Duration for which a non-reachable AAA server is
                               skipped, in
                               minutes. Range is
                               1-1440. Device
                               default is 0.
      directed_request       # Enables direct authentication requests to AAA
                               server. Device
                               default is
                               disabled.
      encrypt_type           # The state of encryption applied to the entered
                               global key. O
                               clear text, 7
                               encrypted. Type-6
                               encryption is not
                               supported.
      global_key             # Global AAA shared secret.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      server_timeout         # Global AAA server timeout period, in seconds.
                               Range is 1-60.
                               Device default is
                               5.
      server_type=           # The server type is either radius or tacacs.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state=                 # Manage the state of the resource.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Manages AAA server host-specific configuration.
  action: nxos_aaa_server_host
      acct_port              # Alternate UDP port for RADIUS accounting.
      address=               # Address or name of the radius or tacacs host.
      auth_port              # Alternate UDP port for RADIUS authentication.
      encrypt_type           # The state of encryption applied to the entered
                               key. O for clear
                               text, 7 for
                               encrypted. Type-6
                               encryption is not
                               supported.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      host_timeout           # Timeout period for specified host, in seconds.
                               Range is 1-60.
      key                    # Shared secret for the specified host.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      server_type=           # The server type is either radius or tacacs.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state                  # Manage the state of the resource.
      tacacs_port            # Alternate TCP port TACACS Server.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Manages access list entries for ACLs.
  action: nxos_acl
      ack                    # Match on the ACK bit.
      action                 # Action of the ACE.
      dest                   # Destination ip and mask using IP/MASK notation
                               and supports the
                               keyword 'any'.
      dest_port1             # Port/protocol and also first (lower) port when
                               using range
                               operand.
      dest_port2             # Second (end) port when using range operand.
      dest_port_op           # Destination port operands such as eq, neq, gt,
                               lt, range.
      dscp                   # Match packets with given dscp value.
      established            # Match established connections.
      fin                    # Match on the FIN bit.
      fragments              # Check non-initial fragments.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      log                    # Log matches against this entry.
      name=                  # Case sensitive name of the access list (ACL).
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      precedence             # Match packets with given precedence.
      proto                  # Port number or protocol (as supported by the
                               switch).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      psh                    # Match on the PSH bit.
      remark                 # If action is set to remark, this is the
                               description.
      rst                    # Match on the RST bit.
      seq                    # Sequence number of the entry (ACE).
      src                    # Source ip and mask using IP/MASK notation and
                               supports keyword
                               'any'.
      src_port1              # Port/protocol and also first (lower) port when
                               using range
                               operand.
      src_port2              # Second (end) port when using range operand.
      src_port_op            # Source port operands such as eq, neq, gt, lt,
                               range.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state                  # Specify desired state of the resource.
      syn                    # Match on the SYN bit.
      time-range             # Name of time-range to apply.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      urg                    # Match on the URG bit.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Manages applying ACLs to interfaces.
  action: nxos_acl_interface
      direction=             # Direction ACL to be applied in on the interface.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      interface=             # Full name of interface, e.g. `Ethernet1/1'.
      name=                  # Case sensitive name of the access list (ACL).
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state                  # Specify desired state of the resource.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Manages BGP configuration.
  action: nxos_bgp
      asn=                   # BGP autonomous system number. Valid values are
                               String, Integer
                               in ASPLAIN or
                               ASDOT notation.
      bestpath_always_compare_med   # Enable/Disable MED comparison on paths from
                               different
                               autonomous
                               systems.
      bestpath_aspath_multipath_relax   # Enable/Disable load sharing across the providers
                               with different
                               (but equal-
                               length) AS paths.
      bestpath_compare_routerid   # Enable/Disable comparison of router IDs for
                               identical eBGP
                               paths.
      bestpath_cost_community_ignore   # Enable/Disable Ignores the cost community for
                               BGP best-path
                               calculations.
      bestpath_med_confed    # Enable/Disable enforcement of bestpath to do a
                               MED comparison
                               only between
                               paths originated
                               within a
                               confederation.
      bestpath_med_missing_as_worst   # Enable/Disable assigns the value of infinity to
                               received routes
                               that do not carry
                               the MED
                               attribute, making
                               these routes the
                               least desirable.
      bestpath_med_non_deterministic   # Enable/Disable deterministic selection of the
                               best MED pat from
                               among the paths
                               from the same
                               autonomous
                               system.
      cluster_id             # Route Reflector Cluster-ID.
      confederation_id       # Routing domain confederation AS.
      confederation_peers    # AS confederation parameters.
      disable_policy_batching   # Enable/Disable the batching evaluation of prefix
                               advertisement to
                               all peers.
      disable_policy_batching_ipv4_prefix_list   # Enable/Disable the batching evaluation of prefix
                               advertisements to
                               all peers with
                               prefix list.
      disable_policy_batching_ipv6_prefix_list   # Enable/Disable the batching evaluation of prefix
                               advertisements to
                               all peers with
                               prefix list.
      enforce_first_as       # Enable/Disable enforces the neighbor autonomous
                               system to be the
                               first AS number
                               listed in the AS
                               path attribute
                               for eBGP. On NX-
                               OS, this property
                               is only supported
                               in the global BGP
                               context.
      event_history_cli      # Enable/Disable cli event history buffer.
      event_history_detail   # Enable/Disable detail event history buffer.
      event_history_events   # Enable/Disable event history buffer.
      event_history_periodic   # Enable/Disable periodic event history buffer.
      fast_external_fallover   # Enable/Disable immediately reset the session if
                               the link to a
                               directly
                               connected BGP
                               peer goes down.
                               Only supported in
                               the global BGP
                               context.
      flush_routes           # Enable/Disable flush routes in RIB upon
                               controlled
                               restart. On NX-
                               OS, this property
                               is only supported
                               in the global BGP
                               context.
      graceful_restart       # Enable/Disable graceful restart.
      graceful_restart_helper   # Enable/Disable graceful restart helper mode.
      graceful_restart_timers_restart   # Set maximum time for a restart sent to the BGP
                               peer.
      graceful_restart_timers_stalepath_time   # Set maximum time that BGP keeps the stale routes
                               from the
                               restarting BGP
                               peer.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      isolate                # Enable/Disable isolate this router from BGP
                               perspective.
      local_as               # Local AS number to be used within a VRF
                               instance.
      log_neighbor_changes   # Enable/Disable message logging for neighbor
                               up/down event.
      maxas_limit            # Specify Maximum number of AS numbers allowed in
                               the AS-path
                               attribute. Valid
                               values are
                               between 1 and
                               512.
      neighbor_down_fib_accelerate   # Enable/Disable handle BGP neighbor down event,
                               due to various
                               reasons.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      reconnect_interval     # The BGP reconnection interval for dropped
                               sessions. Valid
                               values are
                               between 1 and 60.
      router_id              # Router Identifier (ID) of the BGP router VRF
                               instance.
      shutdown               # Administratively shutdown the BGP protocol.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state                  # Determines whether the config should be present
                               or not on the
                               device.
      suppress_fib_pending   # Enable/Disable advertise only routes programmed
                               in hardware to
                               peers.
      timer_bestpath_limit   # Specify timeout for the first best path after a
                               restart, in
                               seconds.
      timer_bestpath_limit_always   # Enable/Disable update-delay-always option.
      timer_bgp_hold         # Set BGP hold timer.
      timer_bgp_keepalive    # Set BGP keepalive timer.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
      vrf                    # Name of the VRF. The name 'default' is a valid
                               VRF representing
                               the global BGP.
- name: Manages BGP Address-family configuration.
  action: nxos_bgp_af
      additional_paths_install   # Install a backup path into the forwarding table
                               and provide
                               prefix
                               independent
                               convergence (PIC)
                               in case of a PE-
                               CE link failure.
      additional_paths_receive   # Enables the receive capability of additional
                               paths for all of
                               the neighbors
                               under this
                               address family
                               for which the
                               capability has
                               not been
                               disabled.
      additional_paths_selection   # Configures the capability of selecting
                               additional paths
                               for a prefix.
                               Valid values are
                               a string defining
                               the name of the
                               route-map.
      additional_paths_send   # Enables the send capability of additional paths
                               for all of the
                               neighbors under
                               this address
                               family for which
                               the capability
                               has not been
                               disabled.
      advertise_l2vpn_evpn   # Advertise evpn routes.
      afi=                   # Address Family Identifier.
      asn=                   # BGP autonomous system number. Valid values are
                               String, Integer
                               in ASPLAIN or
                               ASDOT notation.
      client_to_client       # Configure client-to-client route reflection.
      dampen_igp_metric      # Specify dampen value for IGP metric-related
                               changes, in
                               seconds. Valid
                               values are
                               integer and
                               keyword
                               'default'.
      dampening_half_time    # Specify decay half-life in minutes for route-
                               flap dampening.
                               Valid values are
                               integer and
                               keyword
                               'default'.
      dampening_max_suppress_time   # Specify max suppress time for route-flap
                               dampening stable
                               route. Valid
                               values are
                               integer and
                               keyword
                               'default'.
      dampening_reuse_time   # Specify route reuse time for route-flap
                               dampening. Valid
                               values are
                               integer and
                               keyword
                               'default'.
      dampening_routemap     # Specify route-map for route-flap dampening.
                               Valid values are
                               a string defining
                               the name of the
                               route-map.
      dampening_state        # Enable/disable route-flap dampening.
      dampening_suppress_time   # Specify route suppress time for route-flap
                               dampening. Valid
                               values are
                               integer and
                               keyword
                               'default'.
      default_information_originate   # Default information originate.
      default_metric         # Sets default metrics for routes redistributed
                               into BGP. Valid
                               values are
                               Integer or
                               keyword 'default'
      distance_ebgp          # Sets the administrative distance for eBGP
                               routes. Valid
                               values are
                               Integer or
                               keyword
                               'default'.
      distance_ibgp          # Sets the administrative distance for iBGP
                               routes. Valid
                               values are
                               Integer or
                               keyword
                               'default'.
      distance_local         # Sets the administrative distance for local BGP
                               routes. Valid
                               values are
                               Integer or
                               keyword
                               'default'.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      inject_map             # An array of route-map names which will specify
                               prefixes to
                               inject. Each
                               array entry must
                               first specify the
                               inject-map name,
                               secondly an
                               exist-map name,
                               and optionally
                               the copy-
                               attributes
                               keyword which
                               indicates that
                               attributes should
                               be copied from
                               the aggregate.
                               For example [['la
                               x_inject_map',
                               'lax_exist_map'],
                               ['nyc_inject_map'
                               ,
                               'nyc_exist_map',
                               'copy-
                               attributes'], ['f
                               sd_inject_map', '
                               fsd_exist_map']].
      maximum_paths          # Configures the maximum number of equal-cost
                               paths for load
                               sharing. Valid
                               value is an
                               integer in the
                               range 1-64.
      maximum_paths_ibgp     # Configures the maximum number of ibgp equal-cost
                               paths for load
                               sharing. Valid
                               value is an
                               integer in the
                               range 1-64.
      networks               # Networks to configure. Valid value is a list of
                               network prefixes
                               to advertise. The
                               list must be in
                               the form of an
                               array. Each entry
                               in the array must
                               include a prefix
                               address and an
                               optional route-
                               map. For example
                               [['10.0.0.0/16',
                               'routemap_LA'],
                               ['192.168.1.1',
                               'Chicago'], ['192
                               .168.2.0/24], ['1
                               92.168.3.0/24',
                               'routemap_NYC']].
      next_hop_route_map     # Configure a route-map for valid nexthops. Valid
                               values are a
                               string defining
                               the name of the
                               route-map.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      redistribute           # A list of redistribute directives. Multiple
                               redistribute
                               entries are
                               allowed. The list
                               must be in the
                               form of a nested
                               array. the first
                               entry of each
                               array defines the
                               source-protocol
                               to redistribute
                               from; the second
                               entry defines a
                               route-map name. A
                               route-map is
                               highly advised
                               but may be
                               optional on some
                               platforms, in
                               which case it may
                               be omitted from
                               the array list.
                               For example
                               [['direct',
                               'rm_direct'],
                               ['lisp',
                               'rm_lisp']].
      safi=                  # Sub Address Family Identifier.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state                  # Determines whether the config should be present
                               or not on the
                               device.
      suppress_inactive      # Advertises only active routes to peers.
      table_map              # Apply table-map to filter routes downloaded into
                               URIB. Valid
                               values are a
                               string.
      table_map_filter       # Filters routes rejected by the route-map and
                               does not download
                               them to the RIB.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
      vrf=                   # Name of the VRF. The name 'default' is a valid
                               VRF representing
                               the global bgp.
- name: Manages BGP neighbors configurations.
  action: nxos_bgp_neighbor
      asn=                   # BGP autonomous system number. Valid values are
                               string, Integer
                               in ASPLAIN or
                               ASDOT notation.
      capability_negotiation   # Configure whether or not to negotiate capability
                               with this
                               neighbor.
      connected_check        # Configure whether or not to check for directly
                               connected peer.
      description            # Description of the neighbor.
      dynamic_capability     # Configure whether or not to enable dynamic
                               capability.
      ebgp_multihop          # Specify multihop TTL for a remote peer. Valid
                               values are
                               integers between
                               2 and 255, or
                               keyword 'default'
                               to disable this
                               property.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      local_as               # Specify the local-as number for the eBGP
                               neighbor. Valid
                               values are String
                               or Integer in
                               ASPLAIN or ASDOT
                               notation, or
                               'default', which
                               means not to
                               configure it.
      log_neighbor_changes   # Specify whether or not to enable log messages
                               for neighbor
                               up/down event.
      low_memory_exempt      # Specify whether or not to shut down this
                               neighbor under
                               memory pressure.
      maximum_peers          # Specify Maximum number of peers for this
                               neighbor prefix
                               Valid values are
                               between 1 and
                               1000, or
                               'default', which
                               does not impose
                               the limit.
      neighbor=              # Neighbor Identifier. Valid values are string.
                               Neighbors may use
                               IPv4 or IPv6
                               notation, with or
                               without prefix
                               length.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      pwd                    # Specify the password for neighbor. Valid value
                               is string.
      pwd_type               # Specify the encryption type the password will
                               use. Valid values
                               are '3des' or
                               'cisco_type_7'
                               encryption.
      remote_as              # Specify Autonomous System Number of the
                               neighbor. Valid
                               values are String
                               or Integer in
                               ASPLAIN or ASDOT
                               notation, or
                               'default', which
                               means not to
                               configure it.
      remove_private_as      # Specify the config to remove private AS number
                               from outbound
                               updates. Valid
                               values are
                               'enable' to
                               enable this
                               config, 'disable'
                               to disable this
                               config, 'all' to
                               remove all
                               private AS
                               number, or
                               'replace-as', to
                               replace the
                               private AS
                               number.
      shutdown               # Configure to administratively shutdown this
                               neighbor.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state                  # Determines whether the config should be present
                               or not on the
                               device.
      suppress_4_byte_as     # Configure to suppress 4-byte AS Capability.
      timers_holdtime        # Specify holdtime timer value. Valid values are
                               integers between
                               0 and 3600 in
                               terms of seconds,
                               or 'default',
                               which is 180.
      timers_keepalive       # Specify keepalive timer value. Valid values are
                               integers between
                               0 and 3600 in
                               terms of seconds,
                               or 'default',
                               which is 60.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      transport_passive_only   # Specify whether or not to only allow passive
                               connection setup.
                               Valid values are
                               'true', 'false',
                               and 'default',
                               which defaults to
                               'false'. This
                               property can only
                               be configured
                               when the neighbor
                               is in 'ip'
                               address format
                               without prefix
                               length. This
                               property and the 
                               transport_passive
                               _mode property
                               are mutually
                               exclusive.
      update_source          # Specify source interface of BGP session and
                               updates.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
      vrf                    # Name of the VRF. The name 'default' is a valid
                               VRF representing
                               the global bgp.
- name: Manages BGP address-family's neighbors configuration.
  action: nxos_bgp_neighbor_af
      additional_paths_receive   # Valid values are enable for basic command
                               enablement;
                               disable for
                               disabling the
                               command at the
                               neighbor af level
                               (it adds the
                               disable keyword
                               to the basic
                               command); and
                               inherit to remove
                               the command at
                               this level (the
                               command value is
                               inherited from a
                               higher BGP
                               layer).
      additional_paths_send   # Valid values are enable for basic command
                               enablement;
                               disable for
                               disabling the
                               command at the
                               neighbor af level
                               (it adds the
                               disable keyword
                               to the basic
                               command); and
                               inherit to remove
                               the command at
                               this level (the
                               command value is
                               inherited from a
                               higher BGP
                               layer).
      advertise_map_exist    # Conditional route advertisement. This property
                               requires two
                               route maps, an
                               advertise-map and
                               an exist-map.
                               Valid values are
                               an array
                               specifying both
                               the advertise-map
                               name and the
                               exist-map name,
                               or simply
                               'default' e.g. ['
                               my_advertise_map'
                               ,
                               'my_exist_map'].
                               This command is
                               mutually
                               exclusive with
                               the advertise_map
                               _non_exist
                               property.
      advertise_map_non_exist   # Conditional route advertisement. This property
                               requires two
                               route maps, an
                               advertise-map and
                               an exist-map.
                               Valid values are
                               an array
                               specifying both
                               the advertise-map
                               name and the non-
                               exist-map name,
                               or simply
                               'default' e.g. ['
                               my_advertise_map'
                               , 'my_non_exist_m
                               ap']. This
                               command is
                               mutually
                               exclusive with
                               the advertise_map
                               _exist property.
      afi=                   # Address Family Identifier.
      allowas_in             # Activate allowas-in property
      allowas_in_max         # Optional max-occurrences value for allowas_in.
                               Valid values are
                               an integer value
                               or 'default'. Can
                               be used
                               independently or
                               in conjunction
                               with allowas_in.
      as_override            # Activate the as-override feature.
      asn=                   # BGP autonomous system number. Valid values are
                               String, Integer
                               in ASPLAIN or
                               ASDOT notation.
      default_originate      # Activate the default-originate feature.
      default_originate_route_map   # Optional route-map for the default_originate
                               property. Can be
                               used
                               independently or
                               in conjunction
                               with `default_ori
                               ginate'. Valid
                               values are a
                               string defining a
                               route-map name,
                               or 'default'.
      filter_list_in         # Valid values are a string defining a filter-list
                               name, or
                               'default'.
      filter_list_out        # Valid values are a string defining a filter-list
                               name, or
                               'default'.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      max_prefix_interval    # Optional restart interval. Valid values are an
                               integer. Requires
                               max_prefix_limit.
      max_prefix_limit       # maximum-prefix limit value. Valid values are an
                               integer value or
                               'default'.
      max_prefix_threshold   # Optional threshold percentage at which to
                               generate a
                               warning. Valid
                               values are an
                               integer value.
                               Requires
                               max_prefix_limit.
      max_prefix_warning     # Optional warning-only keyword. Requires
                               max_prefix_limit.
      neighbor=              # Neighbor Identifier. Valid values are string.
                               Neighbors may use
                               IPv4 or IPv6
                               notation, with or
                               without prefix
                               length.
      next_hop_self          # Activate the next-hop-self feature.
      next_hop_third_party   # Activate the next-hop-third-party feature.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      prefix_list_in         # Valid values are a string defining a prefix-list
                               name, or
                               'default'.
      prefix_list_out        # Valid values are a string defining a prefix-list
                               name, or
                               'default'.
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      route_map_in           # Valid values are a string defining a route-map
                               name, or
                               'default'.
      route_map_out          # Valid values are a string defining a route-map
                               name, or
                               'default'.
      route_reflector_client   # Router reflector client.
      safi=                  # Sub Address Family Identifier.
      send_community         # send-community attribute.
      soft_reconfiguration_in   # Valid values are 'enable' for basic command
                               enablement;
                               'always' to add
                               the always
                               keyword to the
                               basic command;
                               and 'inherit' to
                               remove the
                               command at this
                               level (the
                               command value is
                               inherited from a
                               higher BGP
                               layer).
      soo                    # Site-of-origin. Valid values are a string
                               defining a VPN
                               extcommunity or
                               'default'.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state                  # Determines whether the config should be present
                               or not on the
                               device.
      suppress_inactive      # suppress-inactive feature.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      unsuppress_map         # unsuppress-map. Valid values are a string
                               defining a route-
                               map name or
                               'default'.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
      vrf                    # Name of the VRF. The name 'default' is a valid
                               VRF representing
                               the global bgp.
      weight                 # Weight value. Valid values are an integer value
                               or 'default'.
- name: Run arbitrary command on Cisco NXOS devices
  action: nxos_command
      commands=              # The commands to send to the remote NXOS device
                               over the
                               configured
                               provider.  The
                               resulting output
                               from the command
                               is returned.  If
                               the `wait_for'
                               argument is
                               provided, the
                               module is not
                               returned until
                               the condition is
                               satisfied or the
                               number of retires
                               as expired. The
                               `commands'
                               argument also
                               accepts an
                               alternative form
                               that allows for
                               complex values
                               that specify the
                               command to run
                               and the output
                               format to return.
                               This can be done
                               on a command by
                               command basis.
                               The complex
                               argument supports
                               the keywords
                               `command' and
                               `output' where
                               `command' is the
                               command to run
                               and `output' is
                               one of 'text' or
                               'json'.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      interval               # Configures the interval in seconds to wait
                               between retries
                               of the command.
                               If the command
                               does not pass the
                               specified
                               conditional, the
                               interval
                               indicates how to
                               long to wait
                               before trying the
                               command again.
      match                  # The `match' argument is used in conjunction with
                               the `wait_for'
                               argument to
                               specify the match
                               policy.  Valid
                               values are `all'
                               or `any'.  If the
                               value is set to
                               `all' then all
                               conditionals in
                               the `wait_for'
                               must be
                               satisfied.  If
                               the value is set
                               to `any' then
                               only one of the
                               values must be
                               satisfied.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      retries                # Specifies the number of retries a command should
                               by tried before
                               it is considered
                               failed.  The
                               command is run on
                               the target device
                               every retry and
                               evaluated against
                               the `wait_for'
                               conditionals.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
      wait_for               # Specifies what to evaluate from the output of
                               the command and
                               what conditionals
                               to apply.  This
                               argument will
                               cause the task to
                               wait for a
                               particular
                               conditional to be
                               true before
                               moving forward.
                               If the
                               conditional is
                               not true by the
                               configured
                               retries, the task
                               fails.  See
                               examples.
- name: Manage Cisco NXOS configuration sections
  action: nxos_config
      after                  # The ordered set of commands to append to the end
                               of the command
                               stack if a change
                               needs to be made.
                               Just like with
                               `before' this
                               allows the
                               playbook designer
                               to append a set
                               of commands to be
                               executed after
                               the command set.
      backup                 # This argument will cause the module to create a
                               full backup of
                               the current
                               `running-config'
                               from the remote
                               device before any
                               changes are made.
                               The backup file
                               is written to the
                               `backup' folder
                               in the playbook
                               root directory.
                               If the directory
                               does not exist,
                               it is created.
      before                 # The ordered set of commands to push on to the
                               command stack if
                               a change needs to
                               be made.  This
                               allows the
                               playbook designer
                               the opportunity
                               to perform
                               configuration
                               commands prior to
                               pushing any
                               changes without
                               affecting how the
                               set of commands
                               are matched
                               against the
                               system.
      config                 # The module, by default, will connect to the
                               remote device and
                               retrieve the
                               current running-
                               config to use as
                               a base for
                               comparing against
                               the contents of
                               source.  There
                               are times when it
                               is not desirable
                               to have the task
                               get the current
                               running-config
                               for every task in
                               a playbook.  The
                               `config' argument
                               allows the
                               implementer to
                               pass in the
                               configuration to
                               use as the base
                               config for
                               comparison.
      defaults               # The `defaults' argument will influence how the
                               running-config is
                               collected from
                               the device.  When
                               the value is set
                               to true, the
                               command used to
                               collect the
                               running-config is
                               append with the
                               all keyword.
                               When the value is
                               set to false, the
                               command is issued
                               without the all
                               keyword
      force                  # The force argument instructs the module to not
                               consider the
                               current devices
                               running-config.
                               When set to true,
                               this will cause
                               the module to
                               push the contents
                               of `src' into the
                               device without
                               first checking if
                               already
                               configured. Note
                               this argument
                               should be
                               considered
                               deprecated.  To
                               achieve the
                               equivalent, set
                               the `match=none'
                               which is
                               idempotent.  This
                               argument will be
                               removed in a
                               future release.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      lines                  # The ordered set of commands that should be
                               configured in the
                               section.  The
                               commands must be
                               the exact same
                               commands as found
                               in the device
                               running-config.
                               Be sure to note
                               the configuration
                               command syntax as
                               some commands are
                               automatically
                               modified by the
                               device config
                               parser.
      match                  # Instructs the module on the way to perform the
                               matching of the
                               set of commands
                               against the
                               current device
                               config.  If match
                               is set to `line',
                               commands are
                               matched line by
                               line.  If match
                               is set to
                               `strict', command
                               lines are matched
                               with respect to
                               position.  If
                               match is set to
                               `exact', command
                               lines must be an
                               equal match.
                               Finally, if match
                               is set to `none',
                               the module will
                               not attempt to
                               compare the
                               source
                               configuration
                               with the running
                               configuration on
                               the remote
                               device.
      parents                # The ordered set of parents that uniquely
                               identify the
                               section the
                               commands should
                               be checked
                               against.  If the
                               parents argument
                               is omitted, the
                               commands are
                               checked against
                               the set of top
                               level or global
                               commands.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      replace                # Instructs the module on the way to perform the
                               configuration on
                               the device.  If
                               the replace
                               argument is set
                               to `line' then
                               the modified
                               lines are pushed
                               to the device in
                               configuration
                               mode.  If the
                               replace argument
                               is set to `block'
                               then the entire
                               command block is
                               pushed to the
                               device in
                               configuration
                               mode if any line
                               is not correct.
      save                   # The `save' argument instructs the module to save
                               the running-
                               config to
                               startup-config.
                               This operation is
                               performed after
                               any changes are
                               made to the
                               current running
                               config.  If no
                               changes are made,
                               the configuration
                               is still saved to
                               the startup
                               config.  This
                               option will
                               always cause the
                               module to return
                               changed.
      src                    # The `src' argument provides a path to the
                               configuration
                               file to load into
                               the remote
                               system.  The path
                               can either be a
                               full system path
                               to the
                               configuration
                               file if the value
                               starts with / or
                               relative to the
                               root of the
                               implemented role
                               or playbook. This
                               argument is
                               mutually
                               exclusive with
                               the `lines' and
                               `parents'
                               arguments.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Handles the EVPN control plane for VXLAN.
  action: nxos_evpn_global
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      nv_overlay_evpn=       # EVPN control plane.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Manages Cisco EVPN VXLAN Network Identifier (VNI).
  action: nxos_evpn_vni
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      route_distinguisher=   # The VPN Route Distinguisher (RD). The RD is
                               combined with the
                               IPv4 or IPv6
                               prefix learned by
                               the PE router to
                               create a globally
                               unique address.
      route_target_both      # Enables/Disables route-target settings for both
                               import and export
                               target
                               communities using
                               a single
                               property.
      route_target_export    # Sets the route-target 'import' extended
                               communities.
      route_target_import    # Sets the route-target 'import' extended
                               communities.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state                  # Determines whether the config should be present
                               or not on the
                               device.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
      vni=                   # The EVPN VXLAN Network Identifier.
- name: Gets facts about NX-OS switches
  action: nxos_facts
      gather_subset          # When supplied, this argument will restrict the
                               facts collected
                               to a given
                               subset.  Possible
                               values for this
                               argument include
                               all, hardware,
                               config, legacy,
                               and interfaces.
                               Can specify a
                               list of values to
                               include a larger
                               subset.  Values
                               can also be used
                               with an initial
                               `[!]' to specify
                               that a specific
                               subset should not
                               be collected.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Manage features in NX-OS switches.
  action: nxos_feature
      feature=               # Name of feature.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state                  # Desired state of the feature.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Copy a file to a remote NXOS device over SCP.
  action: nxos_file_copy
      file_system            # The remote file system of the device. If
                               omitted, devices
                               that support a
                               file_system
                               parameter will
                               use their default
                               values.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      local_file=            # Path to local file. Local directory must exist.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      remote_file            # Remote file path of the copy. Remote directories
                               must exist. If
                               omitted, the name
                               of the local file
                               will be used.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Trigger a graceful removal or insertion (GIR) of the switch.
  action: nxos_gir
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state=                 # Specify desired state of the resource.
      system_mode_maintenance   # When `system_mode_maintenance=true' it puts all
                               enabled protocols
                               in maintenance
                               mode (using the
                               isolate command).
                               When `system_mode
                               _maintenance=fals
                               e' it puts all
                               enabled protocols
                               in normal mode
                               (using the no
                               isolate command).
      system_mode_maintenance_dont_generate_profile   # When `system_mode_maintenance_dont_generate_prof
                               ile=true' it
                               prevents the
                               dynamic searching
                               of enabled
                               protocols and
                               executes commands
                               configured in a
                               maintenance-mode
                               profile. Use this
                               option if you
                               want the system
                               to use a
                               maintenance-mode
                               profile that you
                               have created.
                               When `system_mode
                               _maintenance_dont
                               _generate_profile
                               =false' it
                               prevents the
                               dynamic searching
                               of enabled
                               protocols and
                               executes commands
                               configured in a
                               normal-mode
                               profile. Use this
                               option if you
                               want the system
                               to use a normal-
                               mode profile that
                               you have created.
      system_mode_maintenance_on_reload_reset_reason   # Boots the switch into maintenance mode
                               automatically in
                               the event of a
                               specified system
                               crash.
      system_mode_maintenance_shutdown   # Shuts down all protocols, vPC domains, and
                               interfaces except
                               the management
                               interface (using
                               the shutdown
                               command). This
                               option is
                               disruptive while 
                               `system_mode_main
                               tenance' (which
                               uses the isolate
                               command) is not.
      system_mode_maintenance_timeout   # Keeps the switch in maintenance mode for a
                               specified number
                               of minutes. Range
                               is 5-65535.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Create a maintenance-mode or normal-mode profile for GIR.
  action: nxos_gir_profile_management
      commands               # List of commands to be included into the
                               profile.
      config                 # Specify the configuration string to be used for
                               module
                               operations.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      include_defaults       # Specify to retrieve or not the complete running
                               configuration for
                               module
                               operations.
      mode=                  # Configure the profile as Maintenance or Normal
                               mode.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state                  # Specify desired state of the resource.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Manages HSRP configuration on NX-OS switches.
  action: nxos_hsrp
      auth_string            # Authentication string.
      auth_type              # Authentication type.
      group=                 # HSRP group number.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      interface=             # Full name of interface that is being managed for
                               HSRP.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      priority               # HSRP priority.
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state                  # Specify desired state of the resource.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
      version                # HSRP version.
      vip                    # HSRP virtual IP address.
- name: Manages IGMP global configuration.
  action: nxos_igmp
      enforce_rtr_alert      # Enables or disables the enforce router alert
                               option check for
                               IGMPv2 and IGMPv3
                               packets.
      flush_routes           # Removes routes when the IGMP process is
                               restarted. By
                               default, routes
                               are not flushed.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      restart                # Restarts the igmp process (using an exec config
                               command).
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state                  # Manages desired state of the resource.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Manages IGMP interface configuration.
  action: nxos_igmp_interface
      group_timeout          # Sets the group membership timeout for IGMPv2.
                               Values can range
                               from 3 to 65,535
                               seconds. The
                               default is 260
                               seconds.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      immediate_leave        # Enables the device to remove the group entry
                               from the
                               multicast routing
                               table immediately
                               upon receiving a
                               leave message for
                               the group. Use
                               this command to
                               minimize the
                               leave latency of
                               IGMPv2 group
                               memberships on a
                               given IGMP
                               interface because
                               the device does
                               not send group-
                               specific queries.
                               The default is
                               disabled.
      interface=             # The full interface name for IGMP configuration.
                               e.g.
                               `Ethernet1/2'.
      last_member_qrt        # Sets the query interval waited after sending
                               membership
                               reports before
                               the software
                               deletes the group
                               state. Values can
                               range from 1 to
                               25 seconds. The
                               default is 1
                               second.
      last_member_query_count   # Sets the number of times that the software sends
                               an IGMP query in
                               response to a
                               host leave
                               message. Values
                               can range from 1
                               to 5. The default
                               is 2.
      oif_prefix             # Configure a prefix for static outgoing interface
                               (OIF).
      oif_routemap           # Configure a routemap for static outgoing
                               interface (OIF).
      oif_source             # Configure a source for static outgoing interface
                               (OIF).
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      querier_timeout        # Sets the querier timeout that the software uses
                               when deciding to
                               take over as the
                               querier. Values
                               can range from 1
                               to 65535 seconds.
                               The default is
                               255 seconds.
      query_interval         # Sets the frequency at which the software sends
                               IGMP host query
                               messages. Values
                               can range from 1
                               to 18000 seconds.
                               he default is 125
                               seconds.
      query_mrt              # Sets the response time advertised in IGMP
                               queries. Values
                               can range from 1
                               to 25 seconds.
                               The default is 10
                               seconds.
      report_llg             # Configures report-link-local-groups. Enables
                               sending reports
                               for groups in
                               224.0.0.0/24.
                               Reports are
                               always sent for
                               nonlink local
                               groups. By
                               default, reports
                               are not sent for
                               link local
                               groups.
      restart                # Restart IGMP.
      robustness             # Sets the robustness variable. Values can range
                               from 1 to 7. The
                               default is 2.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      startup_query_count    # Query count used when the IGMP process starts
                               up. The range is
                               from 1 to 10. The
                               default is 2.
      startup_query_interval   # Query interval used when the IGMP process starts
                               up. The range is
                               from 1 to 18000.
                               The default is
                               31.
      state                  # Manages desired state of the resource.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
      version                # IGMP version. It can be 2 or 3.
- name: Manages IGMP snooping global configuration.
  action: nxos_igmp_snooping
      group_timeout          # Group membership timeout value for all VLANs on
                               the device.
                               Accepted values
                               are integer in
                               range 1-10080,
                               `never' and
                               `default'.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      link_local_grp_supp    # Global link-local groups suppression.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      report_supp            # Global IGMPv1/IGMPv2 Report Suppression.
      snooping               # Enables/disables IGMP snooping on the switch.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state                  # Manage the state of the resource.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
      v3_report_supp         # Global IGMPv3 Report Suppression and Proxy
                               Reporting.
- name: Set boot options like boot image and kickstart image.
  action: nxos_install_os
      kickstart_image_file   # Name of the kickstart image file on flash.
      system_image_file=     # Name of the system (or combined) image file on
                               flash.
- name: Manages physical attributes of interfaces.
  action: nxos_interface
      admin_state            # Administrative state of the interface.
      description            # Interface description.
      fabric_forwarding_anycast_gateway   # Associate SVI with anycast gateway under VLAN
                               configuration
                               mode.
      interface=             # Full name of interface, i.e. Ethernet1/1, port-
                               channel10.
      interface_type         # Interface type to be unconfigured from the
                               device.
      ip_forward             # Enable/Disable ip forward feature on SVIs.
      mode                   # Manage Layer 2 or Layer 3 state of the
                               interface.
      state=                 # Specify desired state of the resource.
- name: Manages configuration of an OSPF interface instance.
  action: nxos_interface_ospf
      area=                  # Ospf area associated with this
                               cisco_interface_o
                               spf instance.
                               Valid values are
                               a string,
                               formatted as an
                               IP address (i.e.
                               "0.0.0.0") or as
                               an integer.
      cost                   # The cost associated with this
                               cisco_interface_o
                               spf instance.
      dead_interval          # Time interval an ospf neighbor waits for a hello
                               packet before
                               tearing down
                               adjacencies.
                               Valid values are
                               an integer or the
                               keyword
                               'default'.
      hello_interval         # Time between sending successive hello packets.
                               Valid values are
                               an integer or the
                               keyword
                               'default'.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      interface=             # Name of this cisco_interface resource. Valid
                               value is a
                               string.
      message_digest         # Enables or disables the usage of message digest
                               authentication.
                               Valid values are
                               'true' and
                               'false'.
      message_digest_algorithm_type   # Algorithm used for authentication among
                               neighboring
                               routers within an
                               area. Valid
                               values is 'md5'.
      message_digest_encryption_type   # Specifies the scheme used for encrypting
                               message_digest_pa
                               ssword. Valid
                               values are '3des'
                               or 'cisco_type_7'
                               encryption.
      message_digest_key_id   # Md5 authentication key-id associated with the
                               ospf instance. If
                               this is present, 
                               message_digest_en
                               cryption_type, me
                               ssage_digest_algo
                               rithm_type and me
                               ssage_digest_pass
                               word are
                               mandatory. Valid
                               value is an
                               integer and
                               'default'.
      message_digest_password   # Specifies the message_digest password. Valid
                               value is a
                               string.
      ospf=                  # Name of the ospf instance.
      passive_interface      # Setting to true will prevent this interface from
                               receiving HELLO
                               packets. Valid
                               values are 'true'
                               and 'false'.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state                  # Determines whether the config should be present
                               or not on the
                               device.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Manages L3 attributes for IPv4 and IPv6 interfaces.
  action: nxos_ip_interface
      addr                   # IPv4 or IPv6 Address.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      interface=             # Full name of interface, i.e. Ethernet1/1,
                               vlan10.
      mask                   # Subnet mask for IPv4 or IPv6 Address in decimal
                               format.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state                  # Specify desired state of the resource.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Manages MTU settings on Nexus switch.
  action: nxos_mtu
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      interface              # Full name of interface, i.e. Ethernet1/1.
      mtu                    # MTU for a specific interface.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state                  # Specify desired state of the resource.
      sysmtu                 # System jumbo MTU.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Manages core NTP configuration.
  action: nxos_ntp
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      key_id                 # Authentication key identifier to use with given
                               NTP server or
                               peer.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      peer                   # Network address of NTP peer.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      prefer                 # Makes given NTP server or peer the preferred NTP
                               server or peer
                               for the device.
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      server                 # Network address of NTP server.
      source_addr            # Local source address from which NTP messages are
                               sent.
      source_int             # Local source interface from which NTP messages
                               are sent. Must be
                               fully qualified
                               interface name.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state                  # Manage the state of the resource.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
      vrf_name               # Makes the device communicate with the given NTP
                               server or peer
                               over a specific
                               VRF.
- name: Manages NTP authentication.
  action: nxos_ntp_auth
      auth_type              # Whether the given md5string is in cleartext or
                               has been
                               encrypted. If in
                               cleartext, the
                               device will
                               encrypt it before
                               storing it.
      authentication         # Turns NTP authentication on or off.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      key_id=                # Authentication key identifier (numeric).
      md5string=             # MD5 String.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state                  # Manage the state of the resource.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      trusted_key            # Whether the given key is required to be supplied
                               by a time source
                               for the device to
                               synchronize to
                               the time source.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Manages NTP options.
  action: nxos_ntp_options
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      logging                # Sets whether NTP logging is enabled on the
                               device.
      master                 # Sets whether the device is an authoritative NTP
                               server.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state                  # Manage the state of the resource.
      stratrum               # If `master=true', an optional stratum can be
                               supplied (1-15).
                               The device
                               default is 8.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Manage NXAPI configuration on an NXOS device.
  action: nxos_nxapi
      config                 # The `config' argument provides an optional
                               argument to
                               specify the
                               device running-
                               config to used as
                               the basis for
                               configuring the
                               remote system.
                               The `config'
                               argument accepts
                               a string value
                               that represents
                               the device
                               configuration.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      http                   # Controls the operating state of the HTTP
                               protocol as one
                               of the underlying
                               transports for
                               NXAPI.  By
                               default, NXAPI
                               will enable the
                               HTTP transport
                               when the feature
                               is first
                               configured.  To
                               disable the use
                               of the HTTP
                               transport, set
                               the value of this
                               argument to
                               False.
      http_port              # Configure the port with which the HTTP server
                               will listen on
                               for requests.  By
                               default, NXAPI
                               will bind the
                               HTTP service to
                               the standard HTTP
                               port 80.  This
                               argument accepts
                               valid port values
                               in the range of 1
                               to 65535.
      https                  # Controls the operating state of the HTTPS
                               protocol as one
                               of the underlying
                               transports for
                               NXAPI.  By
                               default, NXAPI
                               will disable the
                               HTTPS transport
                               when the feature
                               is first
                               configured.  To
                               enable the use of
                               the HTTPS
                               transport, set
                               the value of this
                               argument to True.
      https_port             # Configure the port with which the HTTPS server
                               will listen on
                               for requests.  By
                               default, NXAPI
                               will bind the
                               HTTPS service to
                               the standard
                               HTTPS port 443.
                               This argument
                               accepts valid
                               port values in
                               the range of 1 to
                               65535.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      sandbox                # The NXAPI feature provides a web base UI for
                               developers for
                               entering
                               commands.  This
                               feature is
                               initially
                               disabled when the
                               NXAPI feature is
                               configured for
                               the first time.
                               When the
                               `sandbox'
                               argument is set
                               to True, the
                               developer sandbox
                               URL will accept
                               requests and when
                               the value is set
                               to False, the
                               sandbox URL is
                               unavailable.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state                  # The `state' argument controls whether or not the
                               NXAPI feature is
                               configured on the
                               remote device.
                               When the value is
                               `present' the
                               NXAPI feature
                               configuration is
                               present in the
                               device running-
                               config.  When the
                               values is
                               `absent' the
                               feature
                               configuration is
                               removed from the
                               running-config.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Manages configuration of an ospf instance.
  action: nxos_ospf
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      ospf=                  # Name of the ospf instance.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state                  # Determines whether the config should be present
                               or not on the
                               device.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Manages a VRF for an OSPF router.
  action: nxos_ospf_vrf
      auto_cost              # Specifies the reference bandwidth used to assign
                               OSPF cost. Valid
                               values are an
                               integer, in Mbps,
                               or the keyword
                               'default'.
      default_metric         # Specify the default Metric value. Valid values
                               are an integer or
                               the keyword
                               'default'.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      log_adjacency          # Controls the level of log messages generated
                               whenever a
                               neighbor changes
                               state. Valid
                               values are 'log',
                               'detail', and
                               'default'.
      ospf=                  # Name of the OSPF instance.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      router_id              # Router Identifier (ID) of the OSPF router VRF
                               instance.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      timer_throttle_lsa_hold   # Specify the hold interval for rate-limiting
                               Link-State
                               Advertisement
                               (LSA) generation.
                               Valid values are
                               an integer, in
                               milliseconds, or
                               the keyword
                               'default'.
      timer_throttle_lsa_max   # Specify the max interval for rate-limiting Link-
                               State
                               Advertisement
                               (LSA) generation.
                               Valid values are
                               an integer, in
                               milliseconds, or
                               the keyword
                               'default'.
      timer_throttle_lsa_start   # Specify the start interval for rate-limiting
                               Link-State
                               Advertisement
                               (LSA) generation.
                               Valid values are
                               an integer, in
                               milliseconds, or
                               the keyword
                               'default'.
      timer_throttle_spf_hold   # Specify minimum hold time between Shortest Path
                               First (SPF)
                               calculations.
                               Valid values are
                               an integer, in
                               milliseconds, or
                               the keyword
                               'default'.
      timer_throttle_spf_max   # Specify the maximum wait time between Shortest
                               Path First (SPF)
                               calculations.
                               Valid values are
                               an integer, in
                               milliseconds, or
                               the keyword
                               'default'.
      timer_throttle_spf_start   # Specify initial Shortest Path First (SPF)
                               schedule delay.
                               Valid values are
                               an integer, in
                               milliseconds, or
                               the keyword
                               'default'.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
      vrf                    # Name of the resource instance. Valid value is a
                               string. The name
                               'default' is a
                               valid VRF
                               representing the
                               global OSPF.
- name: Configures anycast gateway MAC of the switch.
  action: nxos_overlay_global
      anycast_gateway_mac=   # Anycast gateway mac of the switch.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Manages configuration of a PIM instance.
  action: nxos_pim
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      ssm_range=             # Configure group ranges for Source Specific
                               Multicast (SSM).
                               Valid values are
                               multicast
                               addresses or the
                               keyword 'none'.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Manages PIM interface configuration.
  action: nxos_pim_interface
      border                 # Configures interface to be a boundary of a PIM
                               domain.
      hello_auth_key         # Authentication for hellos on this interface.
      hello_interval         # Hello interval in milliseconds for this
                               interface.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      interface=             # Full name of the interface such as Ethernet1/33.
      jp_policy_in           # Policy for join-prune messages (inbound).
      jp_policy_out=         # Policy for join-prune messages (outbound).
      jp_type_in             # Type of policy mapped to `jp_policy_in'.
      jp_type_out            # Type of policy mapped to `jp_policy_out'.
      neighbor_policy        # Configures a neighbor policy for filtering
                               adjacencies.
      neighbor_type          # Type of policy mapped to neighbor_policy.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      sparse                 # Enable/disable sparse-mode on the interface.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state                  # Manages desired state of the resource.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Manages configuration of an PIM static RP address instance.
  action: nxos_pim_rp_address
      bidir                  # Group range is treated in PIM bidirectional
                               mode.
      group_list             # Group range for static RP. Valid values are
                               multicast
                               addresses.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      prefix_list            # Prefix list policy for static RP. Valid values
                               are prefix-list
                               policy names.
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      route_map              # Route map policy for static RP. Valid values are
                               route-map policy
                               names.
      rp_address=            # Configures a Protocol Independent Multicast
                               (PIM) static
                               rendezvous point
                               (RP) address.
                               Valid values are
                               unicast
                               addresses.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Tests reachability using ping from Nexus switch.
  action: nxos_ping
      count                  # Number of packets to send.
      dest=                  # IP address or hostname (resolvable by switch) of
                               remote node.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      source                 # Source IP Address.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
      vrf                    # Outgoing VRF.
- name: Manages port-channel interfaces.
  action: nxos_portchannel
      force                  # When true it forces port-channel members to
                               match what is
                               declared in the
                               members param.
                               This can be used
                               to remove
                               members.
      group=                 # Channel-group number for the port-channel.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      members                # List of interfaces that will be managed in a
                               given
                               portchannel.
      min_links              # Min links required to keep portchannel up.
      mode                   # Mode for the port-channel, i.e. on, active,
                               passive.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state                  # Manage the state of the resource.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Reboot a network device.
  action: nxos_reboot
      confirm                # Safeguard boolean. Set to true if you're sure
                               you want to
                               reboot.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Set a checkpoint or rollback to a checkpoint.
  action: nxos_rollback
      checkpoint_file        # Name of checkpoint file to create. Mutually
                               exclusive with
                               rollback_to.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      rollback_to            # Name of checkpoint file to rollback to. Mutually
                               exclusive with
                               checkpoint_file.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Perform SMUs on Cisco NX-OS devices.
  action: nxos_smu
      file_system            # The remote file system of the device. If
                               omitted, devices
                               that support a
                               file_system
                               parameter will
                               use their default
                               values.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      pkg=                   # Name of the remote package.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Manage snapshots of the running states of selected features.
  action: nxos_snapshot
      action=                # Define what snapshot action the module would
                               perform.
      compare_option         # Snapshot options to be used when
                               `action=compare'.
      comparison_results_file   # Name of the file where snapshots comparison will
                               be store.
      description            # Snapshot description to be used when
                               `action=create'.
      element_key1           # Specify the tags used to distinguish among row
                               entries, to be
                               used when
                               `action=add'.
      element_key2           # Specify the tags used to distinguish among row
                               entries, to be
                               used when
                               `action=add'.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      path                   # Specify the path of the file where new created
                               snapshot or
                               snapshots
                               comparison will
                               be stored, to be
                               used when
                               `action=create'
                               and `save_snapsho
                               t_locally=true'
                               or
                               `action=compare'.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      row_id                 # Specifies the tag of each row entry of the show
                               command's XML
                               output, to be
                               used when
                               `action=add'.
      save_snapshot_locally   # Specify to locally store a new created snapshot,
                               to be used when
                               `action=create'.
      section                # Used to name the show command output, to be used
                               when
                               `action=add'.
      show_command           # Specify a new show command, to be used when
                               `action=add'.
      snapshot1              # First snapshot to be used when `action=compare'.
      snapshot2              # Second snapshot to be used when
                               `action=compare'.
      snapshot_name          # Snapshot name, to be used when `action=create'
                               or
                               `action=delete'.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Manages SNMP community configs.
  action: nxos_snmp_community
      access                 # Access type for community.
      acl                    # ACL name to filter snmp requests.
      community=             # Case-sensitive community string.
      config                 # Configuration string to be used for module
                               operations. If
                               not specified,
                               the module will
                               use the current
                               running
                               configuration.
      group                  # Group to which the community belongs.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      include_defaults       # Specify to use or not the complete running
                               configuration for
                               module
                               operations.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      save                   # Specify to save the running configuration after
                               module
                               operations.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state=                 # Manage the state of the resource.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Manages SNMP contact info.
  action: nxos_snmp_contact
      contact=               # Contact information.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state=                 # Manage the state of the resource.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Manages SNMP host configuration.
  action: nxos_snmp_host
      community              # Community string or v3 username.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      snmp_host=             # IP address of hostname of target host.
      snmp_type              # type of message to send to host.
      src_intf               # Source interface.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state=                 # Manage the state of the resource.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      udp                    # UDP port number (0-65535).
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
      version                # SNMP version.
      vrf                    # VRF to use to source traffic to source.
      vrf_filter             # Name of VRF to filter.
- name: Manages SNMP location information.
  action: nxos_snmp_location
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      location=              # Location information.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state                  # Manage the state of the resource.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Manages SNMP traps.
  action: nxos_snmp_traps
      group=                 # Case sensitive group.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state                  # Manage the state of the resource.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Manages SNMP users for monitoring.
  action: nxos_snmp_user
      auth                   # Auth parameters for the user.
      encrypt                # Enables AES-128 bit encryption when using
                               privacy password.
      group=                 # Group to which the user will belong to.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      privacy                # Privacy password for the user.
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      pwd                    # Auth password when using md5 or sha.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state                  # Manage the state of the resource.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      user=                  # Name of the user.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Manages static route configuration
  action: nxos_static_route
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      next_hop=              # Next hop address or interface of static route.
                               If interface, it
                               must be the
                               fully-qualified
                               interface name.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      pref                   # Preference or administrative difference of route
                               (range 1-255).
      prefix=                # Destination prefix of static route.
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      route_name             # Name of the route. Used with the name parameter
                               on the CLI.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state=                 # Manage the state of the resource.
      tag                    # Route tag value (numeric).
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
      vrf                    # VRF for static route.
- name: Manages Layer 2 switchport interfaces.
  action: nxos_switchport
      access_vlan            # If `mode=access', used as the access VLAN ID.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      interface=             # Full name of the interface, i.e. Ethernet1/1.
      mode                   # Mode for the Layer 2 port.
      native_vlan            # If `mode=trunk', used as the trunk native VLAN
                               ID.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state                  # Manage the state of the resource.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      trunk_allowed_vlans    # if `mode=trunk', these are the only VLANs that
                               will be
                               configured on the
                               trunk, i.e.
                               "2-10,15".
      trunk_vlans            # If `mode=trunk', used as the VLAN range to ADD
                               or REMOVE from
                               the trunk.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Manages UDLD global configuration params.
  action: nxos_udld
      aggressive             # Toggles aggressive mode.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      msg_time               # Message time in seconds for UDLD packets.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      reset                  # Ability to reset UDLD down interfaces.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state                  # Manage the state of the resource.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Manages UDLD interface configuration params.
  action: nxos_udld_interface
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      interface=             # FULL name of the interface, i.e. Ethernet1/1-
      mode=                  # Manages UDLD mode for an interface.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state                  # Manage the state of the resource.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Manages VLAN resources and attributes.
  action: nxos_vlan
      admin_state            # Manage the VLAN administrative state of the VLAN
                               equivalent to
                               shut/no shut in
                               VLAN config mode.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      mapped_vni             # The Virtual Network Identifier (VNI) ID that is
                               mapped to the
                               VLAN. Valid
                               values are
                               integer and
                               keyword
                               'default'.
      name                   # Name of VLAN.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state                  # Manage the state of the resource.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
      vlan_id                # Single VLAN ID.
      vlan_range             # Range of VLANs such as 2-10 or 2,5,10-15, etc.
      vlan_state             # Manage the vlan operational state of the VLAN
                               (equivalent to
                               state {active |
                               suspend} command.
- name: Manages global VPC configuration
  action: nxos_vpc
      auto_recovery=         # Enables/Disables auto recovery
      delay_restore          # manages delay restore command and config value
                               in seconds
      domain=                # VPC domain
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      peer_gw=               # Enables/Disables peer gateway
      pkl_dest               # Destination (remote) IP address used for peer
                               keepalive link
      pkl_src                # Source IP address used for peer keepalive link
      pkl_vrf                # VRF used for peer keepalive link
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      role_priority          # Role priority for device. Remember lower is
                               better.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state=                 # Manages desired state of the resource
      system_priority        # System priority device.  Remember they must
                               match between
                               peers.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Manages interface VPC configuration
  action: nxos_vpc_interface
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      peer_link              # Set to true/false for peer link config on
                               associated
                               portchannel.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      portchannel=           # Group number of the portchannel that will be
                               configured.
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state=                 # Manages desired state of the resource.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
      vpc                    # VPC group/id that will be configured on
                               associated
                               portchannel.
- name: Manages global VRF configuration.
  action: nxos_vrf
      admin_state            # Administrative state of the VRF.
      description            # Description of the VRF.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      route_distinguisher    # VPN Route Distinguisher (RD). Valid values are a
                               string in one of
                               the route-
                               distinguisher
                               formats (ASN2:NN,
                               ASN4:NN, or
                               IPV4:NN); the
                               keyword 'auto',
                               or the keyword
                               'default'.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state                  # Manages desired state of the resource.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
      vni                    # Specify virtual network identifier. Valid values
                               are Integer or
                               keyword
                               'default'.
      vrf=                   # Name of VRF to be managed.
- name: Manages VRF AF.
  action: nxos_vrf_af
      afi=                   # Address-Family Identifier (AFI).
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      route_target_both_auto_evpn   # Enable/Disable the EVPN route-target 'auto'
                               setting for both
                               import and export
                               target
                               communities.
      safi=                  # Sub Address-Family Identifier (SAFI).
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state                  # Determines whether the config should be present
                               or not on the
                               device.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
      vrf=                   # Name of the VRF.
- name: Manages interface specific VRF configuration.
  action: nxos_vrf_interface
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      interface=             # Full name of interface to be managed, i.e.
                               Ethernet1/1.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state                  # Manages desired state of the resource.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
      vrf=                   # Name of VRF to be managed.
- name: Manages VRRP configuration on NX-OS switches.
  action: nxos_vrrp
      admin_state            # Used to enable or disable the VRRP process.
      authentication         # Clear text authentication string.
      group=                 # VRRP group number.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      interface=             # Full name of interface that is being managed for
                               VRRP.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      priority               # VRRP priority.
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state                  # Specify desired state of the resource.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
      vip                    # VRRP virtual IP address.
- name: Manages VTP domain configuration.
  action: nxos_vtp_domain
      domain=                # VTP domain name.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Manages VTP password configuration.
  action: nxos_vtp_password
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state                  # Manage the state of the resource
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
      vtp_password           # VTP password
- name: Manages VTP version configuration.
  action: nxos_vtp_version
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
      version=               # VTP version number.
- name: Manages VXLAN Network Virtualization Endpoint (NVE).
  action: nxos_vxlan_vtep
      description            # Description of the NVE interface.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      host_reachability      # Specify mechanism for host reachability
                               advertisement.
      interface=             # Interface name for the VXLAN Network
                               Virtualization
                               Endpoint.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      shutdown               # Administratively shutdown the NVE interface.
      source_interface       # Specify the loopback interface whose IP address
                               should be used
                               for the NVE
                               interface.
      source_interface_hold_down_time   # Suppresses advertisement of the NVE loopback
                               address until the
                               overlay has
                               converged.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state                  # Determines whether the config should be present
                               or not on the
                               device.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Creates a Virtual Network Identifier member (VNI)
  action: nxos_vxlan_vtep_vni
      assoc_vrf              # This attribute is used to identify and separate
                               processing VNIs
                               that are
                               associated with a
                               VRF and used for
                               routing. The VRF
                               and VNI specified
                               with this command
                               must match the
                               configuration of
                               the VNI under the
                               VRF.
      config                 # Configuration string to be used for module
                               operations. If
                               not specified,
                               the module will
                               use the current
                               running
                               configuration.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      include_defaults       # Specify to use or not the complete running
                               configuration for
                               module
                               operations.
      ingress_replication    # Specifies mechanism for host reachability
                               advertisement.
      interface=             # Interface name for the VXLAN Network
                               Virtualization
                               Endpoint.
      multicast_group        # The multicast group (range) of the VNI. Valid
                               values are string
                               and keyword
                               'default'.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `nxapi'
                               transports. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      peer_list              # Set the ingress-replication static peer list.
                               Valid values are
                               an array, a
                               space-separated
                               string of ip
                               addresses, or the
                               keyword
                               'default'.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `nxapi'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).
      provider               # Convenience method that allows all `nxos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      save                   # Specify to save the running configuration after
                               module
                               operations.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transport.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      state                  # Determines whether the config should be present
                               or not on the
                               device.
      suppress_arp           # Suppress arp under layer 2 VNI.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               cli (ssh) or
                               nxapi.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport=nx
                               api', otherwise
                               this value is
                               ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the
                               nxapi
                               authentication
                               depending on
                               which transport
                               is used. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
      vni=                   # ID of the Virtual Network Identifier.
- name: Returns inventory data from `Ohai'
  action: ohai
- name: Manage iscsi targets with open-iscsi
  action: open_iscsi
      auto_node_startup      # whether the target node should be automatically
                               connected at
                               startup
      discover               # whether the list of target nodes on the portal
                               should be
                               (re)discovered
                               and added to the
                               persistent iscsi
                               database. Keep in
                               mind that
                               iscsiadm
                               discovery resets
                               configurtion,
                               like node.startup
                               to manual, hence
                               combined with aut
                               o_node_startup=ye
                               s will allways
                               return a changed
                               state.
      login                  # whether the target node should be connected
      node_auth              # discovery.sendtargets.auth.authmethod
      node_pass              # discovery.sendtargets.auth.password
      node_user              # discovery.sendtargets.auth.username
      port                   # the port on which the iscsi target process
                               listens
      portal                 # the ip address of the iscsi target
      show_nodes             # whether the list of nodes in the persistent
                               iscsi database
                               should be
                               returned by the
                               module
      target                 # the iscsi target name
- name: Manage packages on OpenBSD.
  action: openbsd_pkg
      build                  # Build the package from source instead of
                               downloading and
                               installing a
                               binary. Requires
                               that the port
                               source tree is
                               already
                               installed.
                               Automatically
                               builds and
                               installs the
                               'sqlports'
                               package, if it is
                               not already
                               installed.
      name=                  # Name of the package.
      ports_dir              # When used in combination with the 'build'
                               option, allows
                               overriding the
                               default ports
                               source directory.
      state=                 # `present' will make sure the package is
                               installed.
                               `latest' will
                               make sure the
                               latest version of
                               the package is
                               installed.
                               `absent' will
                               make sure the
                               specified package
                               is not installed.
- name: Will update the backend configuration of OpenDJ via the dsconfig set-backend-prop command.
  action: opendj_backendprop
      backend=               # The name of the backend on which the property
                               needs to be
                               updated.
      hostname=              # The hostname of the OpenDJ server.
      name=                  # The configuration setting to update.
      opendj_bindir          # The path to the bin directory of OpenDJ.
      password               # The password for the cn=Directory Manager user.
                               Either password
                               or passwordfile
                               is needed.
      passwordfile           # Location to the password file which holds the
                               password for the
                               cn=Directory
                               Manager user.
                               Either password
                               or passwordfile
                               is needed.
      port=                  # The Admin port on which the OpenDJ instance is
                               available.
      state                  # If configuration needs to be added/updated
      username               # The username to connect to.
      value=                 # The value for the configuration item.
- name: Manage Open vSwitch bridges
  action: openvswitch_bridge
      bridge=                # Name of bridge to manage
      external_ids           # A dictionary of external-ids. Omitting this
                               parameter is a
                               No-op. To  clear
                               all external-ids
                               pass an empty
                               value.
      fail_mode              # Set bridge fail-mode. The default value (None)
                               is a No-op.
      state                  # Whether the bridge should exist
      timeout                # How long to wait for ovs-vswitchd to respond
- name: Configure open vswitch database.
  action: openvswitch_db
      column=                # Identifies the column in the record.
      key=                   # Identifies the key in the record column
      record=                # Identifies the recoard in the table.
      table=                 # Identifies the table in the database.
      timeout                # How long to wait for ovs-vswitchd to respond
      value=                 # Expected value for the table, record, column and
                               key.
- name: Manage Open vSwitch ports
  action: openvswitch_port
      bridge=                # Name of bridge to manage
      external_ids           # Dictionary of external_ids applied to a port.
      port=                  # Name of port to manage on the bridge
      set                    # Set a single property on a port.
      state                  # Whether the port should exist
      tag                    # VLAN tag for this port
      timeout                # How long to wait for ovs-vswitchd to respond
- name: Package manager for OpenWrt
  action: opkg
      force                  # opkg --force parameter used
      name=                  # name of package to install/remove
      state                  # state of the package
      update_cache           # update the package db first
- name: Run arbitrary commands on OpenSwitch devices.
  action: ops_command
      commands=              # List of commands to send to the remote ops
                               device over the
                               configured
                               provider. The
                               resulting output
                               from the command
                               is returned. If
                               the `wait_for'
                               argument is
                               provided, the
                               module is not
                               returned until
                               the condition is
                               satisfied or the
                               number of retires
                               as expired.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.  Note
                               this argument
                               does not affect
                               the SSH argument.
      interval               # Configures the interval in seconds to wait
                               between `retries'
                               of the command.
                               If the command
                               does not pass the
                               specified
                               conditions, the
                               interval
                               indicates how
                               long to wait
                               before trying the
                               command again.
      match                  # The `match' argument is used in conjunction with
                               the `wait_for'
                               argument to
                               specify the match
                               policy.  Valid
                               values are `all'
                               or `any'.  If the
                               value is set to
                               `all' then all
                               conditionals in
                               the `wait_for'
                               must be
                               satisfied.  If
                               the value is set
                               to `any' then
                               only one of the
                               values must be
                               satisfied.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `rest'
                               transports.  Note
                               this argument
                               does not affect
                               the SSH
                               transport. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `rest'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).  Note
                               this argument
                               does not affect
                               the SSH
                               transport.
      provider               # Convenience method that allows all `openswitch'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      retries                # Specifies the number of retries a command should
                               by tried before
                               it is considered
                               failed. The
                               command is run on
                               the target device
                               every retry and
                               evaluated against
                               the `wait_for'
                               conditions.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transports.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               ssh, cli or REST.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport'
                               argument is
                               configured as
                               rest.  If the
                               transport
                               argument is not
                               `rest', this
                               value is ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the eAPI
                               authentication
                               depending on
                               which transport
                               is used. Note
                               this argument
                               does not affect
                               the SSH
                               transport. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
      wait_for               # List of conditions to evaluate against the
                               output of the
                               command. The task
                               will wait for
                               each condition to
                               be true before
                               moving forward.
                               If the
                               conditional is
                               not true within
                               the configured
                               number of
                               retries, the task
                               fails. See
                               examples.
- name: Manage OpenSwitch configuration using CLI
  action: ops_config
      after                  # The ordered set of commands to append to the end
                               of the command
                               stack if a change
                               needs to be made.
                               Just like with
                               `before' this
                               allows the
                               playbook designer
                               to append a set
                               of commands to be
                               executed after
                               the command set.
      before                 # The ordered set of commands to push on to the
                               command stack if
                               a change needs to
                               be made.  This
                               allows the
                               playbook designer
                               the opportunity
                               to perform
                               configuration
                               commands prior to
                               pushing any
                               changes without
                               affecting how the
                               set of commands
                               are matched
                               against the
                               system.
      config                 # The module, by default, will connect to the
                               remote device and
                               retrieve the
                               current running-
                               config to use as
                               a base for
                               comparing against
                               the contents of
                               source.  There
                               are times when it
                               is not desirable
                               to have the task
                               get the current
                               running-config
                               for every task in
                               a playbook.  The
                               `config' argument
                               allows the
                               implementer to
                               pass in the
                               configuration to
                               use as the base
                               config for
                               comparison.
      force                  # The force argument instructs the module to not
                               consider the
                               current devices
                               running-config.
                               When set to true,
                               this will cause
                               the module to
                               push the contents
                               of `src' into the
                               device without
                               first checking if
                               already
                               configured. Note
                               this argument
                               should be
                               considered
                               deprecated.  To
                               achieve the
                               equivalent, set
                               the `match=none'
                               which is
                               idempotent.  This
                               argument will be
                               removed in a
                               future release.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.  Note
                               this argument
                               does not affect
                               the SSH argument.
      lines                  # The ordered set of commands that should be
                               configured in the
                               section.  The
                               commands must be
                               the exact same
                               commands as found
                               in the device
                               running-config.
                               Be sure to note
                               the configuration
                               command syntax as
                               some commands are
                               automatically
                               modified by the
                               device config
                               parser.
      match                  # Instructs the module on the way to perform the
                               matching of the
                               set of commands
                               against the
                               current device
                               config.  If match
                               is set to `line',
                               commands are
                               matched line by
                               line.  If match
                               is set to
                               `strict', command
                               lines are matched
                               with respect to
                               position.  If
                               match is set to
                               `exact', command
                               lines must be an
                               equal match.
                               Finally, if match
                               is set to `none',
                               the module will
                               not attempt to
                               compare the
                               source
                               configuration
                               with the running
                               configuration on
                               the remote
                               device.
      parents                # The ordered set of parents that uniquely
                               identify the
                               section the
                               commands should
                               be checked
                               against.  If the
                               parents argument
                               is omitted, the
                               commands are
                               checked against
                               the set of top
                               level or global
                               commands.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `rest'
                               transports.  Note
                               this argument
                               does not affect
                               the SSH
                               transport. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `rest'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).  Note
                               this argument
                               does not affect
                               the SSH
                               transport.
      provider               # Convenience method that allows all `openswitch'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      replace                # Instructs the module on the way to perform the
                               configuration on
                               the device.  If
                               the replace
                               argument is set
                               to `line' then
                               the modified
                               lines are pushed
                               to the device in
                               configuration
                               mode.  If the
                               replace argument
                               is set to `block'
                               then the entire
                               command block is
                               pushed to the
                               device in
                               configuration
                               mode if any line
                               is not correct.
      save                   # The `save' argument instructs the module to save
                               the running-
                               config to the
                               startup-config at
                               the conclusion of
                               the module
                               running.  If
                               check mode is
                               specified, this
                               argument is
                               ignored.
      src                    # The `src' argument provides a path to the
                               configuration
                               file to load into
                               the remote
                               system.  The path
                               can either be a
                               full system path
                               to the
                               configuration
                               file if the value
                               starts with / or
                               relative to the
                               root of the
                               implemented role
                               or playbook. This
                               argument is
                               mutually
                               exclusive with
                               the `lines' and
                               `parents'
                               arguments.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transports.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               ssh, cli or REST.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport'
                               argument is
                               configured as
                               rest.  If the
                               transport
                               argument is not
                               `rest', this
                               value is ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the eAPI
                               authentication
                               depending on
                               which transport
                               is used. Note
                               this argument
                               does not affect
                               the SSH
                               transport. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Collect device specific facts from OpenSwitch
  action: ops_facts
      config                 # When enabled, this argument will collect the
                               current running
                               configuration
                               from the remote
                               device.  If the
                               `transport=rest'
                               then the
                               collected
                               configuration
                               will be the full
                               system
                               configuration.
      endpoints              # Accepts a list of endpoints to retrieve from the
                               remote device
                               using the REST
                               API.  The
                               endpoints should
                               be valid
                               endpoints
                               available on the
                               device.  This
                               argument is only
                               valid when the
                               `transport=rest'.
      gather_subset          # When supplied, this argument will restrict the
                               facts collected
                               to a given
                               subset.  Possible
                               values for this
                               argument include
                               all, hardware,
                               config, legacy,
                               and interfaces.
                               Can specify a
                               list of values to
                               include a larger
                               subset.  Values
                               can also be used
                               with an initial
                               `[!]' to specify
                               that a specific
                               subset should not
                               be collected.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.  Note
                               this argument
                               does not affect
                               the SSH argument.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.  This is
                               a common argument
                               used for either
                               `cli' or `rest'
                               transports.  Note
                               this argument
                               does not affect
                               the SSH
                               transport. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               This value
                               applies to either
                               `cli' or `rest'.
                               The port value
                               will default to
                               the appropriate
                               transport common
                               port if none is
                               provided in the
                               task.  (cli=22,
                               http=80,
                               https=443).  Note
                               this argument
                               does not affect
                               the SSH
                               transport.
      provider               # Convenience method that allows all `openswitch'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               This argument is
                               only used for the
                               `cli' transports.
                               If the value is
                               not specified in
                               the task, the
                               value of
                               environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      transport=             # Configures the transport connection to use when
                               connecting to the
                               remote device.
                               The transport
                               argument supports
                               connectivity to
                               the device over
                               ssh, cli or REST.
      use_ssl                # Configures the `transport' to use SSL if set to
                               true only when
                               the `transport'
                               argument is
                               configured as
                               rest.  If the
                               transport
                               argument is not
                               `rest', this
                               value is ignored.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate
                               either the CLI
                               login or the eAPI
                               authentication
                               depending on
                               which transport
                               is used. Note
                               this argument
                               does not affect
                               the SSH
                               transport. If the
                               value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Retrieve an auth token
  action: os_auth
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      key                    # A path to a client key to use as part of the SSL
                               transaction
      region_name            # Name of the region.
      timeout                # How long should ansible wait for the requested
                               resource.
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      wait                   # Should ansible wait until the requested resource
                               is complete.
- name: Get OpenStack Client config
  action: os_client_config
      clouds                 # List of clouds to limit the return list to. No
                               value means
                               return
                               information on
                               all configured
                               clouds
- name: Retrieve facts about one or more flavors
  action: os_flavor_facts
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      key                    # A path to a client key to use as part of the SSL
                               transaction
      limit                  # Limits the number of flavors returned. All
                               matching flavors
                               are returned by
                               default.
      name                   # A flavor name. Cannot be used with `ram' or
                               `vcpus'.
      ram                    # A string used for filtering flavors based on the
                               amount of RAM (in
                               MB) desired. This
                               string accepts
                               the following
                               special values:
                               'MIN' (return
                               flavors with the
                               minimum amount of
                               RAM), and 'MAX'
                               (return flavors
                               with the maximum
                               amount of RAM). A
                               specific amount
                               of RAM may also
                               be specified. Any
                               flavors with this
                               exact amount of
                               RAM will be
                               returned. A range
                               of acceptable RAM
                               may be given
                               using a special
                               syntax. Simply
                               prefix the amount
                               of RAM with one
                               of these
                               acceptable range
                               values: '<', '>',
                               '<=', '>='. These
                               values represent
                               less than,
                               greater than,
                               less than or
                               equal to, and
                               greater than or
                               equal to,
                               respectively.
      region_name            # Name of the region.
      timeout                # How long should ansible wait for the requested
                               resource.
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      vcpus                  # A string used for filtering flavors based on the
                               number of virtual
                               CPUs desired.
                               Format is the
                               same as the `ram'
                               parameter.
      wait                   # Should ansible wait until the requested resource
                               is complete.
- name: Add/Remove floating IP from an instance
  action: os_floating_ip
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      fixed_address          # To which fixed IP of server the floating IP
                               address should be
                               attached to.
      floating_ip_address    # A floating IP address to attach or to detach.
                               Required only if
                               `state' is
                               absent. When
                               `state' is
                               present can be
                               used to specify a
                               IP address to
                               attach.
      key                    # A path to a client key to use as part of the SSL
                               transaction
      network                # The name or ID of a neutron external network or
                               a nova pool name.
      purge                  # When `state' is absent, indicates whether or not
                               to delete the
                               floating IP
                               completely, or
                               only detach it
                               from the server.
                               Default is to
                               detach only.
      region_name            # Name of the region.
      reuse                  # When `state' is present, and
                               `floating_ip_addr
                               ess' is not
                               present, this
                               parameter can be
                               used to specify
                               whether we should
                               try to reuse a
                               floating IP
                               address already
                               allocated to the
                               project.
      server=                # The name or ID of the instance to which the IP
                               address should be
                               assigned.
      state                  # Should the resource be present or absent.
      timeout                # How long should ansible wait for the requested
                               resource.
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      wait                   # Should ansible wait until the requested resource
                               is complete.
- name: Manage OpenStack Identity Groups
  action: os_group
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      description            # Group description
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      key                    # A path to a client key to use as part of the SSL
                               transaction
      name=                  # Group name
      region_name            # Name of the region.
      state                  # Should the resource be present or absent.
      timeout                # How long should ansible wait for the requested
                               resource.
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      wait                   # Should ansible wait until the requested resource
                               is complete.
- name: Add/Delete images from OpenStack Cloud
  action: os_image
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      container_format       # The format of the container
      disk_format            # The format of the disk that is getting uploaded
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      filename               # The path to the file which has to be uploaded
      is_public              # Whether the image can be accessed publicly. Note
                               that publicizing
                               an image requires
                               admin role by
                               default.
      kernel                 # The name of an existing kernel image that will
                               be associated
                               with this image
      key                    # A path to a client key to use as part of the SSL
                               transaction
      min_disk               # The minimum disk space (in GB) required to boot
                               this image
      min_ram                # The minimum ram (in MB) required to boot this
                               image
      name=                  # Name that has to be given to the image
      owner                  # The owner of the image
      properties             # Additional properties to be associated with this
                               image
      ramdisk                # The name of an existing ramdisk image that will
                               be associated
                               with this image
      region_name            # Name of the region.
      state                  # Should the resource be present or absent.
      timeout                # How long should ansible wait for the requested
                               resource.
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      wait                   # Should ansible wait until the requested resource
                               is complete.
- name: Retrieve facts about an image within OpenStack.
  action: os_image_facts
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      image=                 # Name or ID of the image
      key                    # A path to a client key to use as part of the SSL
                               transaction
      region_name            # Name of the region.
      timeout                # How long should ansible wait for the requested
                               resource.
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      wait                   # Should ansible wait until the requested resource
                               is complete.
- name: Create/Delete Bare Metal Resources from OpenStack
  action: os_ironic
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      chassis_uuid           # Associate the node with a pre-defined chassis.
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      driver=                # The name of the Ironic Driver to use with this
                               node.
      driver_info            # Information for this server's driver. Will vary
                               based on which
                               driver is in use.
                               Any sub-field
                               which is
                               populated will be
                               validated during
                               creation.
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      ironic_url             # If noauth mode is utilized, this is required to
                               be set to the
                               endpoint URL for
                               the Ironic API.
                               Use with "auth"
                               and "auth_type"
                               settings set to
                               None.
      key                    # A path to a client key to use as part of the SSL
                               transaction
      name                   # unique name identifier to be given to the
                               resource.
      nics=                  # A list of network interface cards, eg, " - mac:
                               aa:bb:cc:aa:bb:cc
                               "
      properties             # Definition of the physical characteristics of
                               this server, used
                               for scheduling
                               purposes
      region_name            # Name of the region.
      skip_update_of_driver_password   # Allows the code that would assert changes to
                               nodes to skip the
                               update if the
                               change is a
                               single line
                               consisting of the
                               password field.
                               As of Kilo, by
                               default,
                               passwords are
                               always masked to
                               API requests,
                               which means the
                               logic as a result
                               always attempts
                               to re-assert the
                               password field.
      state                  # Indicates desired state of the resource
      timeout                # How long should ansible wait for the requested
                               resource.
      uuid                   # globally unique identifier (UUID) to be given to
                               the resource.
                               Will be auto-
                               generated if not
                               specified, and
                               name is
                               specified.
                               Definition of a
                               UUID will always
                               take precedence
                               to a name value.
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      wait                   # Should ansible wait until the requested resource
                               is complete.
- name: Explicitly triggers baremetal node introspection in ironic.
  action: os_ironic_inspect
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      ironic_url             # If noauth mode is utilized, this is required to
                               be set to the
                               endpoint URL for
                               the Ironic API.
                               Use with "auth"
                               and "auth_type"
                               settings set to
                               None.
      key                    # A path to a client key to use as part of the SSL
                               transaction
      mac                    # unique mac address that is used to attempt to
                               identify the
                               host.
      name                   # unique name identifier to identify the host in
                               Ironic.
      region_name            # Name of the region.
      timeout                # How long should ansible wait for the requested
                               resource.
      uuid                   # globally unique identifier (UUID) to identify
                               the host.
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      wait                   # Should ansible wait until the requested resource
                               is complete.
- name: Activate/Deactivate Bare Metal Resources from OpenStack
  action: os_ironic_node
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      config_drive           # A configdrive file or HTTP(S) URL that will be
                               passed along to
                               the node.
      deploy                 # Indicates if the resource should be deployed.
                               Allows for
                               deployment logic
                               to be disengaged
                               and control of
                               the node power or
                               maintenance state
                               to be changed.
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      instance_info          # Definition of the instance information which is
                               used to deploy
                               the node.  This
                               information is
                               only required
                               when an instance
                               is set to
                               present.
      ironic_url             # If noauth mode is utilized, this is required to
                               be set to the
                               endpoint URL for
                               the Ironic API.
                               Use with "auth"
                               and "auth_type"
                               settings set to
                               None.
      key                    # A path to a client key to use as part of the SSL
                               transaction
      maintenance            # A setting to allow the direct control if a node
                               is in maintenance
                               mode.
      maintenance_reason     # A string expression regarding the reason a node
                               is in a
                               maintenance mode.
      power                  # A setting to allow power state to be asserted
                               allowing nodes
                               that are not yet
                               deployed to be
                               powered on, and
                               nodes that are
                               deployed to be
                               powered off.
      region_name            # Name of the region.
      state                  # Indicates desired state of the resource
      timeout                # How long should ansible wait for the requested
                               resource.
      uuid                   # globally unique identifier (UUID) to be given to
                               the resource.
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      wait                   # Should ansible wait until the requested resource
                               is complete.
- name: Add/Delete a keypair from OpenStack
  action: os_keypair
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      key                    # A path to a client key to use as part of the SSL
                               transaction
      name=                  # Name that has to be given to the key pair
      public_key             # The public key that would be uploaded to nova
                               and injected into
                               VMs upon
                               creation.
      public_key_file        # Path to local file containing ssh public key.
                               Mutually
                               exclusive with
                               public_key.
      region_name            # Name of the region.
      state                  # Should the resource be present or absent.
      timeout                # How long should ansible wait for the requested
                               resource.
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      wait                   # Should ansible wait until the requested resource
                               is complete.
- name: Manage OpenStack Identity Domains
  action: os_keystone_domain
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      description            # Description of the domain
      enabled                # Is the domain enabled
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      key                    # A path to a client key to use as part of the SSL
                               transaction
      name=                  # Name that has to be given to the instance
      region_name            # Name of the region.
      state                  # Should the resource be present or absent.
      timeout                # How long should ansible wait for the requested
                               resource.
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      wait                   # Should ansible wait until the requested resource
                               is complete.
- name: Retrieve facts about one or more OpenStack domains
  action: os_keystone_domain_facts
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      filters                # A dictionary of meta data to use for further
                               filtering.
                               Elements of this
                               dictionary may be
                               additional
                               dictionaries.
      key                    # A path to a client key to use as part of the SSL
                               transaction
      name=                  # Name or ID of the domain
      region_name            # Name of the region.
      timeout                # How long should ansible wait for the requested
                               resource.
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      wait                   # Should ansible wait until the requested resource
                               is complete.
- name: Manage OpenStack Identity Roles
  action: os_keystone_role
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      key                    # A path to a client key to use as part of the SSL
                               transaction
      name=                  # Role Name
      region_name            # Name of the region.
      state                  # Should the resource be present or absent.
      timeout                # How long should ansible wait for the requested
                               resource.
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      wait                   # Should ansible wait until the requested resource
                               is complete.
- name: Manage OpenStack Identity services
  action: os_keystone_service
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      description            # Description of the service
      enabled                # Is the service enabled
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      key                    # A path to a client key to use as part of the SSL
                               transaction
      name=                  # Name of the service
      region_name            # Name of the region.
      service_type=          # The type of service
      state                  # Should the resource be present or absent.
      timeout                # How long should ansible wait for the requested
                               resource.
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      wait                   # Should ansible wait until the requested resource
                               is complete.
- name: Creates/removes networks from OpenStack
  action: os_network
      admin_state_up         # Whether the state should be marked as up or
                               down.
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      external               # Whether this network is externally accessible.
      key                    # A path to a client key to use as part of the SSL
                               transaction
      name=                  # Name to be assigned to the network.
      project                # Project name or ID containing the network (name
                               admin-only)
      provider_network_type   # The type of physical network that maps to this
                               network resource.
      provider_physical_network   # The physical network where this network object
                               is implemented.
      provider_segmentation_id   # An isolated segment on the physical network. The
                               `network_type'
                               attribute defines
                               the segmentation
                               model. For
                               example, if the
                               `network_type'
                               value is vlan,
                               this ID is a vlan
                               identifier. If
                               the
                               `network_type'
                               value is gre,
                               this ID is a gre
                               key.
      region_name            # Name of the region.
      shared                 # Whether this network is shared or not.
      state                  # Indicate desired state of the resource.
      timeout                # How long should ansible wait for the requested
                               resource.
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      wait                   # Should ansible wait until the requested resource
                               is complete.
- name: Retrieve facts about one or more OpenStack networks.
  action: os_networks_facts
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      filters                # A dictionary of meta data to use for further
                               filtering.
                               Elements of this
                               dictionary may be
                               additional
                               dictionaries.
      key                    # A path to a client key to use as part of the SSL
                               transaction
      name                   # Name or ID of the Network
      region_name            # Name of the region.
      timeout                # How long should ansible wait for the requested
                               resource.
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      wait                   # Should ansible wait until the requested resource
                               is complete.
- name: Manage OpenStack compute flavors
  action: os_nova_flavor
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      disk                   # Size of local disk, in GB.
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      ephemeral              # Ephemeral space size, in GB.
      flavorid               # ID for the flavor. This is optional as a unique
                               UUID will be
                               assigned if a
                               value is not
                               specified.
      is_public              # Make flavor accessible to the public.
      key                    # A path to a client key to use as part of the SSL
                               transaction
      name=                  # Flavor name.
      ram                    # Amount of memory, in MB.
      region_name            # Name of the region.
      rxtx_factor            # RX/TX factor.
      state                  # Indicate desired state of the resource. When
                               `state' is
                               'present', then
                               `ram', `vcpus',
                               and `disk' are
                               all required.
                               There are no
                               default values
                               for those
                               parameters.
      swap                   # Swap space size, in MB.
      timeout                # How long should ansible wait for the requested
                               resource.
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      vcpus                  # Number of virtual CPUs.
      wait                   # Should ansible wait until the requested resource
                               is complete.
- name: Create or Delete objects and containers from OpenStack
  action: os_object
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      container=             # The name of the container in which to create the
                               object
      container_access       # desired container access level.
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      filename               # Path to local file to be uploaded.
      key                    # A path to a client key to use as part of the SSL
                               transaction
      name                   # Name to be give to the object. If omitted,
                               operations will
                               be on the entire
                               container
      region_name            # Name of the region.
      state                  # Should the resource be present or absent.
      timeout                # How long should ansible wait for the requested
                               resource.
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      wait                   # Should ansible wait until the requested resource
                               is complete.
- name: Add/Update/Delete ports from an OpenStack cloud.
  action: os_port
      admin_state_up         # Sets admin state.
      allowed_address_pairs   # Allowed address pairs list.  Allowed address
                               pairs are
                               supported with
                               dictionary
                               structure. e.g.  
                               allowed_address_p
                               airs: -
                               ip_address:
                               10.1.0.12
                               mac_address:
                               ab:cd:ef:12:34:56
                               - ip_address: ...
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      device_id              # Device ID of device using this port.
      device_owner           # The ID of the entity that uses this port.
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      extra_dhcp_opts        # Extra dhcp options to be assigned to this port.
                               Extra options are
                               supported with
                               dictionary
                               structure. e.g.
                               extra_dhcp_opts:
                               - opt_name: opt
                               name1 opt_value:
                               value1 -
                               opt_name: ...
      fixed_ips              # Desired IP and/or subnet for this port.  Subnet
                               is referenced by
                               subnet_id and IP
                               is referenced by
                               ip_address.
      key                    # A path to a client key to use as part of the SSL
                               transaction
      mac_address            # MAC address of this port.
      name                   # Name that has to be given to the port.
      network=               # Network ID or name this port belongs to.
      no_security_groups     # Do not associate a security group with this
                               port.
      region_name            # Name of the region.
      security_groups        # Security group(s) ID(s) or name(s) associated
                               with the port
                               (comma separated
                               string or YAML
                               list)
      state                  # Should the resource be present or absent.
      timeout                # How long should ansible wait for the requested
                               resource.
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      wait                   # Should ansible wait until the requested resource
                               is complete.
- name: Retrieve facts about ports within OpenStack.
  action: os_port_facts
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      filters                # A dictionary of meta data to use for further
                               filtering.
                               Elements of this
                               dictionary will
                               be matched
                               against the
                               returned port
                               dictionaries.
                               Matching is
                               currently limited
                               to strings within
                               the port
                               dictionary, or
                               strings within
                               nested
                               dictionaries.
      key                    # A path to a client key to use as part of the SSL
                               transaction
      port                   # Unique name or ID of a port.
      region_name            # Name of the region.
      timeout                # How long should ansible wait for the requested
                               resource.
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      wait                   # Should ansible wait until the requested resource
                               is complete.
- name: Manage OpenStack Projects
  action: os_project
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      description            # Description for the project
      domain_id              # Domain id to create the project in if the cloud
                               supports domains.
                               The domain_id
                               parameter
                               requires shade >=
                               1.8.0
      enabled                # Is the project enabled
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      key                    # A path to a client key to use as part of the SSL
                               transaction
      name=                  # Name for the project
      region_name            # Name of the region.
      state                  # Should the resource be present or absent.
      timeout                # How long should ansible wait for the requested
                               resource.
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      wait                   # Should ansible wait until the requested resource
                               is complete.
- name: Retrieve facts about one or more OpenStack projects
  action: os_project_facts
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      domain                 # Name or ID of the domain containing the project
                               if the cloud
                               supports domains
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      filters                # A dictionary of meta data to use for further
                               filtering.
                               Elements of this
                               dictionary may be
                               additional
                               dictionaries.
      key                    # A path to a client key to use as part of the SSL
                               transaction
      name=                  # Name or ID of the project
      region_name            # Name of the region.
      timeout                # How long should ansible wait for the requested
                               resource.
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      wait                   # Should ansible wait until the requested resource
                               is complete.
- name: Manage OpenStack DNS recordsets
  action: os_recordset
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      description            # Description of the recordset
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      key                    # A path to a client key to use as part of the SSL
                               transaction
      name=                  # Name of the recordset
      records=               # List of recordset definitions
      recordset_type=        # Recordset type
      region_name            # Name of the region.
      state                  # Should the resource be present or absent.
      timeout                # How long should ansible wait for the requested
                               resource.
      ttl                    # TTL (Time To Live) value in seconds
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      wait                   # Should ansible wait until the requested resource
                               is complete.
      zone=                  # Zone managing the recordset
- name: Create or delete routers from OpenStack
  action: os_router
      admin_state_up         # Desired admin state of the created or existing
                               router.
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      enable_snat            # Enable Source NAT (SNAT) attribute.
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      external_fixed_ips     # The IP address parameters for the external
                               gateway network.
                               Each is a
                               dictionary with
                               the subnet name
                               or ID (subnet)
                               and the IP
                               address to assign
                               on the subnet
                               (ip). If no IP is
                               specified, one is
                               automatically
                               assigned from
                               that subnet.
      interfaces             # List of subnets to attach to the router internal
                               interface.
      key                    # A path to a client key to use as part of the SSL
                               transaction
      name=                  # Name to be give to the router
      network                # Unique name or ID of the external gateway
                               network. required
                               `interfaces' or
                               `enable_snat' are
                               provided.
      project                # Unique name or ID of the project.
      region_name            # Name of the region.
      state                  # Indicate desired state of the resource
      timeout                # How long should ansible wait for the requested
                               resource.
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      wait                   # Should ansible wait until the requested resource
                               is complete.
- name: Add/Delete security groups from an OpenStack cloud.
  action: os_security_group
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      description            # Long description of the purpose of the security
                               group
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      key                    # A path to a client key to use as part of the SSL
                               transaction
      name=                  # Name that has to be given to the security group.
                               This module
                               requires that
                               security group
                               names be unique.
      region_name            # Name of the region.
      state                  # Should the resource be present or absent.
      timeout                # How long should ansible wait for the requested
                               resource.
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      wait                   # Should ansible wait until the requested resource
                               is complete.
- name: Add/Delete rule from an existing security group
  action: os_security_group_rule
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      direction              # The direction in which the security group rule
                               is applied. Not
                               all providers
                               support egress.
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      ethertype              # Must be IPv4 or IPv6, and addresses represented
                               in CIDR must
                               match the ingress
                               or egress rules.
                               Not all providers
                               support IPv6.
      key                    # A path to a client key to use as part of the SSL
                               transaction
      port_range_max         # Ending port
      port_range_min         # Starting port
      protocol               # IP protocols TCP UDP ICMP 112 (VRRP)
      region_name            # Name of the region.
      remote_group           # Name or ID of the Security group to link
                               (exclusive with
                               remote_ip_prefix)
      remote_ip_prefix       # Source IP address(es) in CIDR notation
                               (exclusive with
                               remote_group)
      security_group=        # Name or ID of the security group
      state                  # Should the resource be present or absent.
      timeout                # How long should ansible wait for the requested
                               resource.
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      wait                   # Should ansible wait until the requested resource
                               is complete.
- name: Create/Delete Compute Instances from OpenStack
  action: os_server
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      auto_ip                # Ensure instance has public ip however the cloud
                               wants to do that
      availability_zone      # Name of the availability zone.
      boot_from_volume       # Should the instance boot from a persistent
                               volume created
                               based on the
                               image given.
                               Mututally
                               exclusive with
                               boot_volume.
      boot_volume            # Volume name or id to use as the volume to boot
                               from. Implies
                               boot_from_volume.
                               Mutually
                               exclusive with
                               image and
                               boot_from_volume.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      config_drive           # Whether to boot the server with config drive
                               enabled
      delete_fip             # When `state' is absent and this option is true,
                               any floating IP
                               associated with
                               the instance will
                               be deleted along
                               with the
                               instance.
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      flavor                 # The name or id of the flavor in which the new
                               instance has to
                               be created.
                               Mutually
                               exclusive with
                               flavor_ram
      flavor_include         # Text to use to filter flavor names, for the
                               case, such as
                               Rackspace, where
                               there are
                               multiple flavors
                               that have the
                               same ram count.
                               flavor_include is
                               a positive match
                               filter - it must
                               exist in the
                               flavor name.
      flavor_ram             # The minimum amount of ram in MB that the flavor
                               in which the new
                               instance has to
                               be created must
                               have. Mutually
                               exclusive with
                               flavor.
      floating_ip_pools      # Name of floating IP pool from which to choose a
                               floating IP
      floating_ips           # list of valid floating IPs that pre-exist to
                               assign to this
                               node
      image=                 # The name or id of the base image to boot.
      image_exclude          # Text to use to filter image names, for the case,
                               such as HP, where
                               there are
                               multiple image
                               names matching
                               the common
                               identifying
                               portions.
                               image_exclude is
                               a negative match
                               filter - it is
                               text that may not
                               exist in the
                               image name.
                               Defaults to
                               "(deprecated)"
      key                    # A path to a client key to use as part of the SSL
                               transaction
      key_name               # The key pair name to be used when creating a
                               instance
      meta                   # A list of key value pairs that should be
                               provided as a
                               metadata to the
                               new instance or a
                               string containing
                               a list of key-
                               value pairs. Eg:
                               meta: "key1=value
                               1,key2=value2"
      name=                  # Name that has to be given to the instance
      network                # Name or ID of a network to attach this instance
                               to. A simpler
                               version of the
                               nics parameter,
                               only one of
                               network or nics
                               should be
                               supplied.
      nics                   # A list of networks to which the instance's
                               interface should
                               be attached.
                               Networks may be
                               referenced by
                               net-id/net-name
                               /port-id or port-
                               name. Also this
                               accepts a string
                               containing a list
                               of (net/port)-(id
                               /name) Eg: nics:
                               "net-id=uuid-1
                               ,port-
                               name=myport" Only
                               one of network or
                               nics should be
                               supplied.
      region_name            # Name of the region.
      reuse_ips              # When `auto_ip' is true and this option is true,
                               the `auto_ip'
                               code will attempt
                               to re-use
                               unassigned
                               floating ips in
                               the project
                               before creating a
                               new one. It is
                               important to note
                               that it is
                               impossible to
                               safely do this
                               concurrently, so
                               if your use case
                               involves
                               concurrent server
                               creation, it is
                               highly
                               recommended to
                               set this to false
                               and to delete the
                               floating ip
                               associated with a
                               server when the
                               server is deleted
                               using
                               `delete_fip'.
      scheduler_hints        # Arbitrary key/value pairs to the scheduler for
                               custom use
      security_groups        # Names of the security groups to which the
                               instance should
                               be added. This
                               may be a YAML
                               list or a comma
                               separated string.
      state                  # Should the resource be present or absent.
      terminate_volume       # If true, delete volume when deleting instance
                               (if booted from
                               volume)
      timeout                # How long should ansible wait for the requested
                               resource.
      userdata               # Opaque blob of data which is made available to
                               the instance
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      volume_size            # The size of the volume to create in GB if
                               booting from
                               volume based on
                               an image.
      volumes                # A list of preexisting volumes names or ids to
                               attach to the
                               instance
      wait                   # Should ansible wait until the requested resource
                               is complete.
- name: Perform actions on Compute Instances from OpenStack
  action: os_server_actions
      action                 # Perform the given action. The lock and unlock
                               actions always
                               return changed as
                               the servers API
                               does not provide
                               lock status.
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      key                    # A path to a client key to use as part of the SSL
                               transaction
      region_name            # Name of the region.
      server=                # Name or ID of the instance
      timeout                # How long should ansible wait for the requested
                               resource.
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      wait                   # Should ansible wait until the requested resource
                               is complete.
- name: Retrieve facts about one or more compute instances
  action: os_server_facts
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      detailed               # when true, return additional detail about
                               servers at the
                               expense of
                               additional API
                               calls.
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      key                    # A path to a client key to use as part of the SSL
                               transaction
      region_name            # Name of the region.
      server                 # restrict results to servers with names matching
                               this glob
                               expression (e.g.,
                               C<web*>).
      timeout                # How long should ansible wait for the requested
                               resource.
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      wait                   # Should ansible wait until the requested resource
                               is complete.
- name: Manage OpenStack server groups
  action: os_server_group
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      key                    # A path to a client key to use as part of the SSL
                               transaction
      name=                  # Server group name.
      policies               # A list of one or more policy names to associate
                               with the server
                               group. The list
                               must contain at
                               least one policy
                               name. The current
                               valid policy
                               names are anti-
                               affinity,
                               affinity, soft-
                               anti-affinity and
                               soft-affinity.
      region_name            # Name of the region.
      state                  # Indicate desired state of the resource. When
                               `state' is
                               'present', then
                               `policies' is
                               required.
      timeout                # How long should ansible wait for the requested
                               resource.
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      wait                   # Should ansible wait until the requested resource
                               is complete.
- name: Attach/Detach Volumes from OpenStack VM's
  action: os_server_volume
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      device                 # Device you want to attach. Defaults to auto
                               finding a device
                               name.
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      key                    # A path to a client key to use as part of the SSL
                               transaction
      region_name            # Name of the region.
      server=                # Name or ID of server you want to attach a volume
                               to
      state                  # Should the resource be present or absent.
      timeout                # How long should ansible wait for the requested
                               resource.
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      volume=                # Name or id of volume you want to attach to a
                               server
      wait                   # Should ansible wait until the requested resource
                               is complete.
- name: Add/Remove Heat Stack
  action: os_stack
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      environment            # List of environment files that should be used
                               for the stack
                               creation
      key                    # A path to a client key to use as part of the SSL
                               transaction
      name=                  # Name of the stack that should be created, name
                               could be char and
                               digit, no space
      parameters             # Dictionary of parameters for the stack creation
      region_name            # Name of the region.
      rollback               # Rollback stack creation
      state                  # Indicate desired state of the resource
      template               # Path of the template file to use for the stack
                               creation
      timeout                # How long should ansible wait for the requested
                               resource.
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      wait                   # Should ansible wait until the requested resource
                               is complete.
- name: Add/Remove subnet to an OpenStack network
  action: os_subnet
      allocation_pool_end    # From the subnet pool the last IP that should be
                               assigned to the
                               virtual machines.
      allocation_pool_start   # From the subnet pool the starting address from
                               which the IP
                               should be
                               allocated.
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cidr                   # The CIDR representation of the subnet that
                               should be
                               assigned to the
                               subnet. Required
                               when `state' is
                               'present'
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      dns_nameservers        # List of DNS nameservers for this subnet.
      enable_dhcp            # Whether DHCP should be enabled for this subnet.
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      gateway_ip             # The ip that would be assigned to the gateway for
                               this subnet
      host_routes            # A list of host route dictionaries for the
                               subnet.
      ip_version             # The IP version of the subnet 4 or 6
      ipv6_address_mode      # IPv6 address mode
      ipv6_ra_mode           # IPv6 router advertisement mode
      key                    # A path to a client key to use as part of the SSL
                               transaction
      name=                  # The name of the subnet that should be created.
                               Although Neutron
                               allows for non-
                               unique subnet
                               names, this
                               module enforces
                               subnet name
                               uniqueness.
      network_name           # Name of the network to which the subnet should
                               be attached
                               Required when
                               `state' is
                               'present'
      no_gateway_ip          # The gateway IP would not be assigned for this
                               subnet
      project                # Project name or ID containing the subnet (name
                               admin-only)
      region_name            # Name of the region.
      state                  # Indicate desired state of the resource
      timeout                # How long should ansible wait for the requested
                               resource.
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      wait                   # Should ansible wait until the requested resource
                               is complete.
- name: Retrieve facts about one or more OpenStack subnets.
  action: os_subnets_facts
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      filters                # A dictionary of meta data to use for further
                               filtering.
                               Elements of this
                               dictionary may be
                               additional
                               dictionaries.
      key                    # A path to a client key to use as part of the SSL
                               transaction
      region_name            # Name of the region.
      subnet                 # Name or ID of the subnet
      timeout                # How long should ansible wait for the requested
                               resource.
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      wait                   # Should ansible wait until the requested resource
                               is complete.
- name: Manage OpenStack Identity Users
  action: os_user
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      default_project        # Project name or ID that the user should be
                               associated with
                               by default
      domain                 # Domain to create the user in if the cloud
                               supports domains
      email                  # Email address for the user
      enabled                # Is the user enabled
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      key                    # A path to a client key to use as part of the SSL
                               transaction
      name=                  # Username for the user
      password               # Password for the user
      region_name            # Name of the region.
      state                  # Should the resource be present or absent.
      timeout                # How long should ansible wait for the requested
                               resource.
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      wait                   # Should ansible wait until the requested resource
                               is complete.
- name: Retrieve facts about one or more OpenStack users
  action: os_user_facts
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      domain                 # Name or ID of the domain containing the user if
                               the cloud
                               supports domains
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      filters                # A dictionary of meta data to use for further
                               filtering.
                               Elements of this
                               dictionary may be
                               additional
                               dictionaries.
      key                    # A path to a client key to use as part of the SSL
                               transaction
      name=                  # Name or ID of the user
      region_name            # Name of the region.
      timeout                # How long should ansible wait for the requested
                               resource.
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      wait                   # Should ansible wait until the requested resource
                               is complete.
- name: Associate OpenStack Identity users and groups
  action: os_user_group
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      group=                 # Name or id for the group.
      key                    # A path to a client key to use as part of the SSL
                               transaction
      region_name            # Name of the region.
      state                  # Should the user be present or absent in the
                               group
      timeout                # How long should ansible wait for the requested
                               resource.
      user=                  # Name or id for the user
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      wait                   # Should ansible wait until the requested resource
                               is complete.
- name: Associate OpenStack Identity users and roles
  action: os_user_role
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      domain                 # ID of the domain to scope the role association
                               to. Valid only
                               with keystone
                               version 3, and
                               required if
                               `project' is not
                               specified.
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      group                  # Name or ID for the group. Valid only with
                               keystone version
                               3. If `group' is
                               not specified,
                               then `user' is
                               required. Both
                               may not be
                               specified.
      key                    # A path to a client key to use as part of the SSL
                               transaction
      project                # Name or ID of the project to scope the role
                               assocation to. If
                               you are using
                               keystone version
                               2, then this
                               value is
                               required.
      region_name            # Name of the region.
      role=                  # Name or ID for the role.
      state                  # Should the roles be present or absent on the
                               user.
      timeout                # How long should ansible wait for the requested
                               resource.
      user                   # Name or ID for the user. If `user' is not
                               specified, then
                               `group' is
                               required. Both
                               may not be
                               specified.
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      wait                   # Should ansible wait until the requested resource
                               is complete.
- name: Create/Delete Cinder Volumes
  action: os_volume
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      display_description    # String describing the volume
      display_name=          # Name of volume
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      image                  # Image name or id for boot from volume
      key                    # A path to a client key to use as part of the SSL
                               transaction
      region_name            # Name of the region.
      size                   # Size of volume in GB. This parameter is required
                               when the `state'
                               parameter is
                               'present'.
      snapshot_id            # Volume snapshot id to create from
      state                  # Should the resource be present or absent.
      timeout                # How long should ansible wait for the requested
                               resource.
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      volume_type            # Volume type for volume
      wait                   # Should ansible wait until the requested resource
                               is complete.
- name: Manage OpenStack DNS zones
  action: os_zone
      api_timeout            # How long should the socket layer wait before
                               timing out for
                               API calls. If
                               this is omitted,
                               nothing will be
                               passed to the
                               requests library.
      auth                   # Dictionary containing auth information as needed
                               by the cloud's
                               auth plugin
                               strategy. For the
                               default
                               `password'
                               plugin, this
                               would contain
                               `auth_url',
                               `username',
                               `password',
                               `project_name'
                               and any
                               information about
                               domains if the
                               cloud supports
                               them. For other
                               plugins, this
                               param will need
                               to contain
                               whatever
                               parameters that
                               auth plugin
                               requires. This
                               parameter is not
                               needed if a named
                               cloud is provided
                               or OpenStack OS_*
                               environment
                               variables are
                               present.
      auth_type              # Name of the auth plugin to use. If the cloud
                               uses something
                               other than
                               password
                               authentication,
                               the name of the
                               plugin should be
                               indicated here
                               and the contents
                               of the `auth'
                               parameter should
                               be updated
                               accordingly.
      availability_zone      # Name of the availability zone.
      cacert                 # A path to a CA Cert bundle that can be used as
                               part of verifying
                               SSL API requests.
      cert                   # A path to a client certificate to use as part of
                               the SSL
                               transaction
      cloud                  # Named cloud to operate against. Provides default
                               values for `auth'
                               and `auth_type'.
                               This parameter is
                               not needed if
                               `auth' is
                               provided or if
                               OpenStack OS_*
                               environment
                               variables are
                               present.
      description            # Zone description
      email                  # Email of the zone owner (only applies if
                               zone_type is
                               primary)
      endpoint_type          # Endpoint URL type to fetch from the service
                               catalog.
      key                    # A path to a client key to use as part of the SSL
                               transaction
      masters                # Master nameservers (only applies if zone_type is
                               secondary)
      name=                  # Zone name
      region_name            # Name of the region.
      state                  # Should the resource be present or absent.
      timeout                # How long should ansible wait for the requested
                               resource.
      ttl                    # TTL (Time To Live) value in seconds
      validate_certs         # Whether or not SSL API requests should be
                               verified.
      wait                   # Should ansible wait until the requested resource
                               is complete.
      zone_type              # Zone type
- name: osx_defaults allows users to read, write, and delete Mac OS X user defaults from Ansible
  action: osx_defaults
      array_add              # Add new elements to the array for a key which
                               has an array as
                               its value.
      domain                 # The domain is a domain name of the form
                               com.companyname.a
                               ppname.
      host                   # The host on which the preference should apply.
                               The special value
                               "currentHost"
                               corresponds to
                               the
                               "-currentHost"
                               switch of the
                               defaults
                               commandline tool.
      key=                   # The key of the user preference
      state                  # The state of the user defaults
      type                   # The type of value to write.
      value                  # The value to write. Only required when state =
                               present.
- name: Makes an OSX computer to speak.
  action: osx_say
      msg=                   # W h a t   t o   s a y
      voice                  # W h a t   v o i c e   t o   u s e
- name: Manage OVH IP LoadBalancing backends
  action: ovh_ip_loadbalancing_backend
      application_key=       # The applicationKey to use
      application_secret=    # The application secret to use
      backend=               # The IP address of the backend to update / modify
                               / delete
      consumer_key=          # The consumer key to use
      endpoint=              # The endpoint to use ( for instance ovh-eu)
      name=                  # Name of the LoadBalancing internal name
                               (ip-X.X.X.X)
      probe                  # Determines the type of probe to use for this
                               backend
      state                  # Determines wether the backend is to be
                               created/modified
                               or deleted
      timeout                # The timeout in seconds used to wait for a task
                               to be completed.
                               Default is 120
                               seconds.
      weight                 # Determines the weight for this backend
- name: oVirt/RHEV platform management
  action: ovirt
      disk_alloc             # define if disk is thin or preallocated
      disk_int               # interface type of the disk
      image                  # template to use for the instance
      instance_cores         # define the instance's number of cores
      instance_cpus          # the instance's number of cpu's
      instance_disksize      # size of the instance's disk in GB
      instance_dns           # define the instance's Primary DNS server
      instance_domain        # define the instance's Domain
      instance_hostname      # define the instance's Hostname
      instance_ip            # define the instance's IP
      instance_key           # define the instance's Authorized key
      instance_mem           # the instance's amount of memory in MB
      instance_name=         # the name of the instance to use
      instance_netmask       # define the instance's Netmask
      instance_network       # the logical network the machine should belong to
      instance_nic           # name of the network interface in oVirt/RHEV
      instance_os            # type of Operating System
      instance_rootpw        # define the instance's Root password
      instance_type          # define if the instance is a server or desktop
      password=              # password of the user to authenticate with
      region                 # the oVirt/RHEV datacenter where you want to
                               deploy to
      resource_type          # whether you want to deploy an image or create an
                               instance from
                               scratch.
      sdomain                # the Storage Domain where you want to create the
                               instance's disk
                               on.
      state                  # create, terminate or remove instances
      url=                   # the url of the oVirt instance
      user=                  # the user to authenticate with
      zone                   # deploy the image to this oVirt cluster
- name: Module to manage authentication to oVirt.
  action: ovirt_auth
      ca_file                # A PEM file containing the trusted CA
                               certificates. The
                               certificate
                               presented by the
                               server will be
                               verified using
                               these CA
                               certificates. If
                               `ca_file'
                               parameter is not
                               set, system wide
                               CA certificate
                               store is used.
      compress               # A boolean flag indicating if the SDK should ask
                               the server to
                               send compressed
                               responses. The
                               default is
                               `True'. Note that
                               this is a hint
                               for the server,
                               and that it may
                               return
                               uncompressed data
                               even when this
                               parameter is set
                               to `True'.
      insecure               # A boolean flag that indicates if the server TLS
                               certificate and
                               host name should
                               be checked.
      kerberos               # A boolean flag indicating if Kerberos
                               authentication
                               should be used
                               instead of the
                               default basic
                               authentication.
      password=              # The password of the user.
      state                  # Specifies if a token should be created or
                               revoked.
      timeout                # The maximum total time to wait for the response,
                               in seconds. A
                               value of zero
                               (the default)
                               means wait
                               forever. If the
                               timeout expires
                               before the
                               response is
                               received an
                               exception will be
                               raised.
      url=                   # A string containing the base URL of the server.
                               For example: `htt
                               ps://server.examp
                               le.com/ovirt-
                               engine/api'.
      username=              # The name of the user. For example:
                               `admin@internal'.
- name: Module to manage Virtual Machine and floating disks in oVirt.
  action: ovirt_disks
      auth=                  # Dictionary with values needed to create
                               HTTP/HTTPS
                               connection to
                               oVirt: `username'
                               [`required'] -
                               The name of the
                               user, something
                               like ``admin@inte
                               rnal'`. `password
                               '[`required'] -
                               The password of
                               the user.
                               `url'[`required']
                               - A string
                               containing the
                               base URL of the
                               server, usually
                               something like ``
                               https://server.ex
                               ample.com/ovirt-
                               engine/api'`.
                               `token' - Token
                               to be used
                               instead of login
                               with username/pas
                               sword. `insecure'
                               - A boolean flag
                               that indicates if
                               the server TLS
                               certificate and
                               host name should
                               be checked.
                               `ca_file' - A PEM
                               file containing
                               the trusted CA
                               certificates. The
                               certificate
                               presented by the
                               server will be
                               verified using
                               these CA
                               certificates. If
                               ``ca_file'`
                               parameter is not
                               set, system wide
                               CA certificate
                               store is used.
                               `kerberos' - A
                               boolean flag
                               indicating if
                               Kerberos
                               authentication
                               should be used
                               instead of the
                               default basic
                               authentication.
      bootable               # `True' if the disk should be bootable. By
                               default when disk
                               is created it
                               isn't bootable.
      format                 # Format of the disk. Either copy-on-write or raw.
      id                     # ID of the disk to manage. Either `id' or `name'
                               is required.
      interface              # Driver of the storage interface.
      logical_unit           # Dictionary which describes LUN to be directly
                               attached to VM:
                               `address' -
                               Address of the
                               storage server.
                               Used by iSCSI.
                               `port' - Port of
                               the storage
                               server. Used by
                               iSCSI. `target' -
                               iSCSI target.
                               `lun_id' - LUN
                               id. `username' -
                               CHAP Username to
                               be used to access
                               storage server.
                               Used by iSCSI.
                               `password' - CHAP
                               Password of the
                               user to be used
                               to access storage
                               server. Used by
                               iSCSI.
                               `storage_type' -
                               Storage type
                               either `fcp' or
                               `iscsi'.
      name                   # Name of the disk to manage. Either `id' or
                               `name'/`alias' is
                               required.
      poll_interval          # Number of the seconds the module waits until
                               another poll
                               request on entity
                               status is sent.
      profile                # Disk profile name to be attached to disk. By
                               default profile
                               is chosen by
                               oVirt engine.
      shareable              # `True' if the disk should be shareable. By
                               default when disk
                               is created it
                               isn't shareable.
      size                   # Size of the disk. Size should be specified using
                               IEC standard
                               units. For
                               example 10GiB,
                               1024MiB, etc.
      state                  # Should the Virtual Machine disk be
                               present/absent/at
                               tached/detached.
      storage_domain         # Storage domain name where disk should be
                               created. By
                               default storage
                               is chosen by
                               oVirt engine.
      timeout                # The amount of time in seconds the module should
                               wait for the
                               instance to get
                               into desired
                               state.
      vm_id                  # ID of the Virtual Machine to manage. Either
                               `vm_id' or
                               `vm_name' is
                               required if
                               `state' is
                               `attached' or
                               `detached'.
      vm_name                # Name of the Virtual Machine to manage. Either
                               `vm_id' or
                               `vm_name' is
                               required if
                               `state' is
                               `attached' or
                               `detached'.
      wait                   # True if the module should wait for the entity to
                               get into desired
                               state.
- name: Module to manage Virtual Machines in oVirt.
  action: ovirt_vms
      auth=                  # Dictionary with values needed to create
                               HTTP/HTTPS
                               connection to
                               oVirt: `username'
                               [`required'] -
                               The name of the
                               user, something
                               like ``admin@inte
                               rnal'`. `password
                               '[`required'] -
                               The password of
                               the user.
                               `url'[`required']
                               - A string
                               containing the
                               base URL of the
                               server, usually
                               something like ``
                               https://server.ex
                               ample.com/ovirt-
                               engine/api'`.
                               `token' - Token
                               to be used
                               instead of login
                               with username/pas
                               sword. `insecure'
                               - A boolean flag
                               that indicates if
                               the server TLS
                               certificate and
                               host name should
                               be checked.
                               `ca_file' - A PEM
                               file containing
                               the trusted CA
                               certificates. The
                               certificate
                               presented by the
                               server will be
                               verified using
                               these CA
                               certificates. If
                               ``ca_file'`
                               parameter is not
                               set, system wide
                               CA certificate
                               store is used.
                               `kerberos' - A
                               boolean flag
                               indicating if
                               Kerberos
                               authentication
                               should be used
                               instead of the
                               default basic
                               authentication.
      boot_devices           # List of boot devices which should be used to
                               boot. Choices
                               `network', `hd'
                               and `cdrom'. For
                               example:
                               ['cdrom', 'hd'].
                               Default value is
                               set by oVirt
                               engine.
      cd_iso                 # ISO file from ISO storage domain which should be
                               attached to
                               Virtual Machine.
                               If you pass empty
                               string the CD
                               will be ejected
                               from VM. If used
                               with `state'
                               `running' or
                               `present' and VM
                               is running the CD
                               will be attached
                               to VM. If used
                               with `state'
                               `running' or
                               `present' and VM
                               is down the CD
                               will be attached
                               to VM
                               persistently.
      clone                  # If `True' then the disks of the created virtual
                               machine will be
                               cloned and
                               independent of
                               the template.
                               This parameter is
                               used only when
                               `state' is
                               `running' or
                               `present' and VM
                               didn't exist
                               before.
      clone_permissions      # If `True' then the permissions of the template
                               (only the direct
                               ones, not the
                               inherited ones)
                               will be copied to
                               the created
                               virtual machine.
                               This parameter is
                               used only when
                               `state' is
                               `running' or
                               `present' and VM
                               didn't exist
                               before.
      cloud_init             # Dictionary with values for Unix-like Virtual
                               Machine
                               initialization
                               using cloud init:
                               `host_name' -
                               Hostname to be
                               set to Virtual
                               Machine when
                               deployed.
                               `timezone' -
                               Timezone to be
                               set to Virtual
                               Machine when
                               deployed.
                               `user_name' -
                               Username to be
                               used to set
                               password to
                               Virtual Machine
                               when deployed.
                               `root_password' -
                               Password to be
                               set for user
                               specified by
                               `user_name'
                               parameter. `autho
                               rized_ssh_keys' -
                               Use this SSH keys
                               to login to
                               Virtual Machine. 
                               `regenerate_ssh_k
                               eys' - If `True'
                               SSH keys will be
                               regenerated on
                               Virtual Machine.
                               `custom_script' -
                               Cloud-init script
                               which will be
                               executed on
                               Virtual Machine
                               when deployed.
                               `dns_servers' -
                               DNS servers to be
                               configured on
                               Virtual Machine.
                               `dns_search' -
                               DNS search
                               domains to be
                               configured on
                               Virtual Machine. 
                               `nic_boot_protoco
                               l' - Set boot
                               protocol of the
                               network interface
                               of Virtual
                               Machine. Can be
                               one of None, DHCP
                               or Static.
                               `nic_ip_address'
                               - If boot
                               protocol is
                               static, set this
                               IP address to
                               network interface
                               of Virtual
                               Machine.
                               `nic_netmask' -
                               If boot protocol
                               is static, set
                               this netmask to
                               network interface
                               of Virtual
                               Machine.
                               `nic_gateway' -
                               If boot protocol
                               is static, set
                               this gateway to
                               network interface
                               of Virtual
                               Machine.
                               `nic_name' - Set
                               name to network
                               interface of
                               Virtual Machine.
                               `nic_on_boot' -
                               If `True' network
                               interface will be
                               set to start on
                               boot.
      cluster                # Name of the cluster, where Virtual Machine
                               should be
                               created. Required
                               if creating VM.
      cpu_cores              # Number of virtual CPUs cores of the Virtual
                               Machine. Default
                               value is set by
                               oVirt engine.
      cpu_shares             # Set a CPU shares for this Virtual Machine.
                               Default value is
                               set by oVirt
                               engine.
      cpu_sockets            # Number of virtual CPUs sockets of the Virtual
                               Machine. Default
                               value is set by
                               oVirt engine.
      delete_protected       # If `True' Virtual Machine will be set as delete
                               protected. If
                               `False' Virtual
                               Machine won't be
                               set as delete
                               protected. If no
                               value is passed,
                               default value is
                               set by oVirt
                               engine.
      disks                  # List of disks, which should be attached to
                               Virtual Machine.
                               Disk is described
                               by following
                               dictionary:
                               `name' - Name of
                               the disk. Either
                               `name' or `id' is
                               reuqired. `id' -
                               ID of the disk.
                               Either `name' or
                               `id' is reuqired.
                               `interface' -
                               Interface of the
                               disk, either
                               `virtio' or
                               `IDE', default is
                               `virtio'.
                               `bootable' -
                               `True' if the
                               disk should be
                               bootable, default
                               is non bootable.
                               `activate' -
                               `True' if the
                               disk should be
                               activated,
                               default is
                               activated.
                               `Note:' This
                               parameter is used
                               only when `state'
                               is `running' or
                               `present' and is
                               able to only
                               attach disks. To
                               manage disks of
                               the VM in more
                               depth please use
                               [ovirt_disks]
                               module instead.
      force                  # Please check to `Synopsis' to more detailed
                               description of
                               force parameter,
                               it can behave
                               differently in
                               different
                               situations.
      high_availability      # If `True' Virtual Machine will be set as highly
                               available. If
                               `False' Virtual
                               Machine won't be
                               set as highly
                               available. If no
                               value is passed,
                               default value is
                               set by oVirt
                               engine.
      host                   # Specify host where Virtual Machine should be
                               running. By
                               default the host
                               is chosen by
                               engine scheduler.
                               This parameter is
                               used only when
                               `state' is
                               `running' or
                               `present'.
      id                     # ID of the the Virtual Machine to manage.
      memory                 # Amount of memory of the Virtual Machine. Prefix
                               uses IEC 60027-2
                               standard (for
                               example 1GiB,
                               1024MiB). Default
                               value is set by
                               engine.
      memory_guaranteed      # Amount of minimal guaranteed memory of the
                               Virtual Machine.
                               Prefix uses IEC
                               60027-2 standard
                               (for example
                               1GiB, 1024MiB). `
                               memory_guaranteed
                               ' parameter can't
                               be lower than
                               `memory'
                               parameter.
                               Default value is
                               set by engine.
      name                   # Name of the the Virtual Machine to manage. If VM
                               don't exists
                               `name' is
                               required.
                               Otherwise `id' or
                               `name' can be
                               used.
      nics                   # List of NICs, which should be attached to
                               Virtual Machine.
                               NIC is described
                               by following
                               dictionary:
                               `name' - Name of
                               the NIC.
                               `profile_name' -
                               Profile name
                               where NIC should
                               be attached.
                               `interface' -
                               Type of the
                               network
                               interface. One of
                               following:
                               `virtio',
                               `e1000',
                               `rtl8139',
                               default is
                               `virtio'.
                               `mac_address' -
                               Custom MAC
                               address of the
                               network
                               interface, by
                               default it's
                               obtained from MAC
                               pool. `Note:'
                               This parameter is
                               used only when
                               `state' is
                               `running' or
                               `present' and is
                               able to only
                               create NICs. To
                               manage NICs of
                               the VM in more
                               depth please use
                               [ovirt_nics]
                               module instead.
      operating_system       # Operating system of the Virtual Machine. Default
                               value is set by
                               oVirt engine.
      poll_interval          # Number of the seconds the module waits until
                               another poll
                               request on entity
                               status is sent.
      state                  # Should the Virtual Machine be running/stopped/pr
                               esent/absent/susp
                               ended/next_run.
                               `present' and
                               `running' are
                               equal states.
                               `next_run' state
                               updates the VM
                               and if the VM has
                               next run
                               configuration it
                               will be rebooted.
                               Please check
                               `notes' to more
                               detailed
                               description of
                               states.
      stateless              # If `True' Virtual Machine will be set as
                               stateless. If
                               `False' Virtual
                               Machine will be
                               unset as
                               stateless. If no
                               value is passed,
                               default value is
                               set by oVirt
                               engine.
      sysprep                # Dictionary with values for Windows Virtual
                               Machine
                               initialization
                               using sysprep:
                               `host_name' -
                               Hostname to be
                               set to Virtual
                               Machine when
                               deployed. `active
                               _directory_ou' -
                               Active Directory
                               Organizational
                               Unit, to be used
                               for login of
                               user. `org_name'
                               - Organization
                               name to be set to
                               Windows Virtual
                               Machine. `domain'
                               - Domain to be
                               set to Windows
                               Virtual Machine.
                               `timezone' -
                               Timezone to be
                               set to Windows
                               Virtual Machine.
                               `ui_language' -
                               UI language of
                               the Windows
                               Virtual Machine.
                               `system_locale' -
                               System
                               localization of
                               the Windows
                               Virtual Machine.
                               `input_locale' -
                               Input
                               localization of
                               the Windows
                               Virtual Machine. 
                               `windows_license_
                               key' - License
                               key to be set to
                               Windows Virtual
                               Machine.
                               `user_name' -
                               Username to be
                               used for set
                               password to
                               Windows Virtual
                               Machine.
                               `root_password' -
                               Password to be
                               set for username
                               to Windows
                               Virtual Machine.
      template               # Name of the template, which should be used to
                               create Virtual
                               Machine. Required
                               if creating VM.
                               If template is
                               not specified and
                               VM doesn't exist,
                               VM will be
                               created from
                               `Blank' template.
      timeout                # The amount of time in seconds the module should
                               wait for the
                               instance to get
                               into desired
                               state.
      type                   # Type of the Virtual Machine. Default value is
                               set by oVirt
                               engine.
      wait                   # True if the module should wait for the entity to
                               get into desired
                               state.
- name: Generic OS package manager
  action: package
      name=                  # Package name, or package specifier with version,
                               like `name-1.0'.
                               Be aware that
                               packages are not
                               always named the
                               same and this
                               module will not
                               'translate' them
                               per distro.
      state=                 # Whether to install (`present', `latest'), or
                               remove (`absent')
                               a package.
      use                    # The required package manager module to use (yum,
                               apt, etc). The
                               default 'auto'
                               will use existing
                               facts or try to
                               autodetect it.
                               You should only
                               use this field if
                               the automatic
                               selection is not
                               working for some
                               reason.
- name: Manage packages with `pacman'
  action: pacman
      force                  # When removing package - force remove package,
                               without any
                               checks. When
                               update_cache -
                               force redownload
                               repo databases.
      name                   # Name of the package to install, upgrade, or
                               remove.
      recurse                # When removing a package, also remove its
                               dependencies,
                               provided that
                               they are not
                               required by other
                               packages and were
                               not explicitly
                               installed by a
                               user.
      state                  # Desired state of the package.
      update_cache           # Whether or not to refresh the master package
                               lists. This can
                               be run as part of
                               a package
                               installation or
                               as a separate
                               step.
      upgrade                # Whether or not to upgrade whole system
- name: Create PagerDuty maintenance windows
  action: pagerduty
      desc                   # Short description of maintenance window.
      hours                  # Length of maintenance window in hours.
      minutes                # Maintenance window in minutes (this is added to
                               the hours).
      name=                  # PagerDuty unique subdomain.
      passwd=                # PagerDuty user password.
      requester_id=          # ID of user making the request. Only needed when
                               using a token and
                               creating a mainte
                               nance_window.
      service                # A comma separated list of PagerDuty service IDs.
      state=                 # Create a maintenance window or get a list of
                               ongoing windows.
      token=                 # A pagerduty token, generated on the pagerduty
                               site. Can be used
                               instead of
                               user/passwd
                               combination.
      user=                  # PagerDuty user ID.
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
- name: Trigger, acknowledge or resolve PagerDuty incidents
  action: pagerduty_alert
      api_key=               # The pagerduty API key (readonly access),
                               generated on the
                               pagerduty site.
      client                 # The name of the monitoring client that is
                               triggering this
                               event.
      client_url             # The URL of the monitoring client that is
                               triggering this
                               event.
      desc                   # For `triggered' `state' - Required. Short
                               description of
                               the problem that
                               led to this
                               trigger. This
                               field (or a
                               truncated
                               version) will be
                               used when
                               generating phone
                               calls, SMS
                               messages and
                               alert emails. It
                               will also appear
                               on the incidents
                               tables in the
                               PagerDuty UI. The
                               maximum length is
                               1024 characters.
                               For
                               `acknowledged' or
                               `resolved'
                               `state' - Text
                               that will appear
                               in the incident's
                               log associated
                               with this event.
      incident_key           # Identifies the incident to which this `state'
                               should be
                               applied. For
                               `triggered'
                               `state' - If
                               there's no open
                               (i.e. unresolved)
                               incident with
                               this key, a new
                               one will be
                               created. If
                               there's already
                               an open incident
                               with a matching
                               key, this event
                               will be appended
                               to that
                               incident's log.
                               The event key
                               provides an easy
                               way to "de-dup"
                               problem reports.
                               For
                               `acknowledged' or
                               `resolved'
                               `state' - This
                               should be the
                               incident_key you
                               received back
                               when the incident
                               was first opened
                               by a trigger
                               event.
                               Acknowledge
                               events
                               referencing
                               resolved or
                               nonexistent
                               incidents will be
                               discarded.
      name=                  # PagerDuty unique subdomain.
      service_key=           # The GUID of one of your "Generic API" services.
                               This is the
                               "service key"
                               listed on a
                               Generic API's
                               service detail
                               page.
      state=                 # Type of event to be sent.
- name: Modify Linux PAM limits
  action: pam_limits
      backup                 # Create a backup file including the timestamp
                               information so
                               you can get the
                               original file
                               back if you
                               somehow clobbered
                               it incorrectly.
      comment                # Comment associated with the limit.
      dest                   # Modify the limits.conf path.
      domain=                # A username, @groupname, wildcard, uid/gid range.
      limit_item=            # The limit to be set
      limit_type=            # Limit type, see `man limits' for an explanation
      use_max                # If set to `yes', the maximal value will be used
                               or conserved. If
                               the specified
                               value is superior
                               to the value in
                               the file, file
                               content is
                               replaced with the
                               new value, else
                               content is not
                               modified.
      use_min                # If set to `yes', the minimal value will be used
                               or conserved. If
                               the specified
                               value is inferior
                               to the value in
                               the file, file
                               content is
                               replaced with the
                               new value, else
                               content is not
                               modified.
      value=                 # The value of the limit.
- name: Apply patch files using the GNU patch tool.
  action: patch
      backup                 # passes --backup --version-control=numbered to
                               patch, producing
                               numbered backup
                               copies
      basedir                # Path of a base directory in which the patch file
                               will be applied.
                               May be ommitted
                               when `dest'
                               option is
                               specified,
                               otherwise
                               required.
      binary                 # Setting to `yes' will disable patch's heuristic
                               for transforming
                               CRLF line endings
                               into LF. Line
                               endings of src
                               and dest must
                               match. If set to
                               `no', patch will
                               replace CRLF in
                               src files on
                               POSIX.
      dest                   # Path of the file on the remote machine to be
                               patched. The
                               names of the
                               files to be
                               patched are
                               usually taken
                               from the patch
                               file, but if
                               there's just one
                               file to be
                               patched it can
                               specified with
                               this option.
      remote_src             # If `no', it will search for src at
                               originating/maste
                               r machine, if
                               `yes' it will go
                               to the
                               remote/target
                               machine for the
                               src. Default is
                               `no'.
      src=                   # Path of the patch file as accepted by the GNU
                               patch tool. If
                               `remote_src' is
                               'no', the patch
                               source file is
                               looked up from
                               the module's
                               "files"
                               directory.
      strip                  # Number that indicates the smallest prefix
                               containing
                               leading slashes
                               that will be
                               stripped from
                               each file name
                               found in the
                               patch file. For
                               more information
                               see the strip
                               parameter of the
                               GNU patch tool.
- name: Pause playbook execution
  action: pause
      minutes                # A positive number of minutes to pause for.
      prompt                 # Optional text to use for the prompt message.
      seconds                # A positive number of seconds to pause for.
- name: Manage pear/pecl packages
  action: pear
      name=                  # Name of the package to install, upgrade, or
                               remove.
      state                  # Desired state of the package.
- name: Try to connect to host, verify a usable python and return `pong' on success.
  action: ping
- name: Pause/unpause Pingdom alerts
  action: pingdom
      checkid=               # Pingdom ID of the check.
      key=                   # Pingdom API key.
      passwd=                # Pingdom user password.
      state=                 # Define whether or not the check should be
                               running or
                               paused.
      uid=                   # Pingdom user ID.
- name: Manages Python library dependencies.
  action: pip
      chdir                  # cd into this directory before running the
                               command
      editable               # Pass the editable flag for versioning URLs.
      executable             # The explicit executable or a pathname to the
                               executable to be
                               used to run pip
                               for a specific
                               version of Python
                               installed in the
                               system. For
                               example
                               `pip-3.3', if
                               there are both
                               Python 2.7 and
                               3.3 installations
                               in the system and
                               you want to run
                               pip for the
                               Python 3.3
                               installation. It
                               cannot be
                               specified
                               together with the
                               'virtualenv'
                               parameter (added
                               in 2.1). By
                               default, it will
                               take the
                               appropriate
                               version for the
                               python
                               interpreter use
                               by ansible, e.g.
                               pip3 on python 3,
                               and pip2 or pip
                               on python 2.
      extra_args             # Extra arguments passed to pip.
      name                   # The name of a Python library to install or the
                               url of the remote
                               package. As of
                               2.2 you can
                               supply a list of
                               names.
      requirements           # The path to a pip requirements file, which
                               should be local
                               to the remote
                               system. File can
                               be specified as a
                               relative path if
                               using the chdir
                               option.
      state                  # The state of module The 'forcereinstall' option
                               is only available
                               in Ansible 2.1
                               and above.
      umask                  # The system umask to apply before installing the
                               pip package. This
                               is useful, for
                               example, when
                               installing on
                               systems that have
                               a very
                               restrictive umask
                               by default (e.g.,
                               0077) and you
                               want to pip
                               install packages
                               which are to be
                               used by all
                               users. Note that
                               this requires you
                               to specify
                               desired umask
                               mode in octal,
                               with a leading 0
                               (e.g., 0077).
      version                # The version number to install of the Python
                               library specified
                               in the `name'
                               parameter
      virtualenv             # An optional path to a `virtualenv' directory to
                               install into. It
                               cannot be
                               specified
                               together with the
                               'executable'
                               parameter (added
                               in 2.1). If the
                               virtualenv does
                               not exist, it
                               will be created
                               before installing
                               packages. The
                               optional virtuale
                               nv_site_packages,
                               virtualenv_comman
                               d, and
                               virtualenv_python
                               options affect
                               the creation of
                               the virtualenv.
      virtualenv_command     # The command or a pathname to the command to
                               create the
                               virtual
                               environment with.
                               For example
                               `pyvenv',
                               `virtualenv',
                               `virtualenv2', `~
                               /bin/virtualenv',
                               `/usr/local/bin/v
                               irtualenv'.
      virtualenv_python      # The Python executable used for creating the
                               virtual
                               environment. For
                               example
                               `python3.5',
                               `python2.7'. When
                               not specified,
                               the Python
                               version used to
                               run the ansible
                               module is used.
      virtualenv_site_packages   # Whether the virtual environment will inherit
                               packages from the
                               global site-
                               packages
                               directory.  Note
                               that if this
                               setting is
                               changed on an
                               already existing
                               virtual
                               environment it
                               will not have any
                               effect, the
                               environment must
                               be deleted and
                               newly created.
- name: Manages packages with the Solaris 11 Image Packaging System
  action: pkg5
      accept_licenses        # Accept any licences.
      name=                  # An FRMI of the package(s) to be
                               installed/removed
                               /updated.
                               Multiple packages
                               may be specified,
                               separated by `,'.
      state                  # Whether to install (`present', `latest'), or
                               remove (`absent')
                               a package.
- name: Manages Solaris 11 Image Packaging System publishers
  action: pkg5_publisher
      enabled                # Is the repository enabled or disabled?
      mirror                 # A path or URL to the repository mirror. Multiple
                               values may be
                               provided.
      name=                  # The publisher's name.
      origin                 # A path or URL to the repository. Multiple values
                               may be provided.
      state                  # Whether to ensure that a publisher is present or
                               absent.
      sticky                 # Packages installed from a sticky repository can
                               only receive
                               updates from that
                               repository.
- name: Package manager for SmartOS, NetBSD, et al.
  action: pkgin
      clean                  # Clean packages cache
      force                  # Force package reinstall
      full_upgrade           # Upgrade all packages to their newer versions
      name                   # Name of package to install/remove; multiple
                               names may be
                               given, separated
                               by commas
      state                  # Intended state of the package
      update_cache           # Update repository database. Can be run with
                               other steps or on
                               it's own.
      upgrade                # Upgrade main packages to their newer versions
- name: Package manager for FreeBSD >= 9.0
  action: pkgng
      annotation             # A comma-separated list of keyvalue-pairs of the
                               form `<+/-/:><key
                               >[=<value>]'. A
                               `+' denotes
                               adding an
                               annotation, a `-'
                               denotes removing
                               an annotation,
                               and `:' denotes
                               modifying an
                               annotation. If
                               setting or
                               modifying
                               annotations, a
                               value must be
                               provided.
      autoremove             # Remove automatically installed packages which
                               are no longer
                               needed.
      cached                 # Use local package base instead of fetching an
                               updated one.
      chroot                 # Pkg will chroot in the specified environment.
                               Can not be used
                               together with
                               `rootdir' option.
      name=                  # Name of package to install/remove.
      pkgsite                # For pkgng versions before 1.1.4, specify
                               packagesite to
                               use for
                               downloading
                               packages. If not
                               specified, use
                               settings from `/u
                               sr/local/etc/pkg.
                               conf'. For newer
                               pkgng versions,
                               specify a the
                               name of a
                               repository
                               configured in `/u
                               sr/local/etc/pkg/
                               repos'.
      rootdir                # For pkgng versions 1.5 and later, pkg will
                               install all
                               packages within
                               the specified
                               root directory.
                               Can not be used
                               together with
                               `chroot' option.
      state                  # State of the package.
- name: Manage CSW-Packages on Solaris
  action: pkgutil
      name=                  # Package name, e.g. (`CSWnrpe')
      site                   # Specifies the repository path to install the
                               package from. Its
                               global definition
                               is done in `/etc/
                               opt/csw/pkgutil.c
                               onf'.
      state=                 # Whether to install (`present'), or remove
                               (`absent') a
                               package. The
                               upgrade
                               (`latest')
                               operation will
                               update/install
                               the package to
                               the latest
                               version
                               available. Note:
                               The module has a
                               limitation that
                               (`latest') only
                               works for one
                               package, not
                               lists of them.
      update_catalog         # If you want to refresh your catalog from the
                               mirror, set this
                               to (`yes').
- name: CLI command to create/delete a cluster.
  action: pn_cluster
      pn_clipassword         # Provide login password if user is not root.
      pn_cliswitch           # Target switch to run the cli on.
      pn_cliusername         # Provide login username if user is not root.
      pn_cluster_node1       # Specify the name of the first switch in the
                               cluster. Required
                               for 'cluster-
                               create'.
      pn_cluster_node2       # Specify the name of the second switch in the
                               cluster. Required
                               for 'cluster-
                               create'.
      pn_name=               # Specify the name of the cluster.
      pn_validate            # Validate the inter-switch links and state of
                               switches in the
                               cluster.
      state=                 # Specify action to perform. Use 'present' to
                               create cluster
                               and 'absent' to
                               delete cluster.
- name: CLI command to add/remove ospf protocol to a vRouter.
  action: pn_ospf
      pn_clipassword         # Provide login password if user is not root.
      pn_cliswitch           # Target switch to run the CLI on.
      pn_cliusername         # Provide login username if user is not root.
      pn_network_ip=         # Specify the network IP (IPv4 or IPv6) address.
      pn_ospf_area           # Stub area number for the configuration. Required
                               for vrouter-ospf-
                               add.
      pn_vrouter_name=       # Specify the name of the vRouter.
      state=                 # Assert the state of the ospf. Use 'present' to
                               add ospf and
                               'absent' to
                               remove ospf.
- name: CLI command to add/remove ospf area to/from a vrouter.
  action: pn_ospfarea
      pn_clipassword=        # Login password.
      pn_cliswitch           # Target switch(es) to run the CLI on.
      pn_cliusername=        # Login username.
      pn_ospf_area=          # Specify the OSPF area number.
      pn_prefix_listin       # OSPF prefix list for filtering incoming packets.
      pn_prefix_listout      # OSPF prefix list for filtering outgoing packets.
      pn_quiet               # Enable/disable system information.
      pn_stub_type           # Specify the OSPF stub type.
      pn_vrouter_name=       # Specify the name of the vRouter.
      state=                 # State the action to perform. Use 'present' to
                               add ospf-area,
                               'absent' to
                               remove ospf-area
                               and 'update' to
                               modify ospf-area.
- name: Run show commands on nvOS device.
  action: pn_show
      pn_clipassword         # Provide login password if user is not root.
      pn_cliswitch           # Target switch(es) to run the cli on.
      pn_cliusername         # Provide login username if user is not root.
      pn_command=            # The `pn_command' takes a CLI show command as
                               value.
      pn_options             # Specify formatting options.
      pn_parameters          # Display output using a specific parameter. Use
                               'all' to display
                               possible output.
                               List of comma
                               separated
                               parameters.
- name: CLI command to create/delete/modify a trunk.
  action: pn_trunk
      pn_broadcast_level     # Specify a broadcast level in percent. The
                               default value is
                               100%.
      pn_clipassword         # Provide login password if user is not root.
      pn_cliswitch           # Target switch(es) to run the cli on.
      pn_cliusername         # Provide login username if user is not root.
      pn_description         # Specify a description for the trunk
                               configuration.
      pn_edge_switch         # Specify if the switch is an edge switch.
      pn_egress_rate_limit   # Specify an egress port data rate limit for the
                               configuration.
      pn_host                # Host facing port control setting.
      pn_jumbo               # Specify if the port can receive jumbo frames.
      pn_lacp_fallback       # Specify the LACP fallback mode as bundles or
                               individual.
      pn_lacp_fallback_timeout   # Specify the LACP fallback timeout in seconds.
                               The range is
                               between 30 and 60
                               seconds with a
                               default value of
                               50 seconds.
      pn_lacp_mode           # Specify the LACP mode for the configuration.
      pn_lacp_priority       # Specify the LACP priority. This is a number
                               between 1 and
                               65535 with a
                               default value of
                               32768.
      pn_lacp_timeout        # Specify the LACP time out as slow (30 seconds)
                               or fast
                               (4seconds). The
                               default value is
                               slow.
      pn_loopback            # Specify loopback if you want to use loopback.
      pn_loopvlans           # Specify a list of looping vlans.
      pn_mirror_receive      # Specify if the configuration receives mirrored
                               traffic.
      pn_name=               # Specify the name for the trunk configuration.
      pn_pause               # Specify if pause frames are sent.
      pn_port_macaddr        # Specify the MAC address of the port.
      pn_ports               # Specify the port number(s) for the link(s) to
                               aggregate into
                               the trunk.
                               Required for
                               trunk-create.
      pn_routing             # Specify if the port participates in routing on
                               the network.
      pn_speed               # Specify the port speed or disable the port.
      pn_unkown_mcast_level   # Specify an unkown multicast level in percent.
                               The default value
                               is 100%.
      pn_unkown_ucast_level   # Specify an unkown unicast level in percent. The
                               default value is
                               100%.
      state=                 # State the action to perform. Use 'present' to
                               create trunk,
                               'absent' to
                               delete trunk and
                               'update' to
                               modify trunk.
- name: CLI command to create/delete/modify vlag.
  action: pn_vlag
      pn_clipassword         # Provide login password if user is not root.
      pn_cliswitch           # Target switch(es) to run this command on.
      pn_cliusername         # Provide login username if user is not root.
      pn_failover_action     # Specify the failover action as move or ignore.
      pn_lacp_fallback       # Specify the LACP fallback mode as bundles or
                               individual.
      pn_lacp_fallback_timeout   # Specify the LACP fallback timeout in seconds.
                               The range is
                               between 30 and 60
                               seconds with a
                               default value of
                               50 seconds.
      pn_lacp_mode           # Specify the LACP mode.
      pn_lacp_timeout        # Specify the LACP timeout as slow(30 seconds) or
                               fast(4 seconds).
      pn_mode                # Specify the mode for the VLAG. Active-standby
                               indicates one
                               side is active
                               and the other
                               side is in
                               standby mode.
                               Active-active
                               indicates that
                               both sides of the
                               vlag are up by
                               default.
      pn_name=               # The `pn_name' takes a valid name for vlag
                               configuration.
      pn_peer_port           # Specify the peer VLAG port. Required for vlag-
                               create.
      pn_peer_switch         # Specify the fabric-name of the peer switch.
      pn_port                # Specify the local VLAG port. Required for vlag-
                               create.
      state=                 # State the action to perform. Use 'present' to
                               create vlag,
                               'absent' to
                               delete vlag and
                               'update' to
                               modify vlag.
- name: CLI command to create/delete a VLAN.
  action: pn_vlan
      pn_clipassword         # Provide login password if user is not root.
      pn_cliswitch           # Target switch(es) to run the cli on.
      pn_cliusername         # Provide login username if user is not root.
      pn_description         # Specify a description for the VLAN.
      pn_ports               # Specifies the switch network data port number,
                               list of ports, or
                               range of ports.
                               Port numbers must
                               ne in the range
                               of 1 to 64.
      pn_scope               # Specify a scope for the VLAN. Required for vlan-
                               create.
      pn_stats               # Specify if you want to collect statistics for a
                               VLAN. Statistic
                               collection is
                               enabled by
                               default.
      pn_untagged_ports      # Specifies the ports that should have untagged
                               packets mapped to
                               the VLAN.
                               Untagged packets
                               are packets that
                               do not contain
                               IEEE 802.1Q VLAN
                               tags.
      pn_vlanid=             # Specify a VLAN identifier for the VLAN. This is
                               a value between 2
                               and 4092.
      state=                 # State the action to perform. Use 'present' to
                               create vlan and
                               'absent' to
                               delete vlan.
- name: CLI command to create/delete/modify a vrouter.
  action: pn_vrouter
      pn_bgp_as              # Specify the Autonomous System Number(ASN) if the
                               vRouter runs
                               Border Gateway
                               Protocol(BGP).
      pn_bgp_max_paths       # Specify the maximum number of paths for BGP.
                               This is a number
                               between 1 and 255
                               or 0 to unset.
      pn_bgp_options         # Specify other BGP options as a whitespaces
                               separated string
                               within single
                               quotes ''.
      pn_bgp_redistribute    # Specify how BGP routes are redistributed.
      pn_clipassword         # Provide login password if user is not root.
      pn_cliswitch           # Target switch(es) to run the CLI on.
      pn_cliusername         # Provide login username if user is not root.
      pn_hw_vrrp_id          # Specifies the VRRP ID for a hardware vrouter.
      pn_name=               # Specify the name of the vRouter.
      pn_ospf_options        # Specify other OSPF options as a whitespaces
                               separated string
                               within single
                               quotes ''.
      pn_ospf_redistribute   # Specify how OSPF routes are redistributed.
      pn_rip_redistribute    # Specify how RIP routes are redistributed.
      pn_router_id           # Specify the vRouter IP address.
      pn_router_type         # Specify if the vRouter uses software or
                               hardware. Note
                               that if you
                               specify hardware
                               as router type,
                               you cannot assign
                               IP addresses
                               using DHCP. You
                               must specify a
                               static IP
                               address.
      pn_service_state       # Specify to enable or disable vRouter service.
      pn_service_type        # Specify if the vRouter is a dedicated or shared
                               VNET service.
      pn_vnet                # Specify the name of the VNET. Required for
                               vrouter-create.
      state=                 # State the action to perform. Use 'present' to
                               create vrouter,
                               'absent' to
                               delete vrouter
                               and 'update' to
                               modify vrouter.
- name: CLI command to add/remove/modify vrouter-bgp.
  action: pn_vrouterbgp
      pn_bfd                 # Specify if you want BFD protocol support for
                               fault detection.
      pn_clipassword         # Provide login password if user is not root.
      pn_cliswitch           # Target switch(es) to run the cli on.
      pn_cliusername         # Provide login username if user is not root.
      pn_default_originate   # Specify if you want announce default routes to
                               the neighbor or
                               not.
      pn_ebgp                # Specify a value for external BGP to accept or
                               attempt BGP
                               connections to
                               external peers,
                               not directly
                               connected, on the
                               network. This is
                               a value between 1
                               and 255.
      pn_holdtime            # Specify BGP neighbor holdtime in seconds.
      pn_keepalive           # Specify BGP neighbor keepalive interval in
                               seconds.
      pn_max_prefix          # Specify the maximum number of prefixes.
      pn_max_prefix_warn     # Specify if you want a warning message when the
                               maximum number of
                               prefixes is
                               exceeded.
      pn_multiprotocol       # Specify a multi-protocol for BGP.
      pn_neighbor            # Specify a neighbor IP address to use for BGP.
                               Required for
                               vrouter-bgp-add.
      pn_next_hop_self       # Specify if the next-hop is the same router or
                               not.
      pn_override_capability   # Specify if you want to override capability.
      pn_password            # Specify a password, if desired.
      pn_prefix_listin       # Specify the prefix list to filter traffic
                               inbound.
      pn_prefix_listout      # Specify the prefix list to filter traffic
                               outbound.
      pn_remote_as           # Specify the remote Autonomous System(AS) number.
                               This value is
                               between 1 and
                               4294967295.
                               Required for
                               vrouter-bgp-add.
      pn_route_mapin         # Specify inbound route map for neighbor.
      pn_route_mapout        # Specify outbound route map for neighbor.
      pn_route_reflector     # Specify if a route reflector client is used.
      pn_soft_reconfig       # Specify if you want a soft reconfiguration of
                               inbound traffic.
      pn_vrouter_name=       # Specify a name for the vRouter service.
      pn_weight              # Specify a default weight value between 0 and
                               65535 for the
                               neighbor routes.
      state=                 # State the action to perform. Use 'present' to
                               add bgp, 'absent'
                               to remove bgp and
                               'update' to
                               modify bgp.
- name: CLI command to add/remove/modify vrouter-interface.
  action: pn_vrouterif
      pn_alias               # Specify an alias for the interface.
      pn_assignment          # Specify the DHCP method for IP address
                               assignment.
      pn_clipassword         # Provide login password if user is not root.
      pn_cliswitch           # Target switch to run the cli on.
      pn_cliusername         # Provide login username if user is not root.
      pn_exclusive           # Specify if the interface is exclusive to the
                               configuration.
                               Exclusive means
                               that other
                               configurations
                               cannot use the
                               interface.
                               Exclusive is
                               specified when
                               you configure the
                               interface as span
                               interface and
                               allows higher
                               throughput
                               through the
                               interface.
      pn_interface           # Specify if the interface is management, data or
                               span interface.
      pn_interface_ip        # Specify the IP address of the interface in
                               x.x.x.x/n format.
      pn_l3port              # Specify a Layer 3 port for the interface.
      pn_nic_enable          # Specify if the NIC is enabled or not
      pn_nic_str             # Specify the type of NIC. Used for vrouter-
                               interface
                               remove/modify.
      pn_secondary_macs      # Specify a secondary MAC address for the
                               interface.
      pn_vlan                # Specify the VLAN identifier. This is a value
                               between 1 and
                               4092.
      pn_vrouter_name=       # Specify the name of the vRouter interface.
      pn_vrrp_adv_int        # Specify a VRRP advertisement interval in
                               milliseconds. The
                               range is from 30
                               to 40950 with a
                               default value of
                               1000.
      pn_vrrp_id             # Specify the ID for the VRRP interface. The IDs
                               on both vRouters
                               must be the same
                               IS number.
      pn_vrrp_priority       # Specify the priority for the VRRP interface.
                               This is a value
                               between 1
                               (lowest) and 255
                               (highest).
      pn_vxlan               # Specify the VXLAN identifier. This is a value
                               between 1 and
                               16777215.
      state=                 # State the action to perform. Use 'present' to
                               add vrouter
                               interface,
                               'absent' to
                               remove vrouter
                               interface and
                               'update' to
                               modify vrouter
                               interface.
- name: CLI command to add/remove vrouter-loopback-interface.
  action: pn_vrouterlbif
      pn_clipassword         # Provide login password if user is not root.
      pn_cliswitch           # Target switch(es) to run the cli on.
      pn_cliusername         # Provide login username if user is not root.
      pn_index               # Specify the interface index from 1 to 255.
      pn_interface_ip=       # Specify the IP address.
      pn_vrouter_name=       # Specify the name of the vRouter.
      state=                 # State the action to perform. Use 'present' to
                               add vrouter
                               loopback
                               interface and
                               'absent' to
                               remove vrouter
                               loopback
                               interface.
- name: Package manager for Gentoo
  action: portage
      changed_use            # Include installed packages where USE flags have
                               changed, except
                               when flags that
                               the user has not
                               enabled are added
                               or removed
                               (--changed-use)
      deep                   # Consider the entire dependency tree of packages
                               (--deep)
      depclean               # Remove packages not needed by explicitly merged
                               packages
                               (--depclean) If
                               no package is
                               specified, clean
                               up the world's
                               dependencies
                               Otherwise,
                               --depclean serves
                               as a dependency
                               aware version of
                               --unmerge
      getbinpkg              # Prefer packages specified at PORTAGE_BINHOST in
                               make.conf
      newuse                 # Include installed packages where USE flags have
                               changed
                               (--newuse)
      nodeps                 # Only merge packages but not their dependencies
                               (--nodeps)
      noreplace              # Do not re-emerge installed packages
                               (--noreplace)
      oneshot                # Do not add the packages to the world file
                               (--oneshot)
      onlydeps               # Only merge packages' dependencies but not the
                               packages
                               (--onlydeps)
      package                # Package atom or set, e.g. `sys-apps/foo' or
                               `>foo-2.13' or
                               `@world'
      quiet                  # Run emerge in quiet mode (--quiet)
      state                  # State of the package atom
      sync                   # Sync package repositories first If yes, perform
                               "emerge --sync"
                               If web, perform
                               "emerge-webrsync"
      update                 # Update packages to the best version available
                               (--update)
      usepkgonly             # Merge only binaries (no compiling). This sets
                               getbinpkg=yes.
      verbose                # Run emerge in verbose mode (--verbose)
- name: Installing packages from FreeBSD's ports system
  action: portinstall
      name=                  # name of package to install/remove
      state                  # state of the package
      use_packages           # use packages instead of ports whenever available
- name: Add or remove PostgreSQL databases from a remote host.
  action: postgresql_db
      encoding               # Encoding of the database
      lc_collate             # Collation order (LC_COLLATE) to use in the
                               database. Must
                               match collation
                               order of template
                               database unless
                               `template0' is
                               used as template.
      lc_ctype               # Character classification (LC_CTYPE) to use in
                               the database
                               (e.g. lower,
                               upper, ...) Must
                               match LC_CTYPE of
                               template database
                               unless
                               `template0' is
                               used as template.
      login_host             # Host running the database
      login_password         # The password used to authenticate with
      login_unix_socket      # Path to a Unix domain socket for local
                               connections
      login_user             # The username used to authenticate with
      name=                  # name of the database to add or remove
      owner                  # Name of the role to set as owner of the database
      port                   # Database port to connect to.
      state                  # The database state
      template               # Template used to create the database
- name: Add or remove PostgreSQL extensions from a database.
  action: postgresql_ext
      db=                    # name of the database to add or remove the
                               extension to/from
      login_host             # Host running the database
      login_password         # The password used to authenticate with
      login_user             # The username used to authenticate with
      name=                  # name of the extension to add or remove
      port                   # Database port to connect to.
      state                  # The database extension state
- name: Adds, removes or changes procedural languages with a PostgreSQL database.
  action: postgresql_lang
      cascade                # when dropping a language, also delete object
                               that depend on
                               this language.
                               only used when
                               `state=absent'.
      db                     # name of database where the language will be
                               added, removed or
                               changed
      fail_on_drop           # if `yes', fail when removing a language.
                               Otherwise just
                               log and continue
                               in some cases, it
                               is not possible
                               to remove a
                               language (used by
                               the db-system).
                               When
                               dependencies
                               block the
                               removal, consider
                               using `cascade'.
      force_trust            # marks the language as trusted, even if it's
                               marked as
                               untrusted in
                               pg_pltemplate.
                               use with care!
      lang=                  # name of the procedural language to add, remove
                               or change
      login_host             # Host running PostgreSQL where you want to
                               execute the
                               actions.
      login_password         # Password used to authenticate with PostgreSQL
                               (must match
                               `login_user')
      login_user             # User used to authenticate with PostgreSQL
      port                   # Database port to connect to.
      state                  # The state of the language for the selected
                               database
      trust                  # make this language trusted for the selected db
- name: Grant or revoke privileges on PostgreSQL database objects.
  action: postgresql_privs
      database=              # Name of database to connect to. Alias: `db'
      grant_option           # Whether `role' may grant/revoke the specified
                               privileges/group
                               memberships to
                               others. Set to
                               `no' to revoke
                               GRANT OPTION,
                               leave unspecified
                               to make no
                               changes.
                               `grant_option'
                               only has an
                               effect if `state'
                               is `present'.
                               Alias:
                               `admin_option'
      host                   # Database host address. If unspecified, connect
                               via Unix socket.
                               Alias:
                               `login_host'
      login                  # The username to authenticate with. Alias:
                               `login_user'
      objs                   # Comma separated list of database objects to set
                               privileges on. If
                               `type' is `table'
                               or `sequence',
                               the special value
                               `ALL_IN_SCHEMA'
                               can be provided
                               instead to
                               specify all
                               database objects
                               of type `type' in
                               the schema
                               specified via
                               `schema'. (This
                               also works with
                               PostgreSQL <
                               9.0.) If `type'
                               is `database',
                               this parameter
                               can be omitted,
                               in which case
                               privileges are
                               set for the
                               database
                               specified via
                               `database'. If
                               `type' is
                               `function',
                               colons (":") in
                               object names will
                               be replaced with
                               commas (needed to
                               specify function
                               signatures, see
                               examples) Alias:
                               `obj'
      password               # The password to authenticate with. Alias:
                               `login_password')
      port                   # Database port to connect to.
      privs                  # Comma separated list of privileges to
                               grant/revoke.
                               Alias: `priv'
      roles=                 # Comma separated list of role (user/group) names
                               to set
                               permissions for.
                               The special value
                               `PUBLIC' can be
                               provided instead
                               to set
                               permissions for
                               the implicitly
                               defined PUBLIC
                               group. Alias:
                               `role'
      schema                 # Schema that contains the database objects
                               specified via
                               `objs'. May only
                               be provided if
                               `type' is
                               `table',
                               `sequence' or
                               `function'.
                               Defaults to
                               `public' in these
                               cases.
      state                  # If `present', the specified privileges are
                               granted, if
                               `absent' they are
                               revoked.
      type                   # Type of database object to set privileges on.
      unix_socket            # Path to a Unix domain socket for local
                               connections.
                               Alias: `login_uni
                               x_socket'
- name: Adds or removes a users (roles) from a PostgreSQL database.
  action: postgresql_user
      db                     # name of database where permissions will be
                               granted
      encrypted              # whether the password is stored hashed in the
                               database.
                               boolean.
                               Passwords can be
                               passed already
                               hashed or
                               unhashed, and
                               postgresql
                               ensures the
                               stored password
                               is hashed when
                               encrypted is set.
      expires                # sets the user's password expiration.
      fail_on_user           # if `yes', fail when user can't be removed.
                               Otherwise just
                               log and continue
      login_host             # Host running PostgreSQL.
      login_password         # Password used to authenticate with PostgreSQL
      login_unix_socket      # Path to a Unix domain socket for local
                               connections
      login_user             # User (role) used to authenticate with PostgreSQL
      name=                  # name of the user (role) to add or remove
      no_password_changes    # if `yes', don't inspect database for password
                               changes.
                               Effective when
                               `pg_authid' is
                               not accessible
                               (such as AWS
                               RDS). Otherwise,
                               make password
                               changes as
                               necessary.
      password               # set the user's password, before 1.4 this was
                               required. When
                               passing an
                               encrypted
                               password, the
                               encrypted
                               parameter must
                               also be true, and
                               it must be
                               generated with
                               the format
                               `'str["md5"] +
                               md5[ password +
                               username ]'',
                               resulting in a
                               total of 35
                               characters.  An
                               easy way to do
                               this is: `echo
                               "md5`echo -n "ver
                               ysecretpasswordJO
                               E" | md5`"'. Note
                               that if encrypted
                               is set, the
                               stored password
                               will be hashed
                               whether or not it
                               is pre-encrypted.
      port                   # Database port to connect to.
      priv                   # PostgreSQL privileges string in the format:
                               `table:priv1,priv
                               2'
      role_attr_flags        # PostgreSQL role attributes string in the format:
                               CREATEDB,CREATERO
                               LE,SUPERUSER
      state                  # The user (role) state
- name: Create, destroy, start, stop, and reboot a ProfitBricks virtual machine.
  action: profitbricks
      assign_public_ip       # This will assign the machine to the public LAN.
                               If no LAN exists
                               with public
                               Internet access
                               it is created.
      auto_increment         # Whether or not to increment a single number in
                               the name for
                               created virtual
                               machines.
      bus                    # The bus type for the volume.
      cores                  # The number of CPU cores to allocate to the
                               virtual machine.
      count                  # The number of virtual machines to create.
      cpu_family             # The CPU family type to allocate to the virtual
                               machine.
      datacenter             # The datacenter to provision this virtual
                               machine.
      image=                 # The system image ID for creating the virtual
                               machine, e.g.
                               a3eae284-a2fe-11e
                               4-b187-5f1f641608
                               c8.
      image_password         # Password set for the administrative user.
      instance_ids           # list of instance ids, currently only used when
                               state='absent' to
                               remove instances.
      lan                    # The ID of the LAN you wish to add the servers
                               to.
      location               # The datacenter location. Use only if you want to
                               create the
                               Datacenter or
                               else this value
                               is ignored.
      name=                  # The name of the virtual machine.
      ram                    # The amount of memory to allocate to the virtual
                               machine.
      remove_boot_volume     # remove the bootVolume of the virtual machine
                               you're
                               destroying.
      ssh_keys               # Public SSH keys allowing access to the virtual
                               machine.
      state                  # create or terminate instances
      subscription_password   # THe ProfitBricks password. Overrides the
                               PB_PASSWORD
                               environement
                               variable.
      subscription_user      # The ProfitBricks username. Overrides the
                               PB_SUBSCRIPTION_I
                               D environement
                               variable.
      volume_size            # The size in GB of the boot volume.
      wait                   # wait for the instance to be in state 'running'
                               before returning
      wait_timeout           # how long before wait gives up, in seconds
- name: Create or destroy a ProfitBricks Virtual Datacenter.
  action: profitbricks_datacenter
      description            # The description of the virtual datacenter.
      location               # The datacenter location.
      name=                  # The name of the virtual datacenter.
      state                  # create or terminate datacenters
      subscription_password   # THe ProfitBricks password. Overrides the
                               PB_PASSWORD
                               environement
                               variable.
      subscription_user      # The ProfitBricks username. Overrides the
                               PB_SUBSCRIPTION_I
                               D environement
                               variable.
      wait                   # wait for the datacenter to be created before
                               returning
      wait_timeout           # how long before wait gives up, in seconds
- name: Create or Remove a NIC.
  action: profitbricks_nic
      datacenter=            # The datacenter in which to operate.
      lan=                   # The LAN to place the NIC on. You can pass a LAN
                               that doesn't
                               exist and it will
                               be created.
                               Required on
                               create.
      name=                  # The name or ID of the NIC. This is only required
                               on deletes, but
                               not on create.
      server=                # The server name or ID.
      state                  # Indicate desired state of the resource
      subscription_password   # THe ProfitBricks password. Overrides the
                               PB_PASSWORD
                               environement
                               variable.
      subscription_user      # The ProfitBricks username. Overrides the
                               PB_SUBSCRIPTION_I
                               D environement
                               variable.
      wait                   # wait for the operation to complete before
                               returning
      wait_timeout           # how long before wait gives up, in seconds
- name: Create or destroy a volume.
  action: profitbricks_volume
      auto_increment         # Whether or not to increment a single number in
                               the name for
                               created virtual
                               machines.
      bus                    # The bus type.
      count                  # The number of volumes you wish to create.
      datacenter=            # The datacenter in which to create the volumes.
      disk_type              # The disk type of the volume.
      image=                 # The system image ID for the volume, e.g.
                               a3eae284-a2fe-11e
                               4-b187-5f1f641608
                               c8. This can also
                               be a snapshot
                               image ID.
      image_password         # Password set for the administrative user.
      instance_ids           # list of instance ids, currently only used when
                               state='absent' to
                               remove instances.
      licence_type           # The licence type for the volume. This is used
                               when the image is
                               non-standard.
      name=                  # The name of the volumes. You can enumerate the
                               names using
                               auto_increment.
      size                   # The size of the volume.
      ssh_keys               # Public SSH keys allowing access to the virtual
                               machine.
      state                  # create or terminate datacenters
      subscription_password   # THe ProfitBricks password. Overrides the
                               PB_PASSWORD
                               environement
                               variable.
      subscription_user      # The ProfitBricks username. Overrides the
                               PB_SUBSCRIPTION_I
                               D environement
                               variable.
      wait                   # wait for the datacenter to be created before
                               returning
      wait_timeout           # how long before wait gives up, in seconds
- name: Attach or detach a volume.
  action: profitbricks_volume_attachments
      datacenter=            # The datacenter in which to operate.
      server=                # The name of the server you wish to detach or
                               attach the
                               volume.
      state                  # Indicate desired state of the resource
      subscription_password   # THe ProfitBricks password. Overrides the
                               PB_PASSWORD
                               environement
                               variable.
      subscription_user      # The ProfitBricks username. Overrides the
                               PB_SUBSCRIPTION_I
                               D environement
                               variable.
      volume=                # The volume name or ID.
      wait                   # wait for the operation to complete before
                               returning
      wait_timeout           # how long before wait gives up, in seconds
- name: management of instances in Proxmox VE cluster
  action: proxmox
      api_host=              # the host of the Proxmox VE cluster
      api_password           # the password to authenticate with you can use
                               PROXMOX_PASSWORD
                               environment
                               variable
      api_user=              # the user to authenticate with
      cpus                   # numbers of allocated cpus for instance
      cpuunits               # CPU weight for a VM
      disk                   # hard disk size in GB for instance
      force                  # forcing operations can be used only with states
                               `present',
                               `stopped',
                               `restarted' with
                               `state=present'
                               force option
                               allow to
                               overwrite
                               existing
                               container with
                               states `stopped'
                               , `restarted'
                               allow to force
                               stop instance
      hostname               # the instance hostname required only for
                               `state=present'
      ip_address             # specifies the address the container will be
                               assigned
      memory                 # memory size in MB for instance
      mounts                 # specifies additional mounts (separate disks) for
                               the container
      nameserver             # sets DNS server IP address for a container
      netif                  # specifies network interfaces for the container
      node                   # Proxmox VE node, when new VM will be created
                               required only for
                               `state=present'
                               for another
                               states will be
                               autodiscovered
      onboot                 # specifies whether a VM will be started during
                               system bootup
      ostemplate             # the template for VM creating required only for
                               `state=present'
      password               # the instance root password required only for
                               `state=present'
      searchdomain           # sets DNS search domain for a container
      state                  # Indicate desired state of the instance
      storage                # target storage
      swap                   # swap memory size in MB for instance
      timeout                # timeout for operations
      validate_certs         # enable / disable https certificate verification
      vmid=                  # the instance id
- name: management of OS templates in Proxmox VE cluster
  action: proxmox_template
      api_host=              # the host of the Proxmox VE cluster
      api_password           # the password to authenticate with you can use
                               PROXMOX_PASSWORD
                               environment
                               variable
      api_user=              # the user to authenticate with
      content_type           # content type required only for `state=present'
      force                  # can be used only with `state=present', exists
                               template will be
                               overwritten
      node=                  # Proxmox VE node, when you will operate with
                               template
      src                    # path to uploaded file required only for
                               `state=present'
      state                  # Indicate desired state of the template
      storage                # target storage
      template               # the template name required only for states
                               `absent', `info'
      timeout                # timeout for operations
      validate_certs         # enable / disable https certificate verification
- name: Runs puppet
  action: puppet
      certname               # The name to use when handling certificates.
      environment            # Puppet environment to be used.
      execute                # Execute a specific piece of Puppet code. It has
                               no effect with a
                               puppetmaster.
      facter_basename        # Basename of the facter output file
      facts                  # A dict of values to pass in as persistent
                               external facter
                               facts
      logdest                # Where the puppet logs should go, if puppet apply
                               is being used
      manifest               # Path to the manifest file to run puppet apply
                               on.
      puppetmaster           # The hostname of the puppetmaster to contact.
      tags                   # A comma-separated list of puppet tags to be
                               used.
      timeout                # How long to wait for `puppet' to finish.
- name: Sends notifications to Pushbullet
  action: pushbullet
      api_key=               # Push bullet API token
      body                   # Body of the notification, e.g. Details of the
                               fault you're
                               alerting.
      channel                # The channel TAG you wish to broadcast a push
                               notification, as
                               seen on the "My
                               Channels" > "Edit
                               your channel" at
                               Pushbullet page.
      device                 # The device NAME you wish to send a push
                               notification, as
                               seen on the
                               Pushbullet main
                               page.
      push_type              # Thing you wish to push.
      title=                 # Title of the notification.
- name: Send notifications via https://pushover.net
  action: pushover
      app_token=             # Pushover issued token identifying your pushover
                               app.
      msg=                   # What message you wish to send.
      pri                    # Message priority (see https://pushover.net for
                               details.)
      user_key=              # Pushover issued authentication key for your
                               user.
- name: This module manages rabbitMQ bindings
  action: rabbitmq_binding
      arguments              # extra arguments for exchange. If defined this
                               argument is a
                               key/value
                               dictionary
      destination=           # destination exchange or queue for the binding
      destination_type=      # Either queue or exchange
      login_host             # rabbitMQ host for connection
      login_password         # rabbitMQ password for connection
      login_port             # rabbitMQ management api port
      login_user             # rabbitMQ user for connection
      name=                  # source exchange to create binding on
      routing_key            # routing key for the binding default is
      state                  # Whether the exchange should be present or absent
                               Only present
                               implemented atm
      vhost                  # rabbitMQ virtual host default vhost is /
- name: This module manages rabbitMQ exchanges
  action: rabbitmq_exchange
      arguments              # extra arguments for exchange. If defined this
                               argument is a
                               key/value
                               dictionary
      auto_delete            # if the exchange should delete itself after all
                               queues/exchanges
                               unbound from it
      durable                # whether exchange is durable or not
      exchange_type          # type for the exchange
      internal               # exchange is available only for other exchanges
      login_host             # rabbitMQ host for connection
      login_password         # rabbitMQ password for connection
      login_port             # rabbitMQ management api port
      login_user             # rabbitMQ user for connection
      name=                  # Name of the exchange to create
      state                  # Whether the exchange should be present or absent
                               Only present
                               implemented atm
      vhost                  # rabbitMQ virtual host
- name: Adds or removes parameters to RabbitMQ
  action: rabbitmq_parameter
      component=             # Name of the component of which the parameter is
                               being set
      name=                  # Name of the parameter being set
      node                   # erlang node name of the rabbit we wish to
                               configure
      state                  # Specify if user is to be added or removed
      value                  # Value of the parameter, as a JSON term
      vhost                  # vhost to apply access privileges.
- name: Adds or removes plugins to RabbitMQ
  action: rabbitmq_plugin
      names=                 # Comma-separated list of plugin names
      new_only               # Only enable missing plugins Does not disable
                               plugins that are
                               not in the names
                               list
      prefix                 # Specify a custom install prefix to a Rabbit
      state                  # Specify if plugins are to be enabled or disabled
- name: Manage the state of policies in RabbitMQ.
  action: rabbitmq_policy
      apply_to               # What the policy applies to. Requires RabbitMQ
                               3.2.0 or later.
      name=                  # The name of the policy to manage.
      node                   # Erlang node name of the rabbit we wish to
                               configure.
      pattern=               # A regex of queues to apply the policy to.
      priority               # The priority of the policy.
      state                  # The state of the policy.
      tags=                  # A dict or string describing the policy.
      vhost                  # The name of the vhost to apply to.
- name: This module manages rabbitMQ queues
  action: rabbitmq_queue
      arguments              # extra arguments for queue. If defined this
                               argument is a
                               key/value
                               dictionary
      auto_delete            # if the queue should delete itself after all
                               queues/queues
                               unbound from it
      auto_expires           # How long a queue can be unused before it is
                               automatically
                               deleted
                               (milliseconds)
      dead_letter_exchange   # Optional name of an exchange to which messages
                               will be
                               republished if
                               they are rejected
                               or expire
      dead_letter_routing_key   # Optional replacement routing key to use when a
                               message is dead-
                               lettered.
                               Original routing
                               key will be used
                               if unset
      durable                # whether queue is durable or not
      login_host             # rabbitMQ host for connection
      login_password         # rabbitMQ password for connection
      login_port             # rabbitMQ management api port
      login_user             # rabbitMQ user for connection
      max_length             # How many messages can the queue contain before
                               it starts
                               rejecting
      message_ttl            # How long a message can live in queue before it
                               is discarded
                               (milliseconds)
      name=                  # Name of the queue to create
      state                  # Whether the queue should be present or absent
                               Only present
                               implemented atm
      vhost                  # rabbitMQ virtual host
- name: Adds or removes users to RabbitMQ
  action: rabbitmq_user
      configure_priv         # Regular expression to restrict configure actions
                               on a resource for
                               the specified
                               vhost. By default
                               all actions are
                               restricted. This
                               option will be
                               ignored when
                               permissions
                               option is used.
      force                  # Deletes and recreates the user.
      node                   # erlang node name of the rabbit we wish to
                               configure
      password               # Password of user to add. To change the password
                               of an existing
                               user, you must
                               also specify
                               `force=yes'.
      permissions            # a list of dicts, each dict contains vhost,
                               configure_priv,
                               write_priv, and
                               read_priv, and
                               represents a
                               permission rule
                               for that vhost.
                               This option
                               should be
                               preferable when
                               you care about
                               all permissions
                               of the user. You
                               should use vhost,
                               configure_priv,
                               write_priv, and
                               read_priv options
                               instead if you
                               care about
                               permissions for
                               just some vhosts.
      read_priv              # Regular expression to restrict configure actions
                               on a resource for
                               the specified
                               vhost. By default
                               all actions are
                               restricted. This
                               option will be
                               ignored when
                               permissions
                               option is used.
      state                  # Specify if user is to be added or removed
      tags                   # User tags specified as comma delimited
      user=                  # Name of user to add
      vhost                  # vhost to apply access privileges. This option
                               will be ignored
                               when permissions
                               option is used.
      write_priv             # Regular expression to restrict configure actions
                               on a resource for
                               the specified
                               vhost. By default
                               all actions are
                               restricted. This
                               option will be
                               ignored when
                               permissions
                               option is used.
- name: Manage the state of a virtual host in RabbitMQ
  action: rabbitmq_vhost
      name=                  # The name of the vhost to manage
      node                   # erlang node name of the rabbit we wish to
                               configure
      state                  # The state of vhost
      tracing                # Enable/disable tracing for a vhost
- name: Executes a low-down and dirty SSH command
  action: raw
      executable             # change the shell used to execute the command.
                               Should be an
                               absolute path to
                               the executable.
                               when using
                               privilege
                               escalation
                               (`become'), a
                               default shell
                               will be assigned
                               if one is not
                               provided as
                               privilege
                               escalation
                               requires a shell.
      free_form=             # the raw module takes a free form command to run
- name: create / delete an instance in Rackspace Public Cloud
  action: rax
      api_key                # Rackspace API key (overrides `credentials')
      auth_endpoint          # The URI of the authentication service
      auto_increment         # Whether or not to increment a single number with
                               the name of the
                               created servers.
                               Only applicable
                               when used with
                               the `group'
                               attribute or meta
                               key.
      boot_from_volume       # Whether or not to boot the instance from a Cloud
                               Block Storage
                               volume. If `yes'
                               and `image' is
                               specified a new
                               volume will be
                               created at boot
                               time. `boot_volum
                               e_size' is
                               required with
                               `image' to create
                               a new volume at
                               boot time.
      boot_volume            # Cloud Block Storage ID or Name to use as the
                               boot volume of
                               the instance
      boot_volume_size       # Size of the volume to create in Gigabytes. This
                               is only required
                               with `image' and 
                               `boot_from_volume
                               '.
      boot_volume_terminate   # Whether the `boot_volume' or newly created
                               volume from
                               `image' will be
                               terminated when
                               the server is
                               terminated
      config_drive           # Attach read-only configuration drive to server
                               as label config-2
      count                  # number of instances to launch
      count_offset           # number count to start at
      credentials            # File to find the Rackspace credentials in
                               (ignored if
                               `api_key' and
                               `username' are
                               provided)
      disk_config            # Disk partitioning strategy
      env                    # Environment as configured in ~/.pyrax.cfg, see h
                               ttps://github.com
                               /rackspace/pyrax/
                               blob/master/docs/
                               getting_started.m
                               d#pyrax-
                               configuration
      exact_count            # Explicitly ensure an exact count of instances,
                               used with state=a
                               ctive/present. If
                               specified as
                               `yes' and `count'
                               is less than the
                               servers matched,
                               servers will be
                               deleted to match
                               the count. If the
                               number of matched
                               servers is fewer
                               than specified in
                               `count'
                               additional
                               servers will be
                               added.
      extra_client_args      # A hash of key/value pairs to be used when
                               creating the
                               cloudservers
                               client. This is
                               considered an
                               advanced option,
                               use it wisely and
                               with caution.
      extra_create_args      # A hash of key/value pairs to be used when
                               creating a new
                               server. This is
                               considered an
                               advanced option,
                               use it wisely and
                               with caution.
      files                  # Files to insert into the instance.
                               remotefilename:lo
                               calcontent
      flavor                 # flavor to use for the instance
      group                  # host group to assign to server, is also used for
                               idempotent
                               operations to
                               ensure a specific
                               number of
                               instances
      identity_type          # Authentication machanism to use, such as
                               rackspace or
                               keystone
      image                  # image to use for the instance. Can be an `id',
                               `human_id' or
                               `name'. With `boo
                               t_from_volume', a
                               Cloud Block
                               Storage volume
                               will be created
                               with this image
      instance_ids           # list of instance ids, currently only used when
                               state='absent' to
                               remove instances
      key_name               # key pair to use on the instance
      meta                   # A hash of metadata to associate with the
                               instance
      name                   # Name to give the instance
      networks               # The network to attach to the instances. If
                               specified, you
                               must include ALL
                               networks
                               including the
                               public and
                               private
                               interfaces. Can
                               be `id' or
                               `label'.
      region                 # Region to create an instance in
      state                  # Indicate desired state of the resource
      tenant_id              # The tenant ID used for authentication
      tenant_name            # The tenant name used for authentication
      user_data              # Data to be uploaded to the servers config drive.
                               This option
                               implies
                               `config_drive'.
                               Can be a file
                               path or a string
      username               # Rackspace username (overrides `credentials')
      verify_ssl             # Whether or not to require SSL validation of API
                               endpoints
      wait                   # wait for the instance to be in state 'running'
                               before returning
      wait_timeout           # how long before wait gives up, in seconds
- name: Manipulate Rackspace Cloud Block Storage Volumes
  action: rax_cbs
      api_key                # Rackspace API key (overrides `credentials')
      auth_endpoint          # The URI of the authentication service
      credentials            # File to find the Rackspace credentials in
                               (ignored if
                               `api_key' and
                               `username' are
                               provided)
      description            # Description to give the volume being created
      env                    # Environment as configured in ~/.pyrax.cfg, see h
                               ttps://github.com
                               /rackspace/pyrax/
                               blob/master/docs/
                               getting_started.m
                               d#pyrax-
                               configuration
      identity_type          # Authentication machanism to use, such as
                               rackspace or
                               keystone
      image                  # image to use for bootable volumes. Can be an
                               `id', `human_id'
                               or `name'. This
                               option requires
                               `pyrax>=1.9.3'
      meta                   # A hash of metadata to associate with the volume
      name=                  # Name to give the volume being created
      region                 # Region to create an instance in
      size=                  # Size of the volume to create in Gigabytes
      snapshot_id            # The id of the snapshot to create the volume from
      state=                 # Indicate desired state of the resource
      tenant_id              # The tenant ID used for authentication
      tenant_name            # The tenant name used for authentication
      username               # Rackspace username (overrides `credentials')
      verify_ssl             # Whether or not to require SSL validation of API
                               endpoints
      volume_type=           # Type of the volume being created
      wait                   # wait for the volume to be in state 'available'
                               before returning
      wait_timeout           # how long before wait gives up, in seconds
- name: Manipulate Rackspace Cloud Block Storage Volume Attachments
  action: rax_cbs_attachments
      api_key                # Rackspace API key (overrides `credentials')
      auth_endpoint          # The URI of the authentication service
      credentials            # File to find the Rackspace credentials in
                               (ignored if
                               `api_key' and
                               `username' are
                               provided)
      device=                # The device path to attach the volume to, e.g.
                               /dev/xvde
      env                    # Environment as configured in ~/.pyrax.cfg, see h
                               ttps://github.com
                               /rackspace/pyrax/
                               blob/master/docs/
                               getting_started.m
                               d#pyrax-
                               configuration
      identity_type          # Authentication machanism to use, such as
                               rackspace or
                               keystone
      region                 # Region to create an instance in
      server=                # Name or id of the server to attach/detach
      state=                 # Indicate desired state of the resource
      tenant_id              # The tenant ID used for authentication
      tenant_name            # The tenant name used for authentication
      username               # Rackspace username (overrides `credentials')
      verify_ssl             # Whether or not to require SSL validation of API
                               endpoints
      volume=                # Name or id of the volume to attach/detach
      wait                   # wait for the volume to be in 'in-
                               use'/'available'
                               state before
                               returning
      wait_timeout           # how long before wait gives up, in seconds
- name: create/delete or resize a Rackspace Cloud Databases instance
  action: rax_cdb
      api_key                # Rackspace API key (overrides `credentials')
      cdb_type               # type of instance (i.e. MySQL, MariaDB, Percona)
      cdb_version            # version of database (MySQL supports 5.1 and 5.6,
                               MariaDB supports
                               10, Percona
                               supports 5.6)
      credentials            # File to find the Rackspace credentials in
                               (ignored if
                               `api_key' and
                               `username' are
                               provided)
      env                    # Environment as configured in ~/.pyrax.cfg, see h
                               ttps://github.com
                               /rackspace/pyrax/
                               blob/master/docs/
                               getting_started.m
                               d#pyrax-
                               configuration
      flavor                 # flavor to use for the instance 1 to 6 (i.e.
                               512MB to 16GB)
      name                   # Name of the databases server instance
      region                 # Region to create an instance in
      state                  # Indicate desired state of the resource
      username               # Rackspace username (overrides `credentials')
      verify_ssl             # Whether or not to require SSL validation of API
                               endpoints
      volume                 # Volume size of the database 1-150GB
      wait                   # wait for the instance to be in state 'running'
                               before returning
      wait_timeout           # how long before wait gives up, in seconds
- name: create / delete a database in the Cloud Databases
  action: rax_cdb_database
      api_key                # Rackspace API key (overrides `credentials')
      cdb_id                 # The databases server UUID
      character_set          # Set of symbols and encodings
      collate                # Set of rules for comparing characters in a
                               character set
      credentials            # File to find the Rackspace credentials in
                               (ignored if
                               `api_key' and
                               `username' are
                               provided)
      env                    # Environment as configured in ~/.pyrax.cfg, see h
                               ttps://github.com
                               /rackspace/pyrax/
                               blob/master/docs/
                               getting_started.m
                               d#pyrax-
                               configuration
      name                   # Name to give to the database
      region                 # Region to create an instance in
      state                  # Indicate desired state of the resource
      username               # Rackspace username (overrides `credentials')
      verify_ssl             # Whether or not to require SSL validation of API
                               endpoints
- name: create / delete a Rackspace Cloud Database
  action: rax_cdb_user
      api_key                # Rackspace API key (overrides `credentials')
      cdb_id                 # The databases server UUID
      credentials            # File to find the Rackspace credentials in
                               (ignored if
                               `api_key' and
                               `username' are
                               provided)
      databases              # Name of the databases that the user can access
      db_password            # Database user password
      db_username            # Name of the database user
      env                    # Environment as configured in ~/.pyrax.cfg, see h
                               ttps://github.com
                               /rackspace/pyrax/
                               blob/master/docs/
                               getting_started.m
                               d#pyrax-
                               configuration
      host                   # Specifies the host from which a user is allowed
                               to connect to the
                               database.
                               Possible values
                               are a string
                               containing an
                               IPv4 address or
                               "%" to allow
                               connecting from
                               any host
      region                 # Region to create an instance in
      state                  # Indicate desired state of the resource
      username               # Rackspace username (overrides `credentials')
      verify_ssl             # Whether or not to require SSL validation of API
                               endpoints
- name: create / delete a load balancer in Rackspace Public Cloud
  action: rax_clb
      algorithm              # algorithm for the balancer being created
      api_key                # Rackspace API key (overrides `credentials')
      credentials            # File to find the Rackspace credentials in
                               (ignored if
                               `api_key' and
                               `username' are
                               provided)
      env                    # Environment as configured in ~/.pyrax.cfg, see h
                               ttps://github.com
                               /rackspace/pyrax/
                               blob/master/docs/
                               getting_started.m
                               d#pyrax-
                               configuration
      meta                   # A hash of metadata to associate with the
                               instance
      name                   # Name to give the load balancer
      port                   # Port for the balancer being created
      protocol               # Protocol for the balancer being created
      region                 # Region to create an instance in
      state                  # Indicate desired state of the resource
      timeout                # timeout for communication between the balancer
                               and the node
      type                   # type of interface for the balancer being created
      username               # Rackspace username (overrides `credentials')
      verify_ssl             # Whether or not to require SSL validation of API
                               endpoints
      vip_id                 # Virtual IP ID to use when creating the load
                               balancer for
                               purposes of
                               sharing an IP
                               with another load
                               balancer of
                               another protocol
      wait                   # wait for the balancer to be in state 'running'
                               before returning
      wait_timeout           # how long before wait gives up, in seconds
- name: add, modify and remove nodes from a Rackspace Cloud Load Balancer
  action: rax_clb_nodes
      address                # IP address or domain name of the node
      api_key                # Rackspace API key (overrides `credentials')
      condition              # Condition for the node, which determines its
                               role within the
                               load balancer
      credentials            # File to find the Rackspace credentials in
                               (ignored if
                               `api_key' and
                               `username' are
                               provided)
      env                    # Environment as configured in ~/.pyrax.cfg, see h
                               ttps://github.com
                               /rackspace/pyrax/
                               blob/master/docs/
                               getting_started.m
                               d#pyrax-
                               configuration
      load_balancer_id=      # Load balancer id
      node_id                # Node id
      port                   # Port number of the load balanced service on the
                               node
      region                 # Region to create an instance in
      state                  # Indicate desired state of the node
      type                   # Type of node
      username               # Rackspace username (overrides `credentials')
      verify_ssl             # Whether or not to require SSL validation of API
                               endpoints
      wait                   # Wait for the load balancer to become active
                               before returning
      wait_timeout           # How long to wait before giving up and returning
                               an error
      weight                 # Weight of node
- name: Manage SSL termination for a Rackspace Cloud Load Balancer.
  action: rax_clb_ssl
      api_key                # Rackspace API key (overrides `credentials')
      certificate            # The public SSL certificates as a string in PEM
                               format.
      credentials            # File to find the Rackspace credentials in
                               (ignored if
                               `api_key' and
                               `username' are
                               provided)
      enabled                # If set to "false", temporarily disable SSL
                               termination
                               without
                               discarding
                               existing
                               credentials.
      env                    # Environment as configured in ~/.pyrax.cfg, see h
                               ttps://github.com
                               /rackspace/pyrax/
                               blob/master/docs/
                               getting_started.m
                               d#pyrax-
                               configuration
      https_redirect         # If "true", the load balancer will redirect HTTP
                               traffic to HTTPS.
                               Requires "secure_
                               traffic_only" to
                               be true. Incurs
                               an implicit wait
                               if SSL
                               termination is
                               also applied or
                               removed.
      intermediate_certificate   # One or more intermediate certificate authorities
                               as a string in
                               PEM format,
                               concatenated into
                               a single string.
      loadbalancer=          # Name or ID of the load balancer on which to
                               manage SSL
                               termination.
      private_key            # The private SSL key as a string in PEM format.
      region                 # Region to create an instance in
      secure_port            # The port to listen for secure traffic.
      secure_traffic_only    # If "true", the load balancer will *only* accept
                               secure traffic.
      state                  # If set to "present", SSL termination will be
                               added to this
                               load balancer. If
                               "absent", SSL
                               termination will
                               be removed
                               instead.
      username               # Rackspace username (overrides `credentials')
      verify_ssl             # Whether or not to require SSL validation of API
                               endpoints
      wait                   # Wait for the balancer to be in state "running"
                               before turning.
      wait_timeout           # How long before "wait" gives up, in seconds.
- name: Manage domains on Rackspace Cloud DNS
  action: rax_dns
      api_key                # Rackspace API key (overrides `credentials')
      comment                # Brief description of the domain. Maximum length
                               of 160 characters
      credentials            # File to find the Rackspace credentials in
                               (ignored if
                               `api_key' and
                               `username' are
                               provided)
      email                  # Email address of the domain administrator
      env                    # Environment as configured in ~/.pyrax.cfg, see h
                               ttps://github.com
                               /rackspace/pyrax/
                               blob/master/docs/
                               getting_started.m
                               d#pyrax-
                               configuration
      name                   # Domain name to create
      region                 # Region to create an instance in
      state                  # Indicate desired state of the resource
      ttl                    # Time to live of domain in seconds
      username               # Rackspace username (overrides `credentials')
      verify_ssl             # Whether or not to require SSL validation of API
                               endpoints
- name: Manage DNS records on Rackspace Cloud DNS
  action: rax_dns_record
      api_key                # Rackspace API key (overrides `credentials')
      comment                # Brief description of the domain. Maximum length
                               of 160 characters
      credentials            # File to find the Rackspace credentials in
                               (ignored if
                               `api_key' and
                               `username' are
                               provided)
      data=                  # IP address for A/AAAA record, FQDN for
                               CNAME/MX/NS, or
                               text data for
                               SRV/TXT
      domain                 # Domain name to create the record in. This is an
                               invalid option
                               when type=PTR
      env                    # Environment as configured in ~/.pyrax.cfg, see h
                               ttps://github.com
                               /rackspace/pyrax/
                               blob/master/docs/
                               getting_started.m
                               d#pyrax-
                               configuration
      loadbalancer           # Load Balancer ID to create a PTR record for.
                               Only used with
                               type=PTR
      name=                  # FQDN record name to create
      overwrite              # Add new records if data doesn't match, instead
                               of updating
                               existing record
                               with matching
                               name. If there
                               are already
                               multiple records
                               with matching
                               name and
                               overwrite=true,
                               this module will
                               fail.
      priority               # Required for MX and SRV records, but forbidden
                               for other record
                               types. If
                               specified, must
                               be an integer
                               from 0 to 65535.
      region                 # Region to create an instance in
      server                 # Server ID to create a PTR record for. Only used
                               with type=PTR
      state                  # Indicate desired state of the resource
      ttl                    # Time to live of record in seconds
      type=                  # DNS record type
      username               # Rackspace username (overrides `credentials')
      verify_ssl             # Whether or not to require SSL validation of API
                               endpoints
- name: Gather facts for Rackspace Cloud Servers
  action: rax_facts
      address                # Server IP address to retrieve facts for, will
                               match any IP
                               assigned to the
                               server
      api_key                # Rackspace API key (overrides `credentials')
      auth_endpoint          # The URI of the authentication service
      credentials            # File to find the Rackspace credentials in
                               (ignored if
                               `api_key' and
                               `username' are
                               provided)
      env                    # Environment as configured in ~/.pyrax.cfg, see h
                               ttps://github.com
                               /rackspace/pyrax/
                               blob/master/docs/
                               getting_started.m
                               d#pyrax-
                               configuration
      id                     # Server ID to retrieve facts for
      identity_type          # Authentication machanism to use, such as
                               rackspace or
                               keystone
      name                   # Server name to retrieve facts for
      region                 # Region to create an instance in
      tenant_id              # The tenant ID used for authentication
      tenant_name            # The tenant name used for authentication
      username               # Rackspace username (overrides `credentials')
      verify_ssl             # Whether or not to require SSL validation of API
                               endpoints
- name: Manipulate Rackspace Cloud Files Containers
  action: rax_files
      api_key                # Rackspace API key (overrides `credentials')
      clear_meta             # Optionally clear existing metadata when applying
                               metadata to
                               existing
                               containers.
                               Selecting this
                               option is only
                               appropriate when
                               setting type=meta
      container=             # The container to use for container or metadata
                               operations.
      credentials            # File to find the Rackspace credentials in
                               (ignored if
                               `api_key' and
                               `username' are
                               provided)
      env                    # Environment as configured in ~/.pyrax.cfg, see h
                               ttps://github.com
                               /rackspace/pyrax/
                               blob/master/docs/
                               getting_started.m
                               d#pyrax-
                               configuration
      meta                   # A hash of items to set as metadata values on a
                               container
      private                # Used to set a container as private, removing it
                               from the CDN.
                               *Warning!*
                               Private
                               containers, if
                               previously made
                               public, can have
                               live objects
                               available until
                               the TTL on cached
                               objects expires
      public                 # Used to set a container as public, available via
                               the Cloud Files
                               CDN
      region                 # Region to create an instance in
      state                  # Indicate desired state of the resource
      ttl                    # In seconds, set a container-wide TTL for all
                               objects cached on
                               CDN edge nodes.
                               Setting a TTL is
                               only appropriate
                               for containers
                               that are public
      type                   # Type of object to do work on, i.e. metadata
                               object or a
                               container object
      username               # Rackspace username (overrides `credentials')
      verify_ssl             # Whether or not to require SSL validation of API
                               endpoints
      web_error              # Sets an object to be presented as the HTTP error
                               page when
                               accessed by the
                               CDN URL
      web_index              # Sets an object to be presented as the HTTP index
                               page when
                               accessed by the
                               CDN URL
- name: Upload, download, and delete objects in Rackspace Cloud Files
  action: rax_files_objects
      api_key                # Rackspace API key (overrides `credentials')
      clear_meta             # Optionally clear existing metadata when applying
                               metadata to
                               existing objects.
                               Selecting this
                               option is only
                               appropriate when
                               setting type=meta
      container=             # The container to use for file object operations.
      credentials            # File to find the Rackspace credentials in
                               (ignored if
                               `api_key' and
                               `username' are
                               provided)
      dest                   # The destination of a "get" operation; i.e. a
                               local directory, 
                               "/home/user/myfol
                               der". Used to
                               specify the
                               destination of an
                               operation on a
                               remote object;
                               i.e. a file name,
                               "file1", or a
                               comma-separated
                               list of remote
                               objects, "file1,f
                               ile2,file17"
      env                    # Environment as configured in ~/.pyrax.cfg, see h
                               ttps://github.com
                               /rackspace/pyrax/
                               blob/master/docs/
                               getting_started.m
                               d#pyrax-
                               configuration
      expires                # Used to set an expiration on a file or folder
                               uploaded to Cloud
                               Files. Requires
                               an integer,
                               specifying
                               expiration in
                               seconds
      meta                   # A hash of items to set as metadata values on an
                               uploaded file or
                               folder
      method                 # The method of operation to be performed.  For
                               example, put to
                               upload files to
                               Cloud Files, get
                               to download files
                               from Cloud Files
                               or delete to
                               delete remote
                               objects in Cloud
                               Files
      region                 # Region to create an instance in
      src                    # Source from which to upload files.  Used to
                               specify a remote
                               object as a
                               source for an
                               operation, i.e. a
                               file name,
                               "file1", or a
                               comma-separated
                               list of remote
                               objects, "file1,f
                               ile2,file17".
                               src and dest are
                               mutually
                               exclusive on
                               remote-only
                               object operations
      state                  # Indicate desired state of the resource
      structure              # Used to specify whether to maintain nested
                               directory
                               structure when
                               downloading
                               objects from
                               Cloud Files.
                               Setting to false
                               downloads the
                               contents of a
                               container to a
                               single, flat
                               directory
      type                   # Type of object to do work on Metadata object or
                               a file object
      username               # Rackspace username (overrides `credentials')
      verify_ssl             # Whether or not to require SSL validation of API
                               endpoints
- name: Load Rackspace Cloud Identity
  action: rax_identity
      api_key                # Rackspace API key (overrides `credentials')
      auth_endpoint          # The URI of the authentication service
      credentials            # File to find the Rackspace credentials in
                               (ignored if
                               `api_key' and
                               `username' are
                               provided)
      env                    # Environment as configured in ~/.pyrax.cfg, see h
                               ttps://github.com
                               /rackspace/pyrax/
                               blob/master/docs/
                               getting_started.m
                               d#pyrax-
                               configuration
      identity_type          # Authentication machanism to use, such as
                               rackspace or
                               keystone
      region                 # Region to create an instance in
      state                  # Indicate desired state of the resource
      tenant_id              # The tenant ID used for authentication
      tenant_name            # The tenant name used for authentication
      username               # Rackspace username (overrides `credentials')
      verify_ssl             # Whether or not to require SSL validation of API
                               endpoints
- name: Create a keypair for use with Rackspace Cloud Servers
  action: rax_keypair
      api_key                # Rackspace API key (overrides `credentials')
      auth_endpoint          # The URI of the authentication service
      credentials            # File to find the Rackspace credentials in
                               (ignored if
                               `api_key' and
                               `username' are
                               provided)
      env                    # Environment as configured in ~/.pyrax.cfg, see h
                               ttps://github.com
                               /rackspace/pyrax/
                               blob/master/docs/
                               getting_started.m
                               d#pyrax-
                               configuration
      identity_type          # Authentication machanism to use, such as
                               rackspace or
                               keystone
      name=                  # Name of keypair
      public_key             # Public Key string to upload. Can be a file path
                               or string
      region                 # Region to create an instance in
      state                  # Indicate desired state of the resource
      tenant_id              # The tenant ID used for authentication
      tenant_name            # The tenant name used for authentication
      username               # Rackspace username (overrides `credentials')
      verify_ssl             # Whether or not to require SSL validation of API
                               endpoints
- name: Manipulate metadata for Rackspace Cloud Servers
  action: rax_meta
      address                # Server IP address to modify metadata for, will
                               match any IP
                               assigned to the
                               server
      api_key                # Rackspace API key (overrides `credentials')
      auth_endpoint          # The URI of the authentication service
      credentials            # File to find the Rackspace credentials in
                               (ignored if
                               `api_key' and
                               `username' are
                               provided)
      env                    # Environment as configured in ~/.pyrax.cfg, see h
                               ttps://github.com
                               /rackspace/pyrax/
                               blob/master/docs/
                               getting_started.m
                               d#pyrax-
                               configuration
      id                     # Server ID to modify metadata for
      identity_type          # Authentication machanism to use, such as
                               rackspace or
                               keystone
      meta                   # A hash of metadata to associate with the
                               instance
      name                   # Server name to modify metadata for
      region                 # Region to create an instance in
      tenant_id              # The tenant ID used for authentication
      tenant_name            # The tenant name used for authentication
      username               # Rackspace username (overrides `credentials')
      verify_ssl             # Whether or not to require SSL validation of API
                               endpoints
- name: Create or delete a Rackspace Cloud Monitoring alarm.
  action: rax_mon_alarm
      api_key                # Rackspace API key (overrides `credentials')
      auth_endpoint          # The URI of the authentication service
      check_id=              # ID of the check that should be alerted on. May
                               be acquired by
                               registering the
                               value of a
                               rax_mon_check
                               task.
      credentials            # File to find the Rackspace credentials in
                               (ignored if
                               `api_key' and
                               `username' are
                               provided)
      criteria               # Alarm DSL that describes alerting conditions and
                               their output
                               states. Must be
                               between 1 and
                               16384 characters
                               long. See http://
                               docs.rackspace.co
                               m/cm/api/v1.0/cm-
                               devguide/content
                               /alerts-
                               language.html for
                               a reference on
                               the alerting
                               language.
      disabled               # If yes, create this alarm, but leave it in an
                               inactive state.
                               Defaults to no.
      entity_id=             # ID of the entity this alarm is attached to. May
                               be acquired by
                               registering the
                               value of a
                               rax_mon_entity
                               task.
      env                    # Environment as configured in ~/.pyrax.cfg, see h
                               ttps://github.com
                               /rackspace/pyrax/
                               blob/master/docs/
                               getting_started.m
                               d#pyrax-
                               configuration
      identity_type          # Authentication machanism to use, such as
                               rackspace or
                               keystone
      label=                 # Friendly name for this alarm, used to achieve
                               idempotence. Must
                               be a String
                               between 1 and 255
                               characters long.
      metadata               # Arbitrary key/value pairs to accompany the
                               alarm. Must be a
                               hash of String
                               keys and values
                               between 1 and 255
                               characters long.
      notification_plan_id=   # ID of the notification plan to trigger if this
                               alarm fires. May
                               be acquired by
                               registering the
                               value of a rax_mo
                               n_notification_pl
                               an task.
      region                 # Region to create an instance in
      state                  # Ensure that the alarm with this `label' exists
                               or does not
                               exist.
      tenant_id              # The tenant ID used for authentication
      tenant_name            # The tenant name used for authentication
      username               # Rackspace username (overrides `credentials')
      verify_ssl             # Whether or not to require SSL validation of API
                               endpoints
- name: Create or delete a Rackspace Cloud Monitoring check for an existing entity.
  action: rax_mon_check
      api_key                # Rackspace API key (overrides `credentials')
      auth_endpoint          # The URI of the authentication service
      check_type=            # The type of check to create. `remote.' checks
                               may be created on
                               any
                               rax_mon_entity.
                               `agent.' checks
                               may only be
                               created on
                               rax_mon_entities
                               that have a non-
                               null `agent_id'.
      credentials            # File to find the Rackspace credentials in
                               (ignored if
                               `api_key' and
                               `username' are
                               provided)
      details                # Additional details specific to the check type.
                               Must be a hash of
                               strings between 1
                               and 255
                               characters long,
                               or an array or
                               object containing
                               0 to 256 items.
      disabled               # If "yes", ensure the check is created, but don't
                               actually use it
                               yet.
      entity_id=             # ID of the rax_mon_entity to target with this
                               check.
      env                    # Environment as configured in ~/.pyrax.cfg, see h
                               ttps://github.com
                               /rackspace/pyrax/
                               blob/master/docs/
                               getting_started.m
                               d#pyrax-
                               configuration
      identity_type          # Authentication machanism to use, such as
                               rackspace or
                               keystone
      label=                 # Defines a label for this check, between 1 and 64
                               characters long.
      metadata               # Hash of arbitrary key-value pairs to accompany
                               this check if it
                               fires. Keys and
                               values must be
                               strings between 1
                               and 255
                               characters long.
      monitoring_zones_poll   # Comma-separated list of the names of the
                               monitoring zones
                               the check should
                               run from.
                               Available
                               monitoring zones
                               include mzdfw,
                               mzhkg, mziad,
                               mzlon, mzord and
                               mzsyd. Required
                               for remote.*
                               checks;
                               prohibited for
                               agent.* checks.
      period                 # The number of seconds between each time the
                               check is
                               performed. Must
                               be greater than
                               the minimum
                               period set on
                               your account.
      region                 # Region to create an instance in
      state                  # Ensure that a check with this `label' exists or
                               does not exist.
      target_alias           # One of `target_alias` and `target_hostname` is
                               required for
                               remote.* checks,
                               but prohibited
                               for agent.*
                               checks. Use the
                               corresponding key
                               in the entity's
                               `ip_addresses`
                               hash to resolve
                               an IP address to
                               target.
      target_hostname        # One of `target_hostname` and `target_alias` is
                               required for
                               remote.* checks,
                               but prohibited
                               for agent.*
                               checks. The
                               hostname this
                               check should
                               target. Must be a
                               valid IPv4, IPv6,
                               or FQDN.
      tenant_id              # The tenant ID used for authentication
      tenant_name            # The tenant name used for authentication
      timeout                # The number of seconds this check will wait when
                               attempting to
                               collect results.
                               Must be less than
                               the period.
      username               # Rackspace username (overrides `credentials')
      verify_ssl             # Whether or not to require SSL validation of API
                               endpoints
- name: Create or delete a Rackspace Cloud Monitoring entity
  action: rax_mon_entity
      agent_id               # Rackspace monitoring agent on the target device
                               to which this
                               entity is bound.
                               Necessary to
                               collect `agent.'
                               rax_mon_checks
                               against this
                               entity.
      api_key                # Rackspace API key (overrides `credentials')
      auth_endpoint          # The URI of the authentication service
      credentials            # File to find the Rackspace credentials in
                               (ignored if
                               `api_key' and
                               `username' are
                               provided)
      env                    # Environment as configured in ~/.pyrax.cfg, see h
                               ttps://github.com
                               /rackspace/pyrax/
                               blob/master/docs/
                               getting_started.m
                               d#pyrax-
                               configuration
      identity_type          # Authentication machanism to use, such as
                               rackspace or
                               keystone
      label=                 # Defines a name for this entity. Must be a non-
                               empty string
                               between 1 and 255
                               characters long.
      metadata               # Hash of arbitrary `name', `value' pairs that are
                               passed to
                               associated
                               rax_mon_alarms.
                               Names and values
                               must all be
                               between 1 and 255
                               characters long.
      named_ip_addresses     # Hash of IP addresses that may be referenced by
                               name by
                               rax_mon_checks
                               added to this
                               entity. Must be a
                               dictionary of
                               with keys that
                               are names between
                               1 and 64
                               characters long,
                               and values that
                               are valid IPv4 or
                               IPv6 addresses.
      region                 # Region to create an instance in
      state                  # Ensure that an entity with this `name' exists or
                               does not exist.
      tenant_id              # The tenant ID used for authentication
      tenant_name            # The tenant name used for authentication
      username               # Rackspace username (overrides `credentials')
      verify_ssl             # Whether or not to require SSL validation of API
                               endpoints
- name: Create or delete a Rackspace Cloud Monitoring notification.
  action: rax_mon_notification
      api_key                # Rackspace API key (overrides `credentials')
      auth_endpoint          # The URI of the authentication service
      credentials            # File to find the Rackspace credentials in
                               (ignored if
                               `api_key' and
                               `username' are
                               provided)
      details=               # Dictionary of key-value pairs used to initialize
                               the notification.
                               Required keys and
                               meanings vary
                               with notification
                               type. See http://
                               docs.rackspace.co
                               m/cm/api/v1.0/cm-
                               devguide/content/
                               service-
                               notification-
                               types-crud.html
                               for details.
      env                    # Environment as configured in ~/.pyrax.cfg, see h
                               ttps://github.com
                               /rackspace/pyrax/
                               blob/master/docs/
                               getting_started.m
                               d#pyrax-
                               configuration
      identity_type          # Authentication machanism to use, such as
                               rackspace or
                               keystone
      label=                 # Defines a friendly name for this notification.
                               String between 1
                               and 255
                               characters long.
      notification_type=     # A supported notification type.
      region                 # Region to create an instance in
      state                  # Ensure that the notification with this `label'
                               exists or does
                               not exist.
      tenant_id              # The tenant ID used for authentication
      tenant_name            # The tenant name used for authentication
      username               # Rackspace username (overrides `credentials')
      verify_ssl             # Whether or not to require SSL validation of API
                               endpoints
- name: Create or delete a Rackspace Cloud Monitoring notification plan.
  action: rax_mon_notification_plan
      api_key                # Rackspace API key (overrides `credentials')
      auth_endpoint          # The URI of the authentication service
      credentials            # File to find the Rackspace credentials in
                               (ignored if
                               `api_key' and
                               `username' are
                               provided)
      critical_state         # Notification list to use when the alarm state is
                               CRITICAL. Must be
                               an array of valid
                               rax_mon_notificat
                               ion ids.
      env                    # Environment as configured in ~/.pyrax.cfg, see h
                               ttps://github.com
                               /rackspace/pyrax/
                               blob/master/docs/
                               getting_started.m
                               d#pyrax-
                               configuration
      identity_type          # Authentication machanism to use, such as
                               rackspace or
                               keystone
      label=                 # Defines a friendly name for this notification
                               plan. String
                               between 1 and 255
                               characters long.
      ok_state               # Notification list to use when the alarm state is
                               OK. Must be an
                               array of valid ra
                               x_mon_notificatio
                               n ids.
      region                 # Region to create an instance in
      state                  # Ensure that the notification plan with this
                               `label' exists or
                               does not exist.
      tenant_id              # The tenant ID used for authentication
      tenant_name            # The tenant name used for authentication
      username               # Rackspace username (overrides `credentials')
      verify_ssl             # Whether or not to require SSL validation of API
                               endpoints
      warning_state          # Notification list to use when the alarm state is
                               WARNING. Must be
                               an array of valid
                               rax_mon_notificat
                               ion ids.
- name: create / delete an isolated network in Rackspace Public Cloud
  action: rax_network
      api_key                # Rackspace API key (overrides `credentials')
      auth_endpoint          # The URI of the authentication service
      cidr                   # cidr of the network being created
      credentials            # File to find the Rackspace credentials in
                               (ignored if
                               `api_key' and
                               `username' are
                               provided)
      env                    # Environment as configured in ~/.pyrax.cfg, see h
                               ttps://github.com
                               /rackspace/pyrax/
                               blob/master/docs/
                               getting_started.m
                               d#pyrax-
                               configuration
      identity_type          # Authentication machanism to use, such as
                               rackspace or
                               keystone
      label                  # Label (name) to give the network
      region                 # Region to create an instance in
      state                  # Indicate desired state of the resource
      tenant_id              # The tenant ID used for authentication
      tenant_name            # The tenant name used for authentication
      username               # Rackspace username (overrides `credentials')
      verify_ssl             # Whether or not to require SSL validation of API
                               endpoints
- name: create / delete a queue in Rackspace Public Cloud
  action: rax_queue
      api_key                # Rackspace API key (overrides `credentials')
      credentials            # File to find the Rackspace credentials in
                               (ignored if
                               `api_key' and
                               `username' are
                               provided)
      env                    # Environment as configured in ~/.pyrax.cfg, see h
                               ttps://github.com
                               /rackspace/pyrax/
                               blob/master/docs/
                               getting_started.m
                               d#pyrax-
                               configuration
      name                   # Name to give the queue
      region                 # Region to create an instance in
      state                  # Indicate desired state of the resource
      username               # Rackspace username (overrides `credentials')
      verify_ssl             # Whether or not to require SSL validation of API
                               endpoints
- name: Manipulate Rackspace Cloud Autoscale Groups
  action: rax_scaling_group
      api_key                # Rackspace API key (overrides `credentials')
      config_drive           # Attach read-only configuration drive to server
                               as label config-2
      cooldown               # The period of time, in seconds, that must pass
                               before any
                               scaling can occur
                               after the
                               previous scaling.
                               Must be an
                               integer between 0
                               and 86400 (24
                               hrs).
      credentials            # File to find the Rackspace credentials in
                               (ignored if
                               `api_key' and
                               `username' are
                               provided)
      disk_config            # Disk partitioning strategy
      env                    # Environment as configured in ~/.pyrax.cfg, see h
                               ttps://github.com
                               /rackspace/pyrax/
                               blob/master/docs/
                               getting_started.m
                               d#pyrax-
                               configuration
      files                  # Files to insert into the instance. Hash of
                               `remotepath:
                               localpath'
      flavor=                # flavor to use for the instance
      image=                 # image to use for the instance. Can be an `id',
                               `human_id' or
                               `name'
      key_name               # key pair to use on the instance
      loadbalancers          # List of load balancer `id' and `port' hashes
      max_entities=          # The maximum number of entities that are allowed
                               in the scaling
                               group. Must be an
                               integer between 0
                               and 1000.
      meta                   # A hash of metadata to associate with the
                               instance
      min_entities=          # The minimum number of entities that are allowed
                               in the scaling
                               group. Must be an
                               integer between 0
                               and 1000.
      name=                  # Name to give the scaling group
      networks               # The network to attach to the instances. If
                               specified, you
                               must include ALL
                               networks
                               including the
                               public and
                               private
                               interfaces. Can
                               be `id' or
                               `label'.
      region                 # Region to create an instance in
      server_name=           # The base name for servers created by Autoscale
      state                  # Indicate desired state of the resource
      user_data              # Data to be uploaded to the servers config drive.
                               This option
                               implies
                               `config_drive'.
                               Can be a file
                               path or a string
      username               # Rackspace username (overrides `credentials')
      verify_ssl             # Whether or not to require SSL validation of API
                               endpoints
      wait                   # wait for the scaling group to finish
                               provisioning the
                               minimum amount of
                               servers
      wait_timeout           # how long before wait gives up, in seconds
- name: Manipulate Rackspace Cloud Autoscale Scaling Policy
  action: rax_scaling_policy
      api_key                # Rackspace API key (overrides `credentials')
      at                     # The UTC time when this policy will be executed.
                               The time must be
                               formatted
                               according to
                               `yyyy-MM-dd'T'HH:
                               mm:ss.SSS' such
                               as `2013-05-19T08
                               :07:08Z'
      change                 # The change, either as a number of servers or as
                               a percentage, to
                               make in the
                               scaling group. If
                               this is a
                               percentage, you
                               must set
                               `is_percent' to
                               `true' also.
      cooldown               # The period of time, in seconds, that must pass
                               before any
                               scaling can occur
                               after the
                               previous scaling.
                               Must be an
                               integer between 0
                               and 86400 (24
                               hrs).
      credentials            # File to find the Rackspace credentials in
                               (ignored if
                               `api_key' and
                               `username' are
                               provided)
      cron                   # The time when the policy will be executed, as a
                               cron entry. For
                               example, if this
                               is parameter is
                               set to `1 0 * *
                               *'
      desired_capacity       # The desired server capacity of the scaling the
                               group; that is,
                               how many servers
                               should be in the
                               scaling group.
      env                    # Environment as configured in ~/.pyrax.cfg, see h
                               ttps://github.com
                               /rackspace/pyrax/
                               blob/master/docs/
                               getting_started.m
                               d#pyrax-
                               configuration
      is_percent             # Whether the value in `change' is a percent value
      name=                  # Name to give the policy
      policy_type=           # The type of policy that will be executed for the
                               current release.
      region                 # Region to create an instance in
      scaling_group=         # Name of the scaling group that this policy will
                               be added to
      state                  # Indicate desired state of the resource
      username               # Rackspace username (overrides `credentials')
      verify_ssl             # Whether or not to require SSL validation of API
                               endpoints
- name: create, delete, or modify an Amazon rds instance
  action: rds
      apply_immediately      # Used only when command=modify.  If enabled, the
                               modifications
                               will be applied
                               as soon as
                               possible rather
                               than waiting for
                               the next
                               preferred
                               maintenance
                               window.
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_KEY
                               environment
                               variable is used.
      backup_retention       # Number of days backups are retained.  Set to 0
                               to disable
                               backups.  Default
                               is 1 day.  Valid
                               range: 0-35. Used
                               only when
                               command=create or
                               command=modify.
      backup_window          # Backup window in format of hh24:mi-hh24:mi.  If
                               not specified
                               then a random
                               backup window is
                               assigned. Used
                               only when
                               command=create or
                               command=modify.
      character_set_name     # Associate the DB instance with a specified
                               character set.
                               Used with
                               command=create.
      command=               # Specifies the action to take. The 'reboot'
                               option is
                               available
                               starting at
                               version 2.0
      db_engine              # The type of database.  Used only when
                               command=create.
                               mariadb was added
                               in version 2.2
      db_name                # Name of a database to create within the
                               instance.  If not
                               specified then no
                               database is
                               created. Used
                               only when
                               command=create.
      engine_version         # Version number of the database engine to use.
                               Used only when
                               command=create.
                               If not specified
                               then the current
                               Amazon RDS
                               default engine
                               version is used.
      force_failover         # Used only when command=reboot.  If enabled, the
                               reboot is done
                               using a MultiAZ
                               failover.
      instance_name          # Database instance identifier. Required except
                               when using
                               command=facts or
                               command=delete on
                               just a snapshot
      instance_type          # The instance type of the database.  Must be
                               specified when
                               command=create.
                               Optional when com
                               mand=replicate,
                               command=modify or
                               command=restore.
                               If not specified
                               then the replica
                               inherits the same
                               instance type as
                               the source
                               instance.
      iops                   # Specifies the number of IOPS for the instance.
                               Used only when
                               command=create or
                               command=modify.
                               Must be an
                               integer greater
                               than 1000.
      license_model          # The license model for this DB instance. Used
                               only when
                               command=create or
                               command=restore.
      maint_window           # Maintenance window in format of ddd:hh24:mi-
                               ddd:hh24:mi.
                               (Example: Mon:22:
                               00-Mon:23:15) If
                               not specified
                               then a random
                               maintenance
                               window is
                               assigned. Used
                               only when
                               command=create or
                               command=modify.
      multi_zone             # Specifies if this is a Multi-availability-zone
                               deployment. Can
                               not be used in
                               conjunction with
                               zone parameter.
                               Used only when
                               command=create or
                               command=modify.
      new_instance_name      # Name to rename an instance to. Used only when
                               command=modify.
      option_group           # The name of the option group to use.  If not
                               specified then
                               the default
                               option group is
                               used. Used only
                               when
                               command=create.
      parameter_group        # Name of the DB parameter group to associate with
                               this instance.
                               If omitted then
                               the RDS default
                               DBParameterGroup
                               will be used.
                               Used only when
                               command=create or
                               command=modify.
      password               # Password for the master database username. Used
                               only when
                               command=create or
                               command=modify.
      port                   # Port number that the DB instance uses for
                               connections. Used
                               only when
                               command=create or
                               command=replicate
                               . Prior to 2.0 it
                               always defaults
                               to null and the
                               API would use
                               3306, it had to
                               be set to other
                               DB default values
                               when not using
                               MySql. Starting
                               at 2.0 it
                               automatically
                               defaults to what
                               is expected for
                               each
                               c(db_engine).
      publicly_accessible    # explicitly set whether the resource should be
                               publicly
                               accessible or
                               not. Used with
                               command=create, c
                               ommand=replicate.
                               Requires boto >=
                               2.26.0
      region=                # The AWS region to use. If not specified then the
                               value of the
                               EC2_REGION
                               environment
                               variable, if any,
                               is used.
      security_groups        # Comma separated list of one or more security
                               groups.  Used
                               only when
                               command=create or
                               command=modify.
      size                   # Size in gigabytes of the initial storage for the
                               DB instance. Used
                               only when
                               command=create or
                               command=modify.
      snapshot               # Name of snapshot to take. When command=delete,
                               if no snapshot
                               name is provided
                               then no snapshot
                               is taken. If used
                               with
                               command=delete
                               with no
                               instance_name,
                               the snapshot is
                               deleted. Used
                               with
                               command=facts,
                               command=delete or
                               command=snapshot.
      source_instance        # Name of the database to replicate. Used only
                               when command=repl
                               icate.
      subnet                 # VPC subnet group.  If specified then a VPC
                               instance is
                               created. Used
                               only when
                               command=create.
      tags                   # tags dict to apply to a resource. Used with
                               command=create, c
                               ommand=replicate,
                               command=restore.
                               Requires boto >=
                               2.26.0
      upgrade                # Indicates that minor version upgrades should be
                               applied
                               automatically.
                               Used only when
                               command=create or
                               command=replicate
                               .
      username               # Master database username. Used only when
                               command=create.
      vpc_security_groups    # Comma separated list of one or more vpc security
                               group ids. Also
                               requires `subnet`
                               to be specified.
                               Used only when
                               command=create or
                               command=modify.
      wait                   # When command=create, replicate, modify or
                               restore then wait
                               for the database
                               to enter the
                               'available'
                               state.  When
                               command=delete
                               wait for the
                               database to be
                               terminated.
      wait_timeout           # how long before wait gives up, in seconds
      zone                   # availability zone in which to launch the
                               instance. Used
                               only when
                               command=create,
                               command=replicate
                               or
                               command=restore.
- name: manage RDS parameter groups
  action: rds_param_group
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      description            # Database parameter group description. Only set
                               when a new group
                               is added.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      engine                 # The type of database for this group. Required
                               for
                               state=present.
      immediate              # Whether to apply the changes immediately, or
                               after the next
                               reboot of any
                               associated
                               instances.
      name=                  # Database parameter group identifier.
      params                 # Map of parameter names and values. Numeric
                               values may be
                               represented as K
                               for kilo (1024),
                               M for mega
                               (1024^2), G for
                               giga (1024^3), or
                               T for tera
                               (1024^4), and
                               these values will
                               be expanded into
                               the appropriate
                               number before
                               being set in the
                               parameter group.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state=                 # Specifies whether the group should be present or
                               absent.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: manage RDS database subnet groups
  action: rds_subnet_group
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      description            # Database subnet group description. Only set when
                               a new group is
                               added.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      name=                  # Database subnet group identifier.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state=                 # Specifies whether the subnet should be present
                               or absent.
      subnets                # List of subnet IDs that make up the database
                               subnet group.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: Manage registration and subscriptions to RHSM using the `subscription-manager' command
  action: redhat_subscription
      activationkey          # supply an activation key for use with
                               registration
      autosubscribe          # Upon successful registration, auto-consume
                               available
                               subscriptions
      consumer_id            # References an existing consumer ID to resume
                               using a previous
                               registration for
                               this system. If
                               the  system's
                               identity
                               certificate is
                               lost or
                               corrupted, this
                               option allows it
                               to resume using
                               its previous
                               identity and
                               subscriptions.
                               The default is to
                               not specify a
                               consumer ID so a
                               new ID is
                               created.
      consumer_name          # Name of the system to register, defaults to the
                               hostname
      consumer_type          # The type of unit to register, defaults to system
      environment            # Register with a specific environment in the
                               destination org.
                               Used with Red Hat
                               Satellite 6.x or
                               Katello
      force_register         # Register the system even if it is already
                               registered
      org_id                 # Organization ID to use in conjunction with
                               activationkey
      password               # access.redhat.com or Sat6 password
      pool                   # Specify a subscription pool name to consume.
                               Regular
                               expressions
                               accepted.
      rhsm_baseurl           # Specify CDN baseurl
      server_hostname        # Specify an alternative Red Hat Subscription
                               Management or
                               Sat6 server
      server_insecure        # Enable or disable https server certificate
                               verification when
                               connecting to
                               `server_hostname'
      state                  # whether to register and subscribe (`present'),
                               or unregister
                               (`absent') a
                               system
      username               # access.redhat.com or Sat6  username
- name: Various redis commands, slave and flush
  action: redis
      command=               # The selected redis command
      db                     # The database to flush (used in db mode) [flush
                               command]
      flush_mode             # Type of flush (all the dbs in a redis instance
                               or a specific
                               one) [flush
                               command]
      login_host             # The host running the database
      login_password         # The password used to authenticate with (usually
                               not used)
      login_port             # The port to connect to
      master_host            # The host of the master instance [slave command]
      master_port            # The port of the master instance [slave command]
      name                   # A redis config key.
      slave_mode             # the mode of the redis instance [slave command]
      value                  # A redis config value.
- name: create, delete, or modify an Amazon Redshift instance
  action: redshift
      allow_version_upgrade   # flag to determinate if upgrade of version is
                               possible
      automated_snapshot_retention_period   # period when the snapshot take place
      availability_zone      # availability zone in which to launch cluster
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      cluster_parameter_group_name   # name of the cluster parameter group
      cluster_security_groups   # in which security group the cluster belongs
      cluster_subnet_group_name   # which subnet to place the cluster
      cluster_type           # The type of cluster.
      cluster_version        # which version the cluster should have
      command=               # Specifies the action to take.
      db_name                # Name of the database.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      elastic_ip             # if the cluster has an elastic IP or not
      encrypted              # if the cluster is encrypted or not
      identifier=            # Redshift cluster identifier.
      new_cluster_identifier   # Only used when command=modify.
      node_type              # The node type of the cluster. Must be specified
                               when
                               command=create.
      number_of_nodes        # Number of nodes. Only used when cluster_type
                               =multi-node.
      password               # Master database password. Used only when
                               command=create.
      port                   # which port the cluster is listining
      preferred_maintenance_window   # maintenance window
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      publicly_accessible    # if the cluster is accessible publicly or not
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      username               # Master database username. Used only when
                               command=create.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
      vpc_security_group_ids   # VPC security group
      wait                   # When command=create, modify or restore then wait
                               for the database
                               to enter the
                               'available'
                               state. When
                               command=delete
                               wait for the
                               database to be
                               terminated.
      wait_timeout           # how long before wait gives up, in seconds
- name: mange Redshift cluster subnet groups
  action: redshift_subnet_group
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      group_description      # Database subnet group description.
      group_name=            # Cluster subnet group name.
      group_subnets          # List of subnet IDs that make up the cluster
                               subnet group.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state                  # Specifies whether the subnet should be present
                               or absent.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: Replace all instances of a particular string in a file using a back-referenced regular expression.
  action: replace
      backup                 # Create a backup file including the timestamp
                               information so
                               you can get the
                               original file
                               back if you
                               somehow clobbered
                               it incorrectly.
      dest=                  # The file to modify.
      follow                 # This flag indicates that filesystem links, if
                               they exist,
                               should be
                               followed.
      group                  # name of the group that should own the
                               file/directory,
                               as would be fed
                               to `chown'
      mode                   # mode the file or directory should be. For those
                               used to
                               `/usr/bin/chmod'
                               remember that
                               modes are
                               actually octal
                               numbers (like
                               0644). Leaving
                               off the leading
                               zero will likely
                               have unexpected
                               results. As of
                               version 1.8, the
                               mode may be
                               specified as a
                               symbolic mode
                               (for example,
                               `u+rwx' or
                               `u=rw,g=r,o=r').
      others                 # All arguments accepted by the [file] module also
                               work here.
      owner                  # name of the user that should own the
                               file/directory,
                               as would be fed
                               to `chown'
      regexp=                # The regular expression to look for in the
                               contents of the
                               file. Uses Python
                               regular
                               expressions; see 
                               http://docs.pytho
                               n.org/2/library/r
                               e.html. Uses
                               multiline mode,
                               which means `^'
                               and `$' match the
                               beginning and end
                               respectively of
                               `each line' of
                               the file.
      replace                # The string to replace regexp matches. May
                               contain
                               backreferences
                               that will get
                               expanded with the
                               regexp capture
                               groups if the
                               regexp matches.
                               If not set,
                               matches are
                               removed entirely.
      selevel                # level part of the SELinux file context. This is
                               the MLS/MCS
                               attribute,
                               sometimes known
                               as the `range'.
                               `_default'
                               feature works as
                               for `seuser'.
      serole                 # role part of SELinux file context, `_default'
                               feature works as
                               for `seuser'.
      setype                 # type part of SELinux file context, `_default'
                               feature works as
                               for `seuser'.
      seuser                 # user part of SELinux file context. Will default
                               to system policy,
                               if applicable. If
                               set to
                               `_default', it
                               will use the
                               `user' portion of
                               the policy if
                               available
      unsafe_writes          # Normally this module uses atomic operations to
                               prevent data
                               corruption or
                               inconsistent
                               reads from the
                               target files,
                               sometimes systems
                               are configured or
                               just broken in
                               ways that prevent
                               this. One example
                               are docker
                               mounted files,
                               they cannot be
                               updated
                               atomically and
                               can only be done
                               in an unsafe
                               manner. This
                               boolean option
                               allows ansible to
                               fall back to
                               unsafe methods of
                               updating files
                               for those cases
                               in which you do
                               not have any
                               other choice. Be
                               aware that this
                               is subject to
                               race conditions
                               and can lead to
                               data corruption.
      validate               # The validation command to run before copying
                               into place. The
                               path to the file
                               to validate is
                               passed in via
                               '%s' which must
                               be present as in
                               the example
                               below. The
                               command is passed
                               securely so shell
                               features like
                               expansion and
                               pipes won't work.
- name: RHEV/oVirt automation
  action: rhevm
      boot_order             # This option uses complex arguments and is a list
                               of items that
                               specify the
                               bootorder.
      cd_drive               # The CD you wish to have mounted on the VM when
                               `state = 'CD''.
      cluster                # The rhev/ovirt cluster in which you want you VM
                               to start.
      cpu_share              # This parameter is used to configure the cpu
                               share.
      datacenter             # The rhev/ovirt datacenter in which you want you
                               VM to start.
      del_prot               # This option sets the delete protection checkbox.
      disks                  # This option uses complex arguments and is a list
                               of disks with the
                               options name,
                               size and domain.
      ifaces                 # This option uses complex arguments and is a list
                               of interfaces
                               with the options
                               name and vlan.
      image                  # The template to use for the VM.
      insecure_api           # A boolean switch to make a secure or insecure
                               connection to the
                               server.
      mempol                 # The minimum amount of memory you wish to reserve
                               for this system.
      name                   # The name of the VM.
      osver                  # The operationsystem option in RHEV/oVirt.
      port                   # The port on which the API is reacheable.
      server                 # The name/ip of your RHEV-m/oVirt instance.
      state                  # This serves to create/remove/update or
                               powermanage your
                               VM.
      timeout                # The timeout you wish to define for power
                               actions. When
                               `state = 'up''
                               When `state =
                               'down'' When
                               `state =
                               'restarted''
      type                   # To define if the VM is a server or desktop.
      user                   # The user to authenticate with.
      vm_ha                  # To make your VM High Available.
      vmcpu                  # The number of CPUs you want in your VM.
      vmhost                 # The host you wish your VM to run on.
      vmmem                  # The amount of memory you want your VM to use (in
                               GB).
- name: Adds or removes Red Hat software channels
  action: rhn_channel
      name=                  # name of the software channel
      password=              # the user's password
      state                  # whether the channel should be present or not
      sysname=               # name of the system as it is known in
                               RHN/Satellite
      url=                   # The full url to the RHN/Satellite api
      user=                  # RHN/Satellite user
- name: Manage Red Hat Network registration using the `rhnreg_ks' command
  action: rhn_register
      activationkey          # supply an activation key for use with
                               registration
      channels               # Optionally specify a list of comma-separated
                               channels to
                               subscribe to upon
                               successful
                               registration.
      password               # Red Hat Network password
      profilename            # supply an profilename for use with registration
      server_url             # Specify an alternative Red Hat Network server
                               URL
      sslcacert              # supply a custom ssl CA certificate file for use
                               with registration
      state                  # whether to register (`present'), or unregister
                               (`absent') a
                               system
      systemorgid            # supply an organizational id for use with
                               registration
      username               # Red Hat Network username
- name: This module handles some common Riak operations
  action: riak
      command                # The command you would like to perform against
                               the cluster.
      config_dir             # The path to the riak configuration directory
      http_conn              # The ip address and port that is listening for
                               Riak HTTP queries
      target_node            # The target node for certain operations (join,
                               ping)
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
      wait_for_handoffs      # Number of seconds to wait for handoffs to
                               complete.
      wait_for_ring          # Number of seconds to wait for all nodes to agree
                               on the ring.
      wait_for_service       # Waits for a riak service to come online before
                               continuing.
- name: Send notifications to Rocket Chat
  action: rocketchat
      attachments            # Define a list of attachments.
      channel                # Channel to send the message to. If absent, the
                               message goes to
                               the channel
                               selected for the
                               `token' specifed
                               during the
                               creation of
                               webhook.
      color                  # Allow text to use default colors - use the
                               default of
                               'normal' to not
                               send a custom
                               color bar at the
                               start of the
                               message
      domain=                # The domain for your environment without
                               protocol. (i.e. `
                               subdomain.domain.
                               com or
                               chat.domain.tld')
      icon_emoji             # Emoji for the message sender. The representation
                               for the available
                               emojis can be got
                               from Rocket Chat.
                               (for example
                               :thumbsup:) (if
                               `icon_emoji' is
                               set, `icon_url'
                               will not be used)
      icon_url               # URL for the message sender's icon.
      link_names             # Automatically create links for channels and
                               usernames in
                               `msg'.
      msg                    # Message to be sent.
      protocol               # Specify the protocol used to send notification
                               messages before
                               the webhook url.
                               (i.e. http or
                               https)
      token=                 # Rocket Chat Incoming Webhook integration token.
                               This provides
                               authentication to
                               Rocket Chat's
                               Incoming webhook
                               for posting
                               messages.
      username               # This is the sender of the message.
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
- name: Notify Rollbar about app deployments
  action: rollbar_deployment
      comment                # Deploy comment (e.g. what is being deployed).
      environment=           # Name of the environment being deployed, e.g.
                               'production'.
      revision=              # Revision number/sha being deployed.
      rollbar_user           # Rollbar username of the user who deployed.
      token=                 # Your project access token.
      url                    # Optional URL to submit the notification to.
      user                   # User who deployed.
      validate_certs         # If `no', SSL certificates for the target url
                               will not be
                               validated. This
                               should only be
                               used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
- name: add or delete entries in Amazons Route53 DNS service
  action: route53
      alias                  # Indicates if this is an alias record.
      alias_evaluate_target_health   # Whether or not to evaluate an alias target
                               health. Useful
                               for aliases to
                               Elastic Load
                               Balancers.
      alias_hosted_zone_id   # The hosted zone identifier.
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      command=               # Specifies the action to take.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      failover               # Failover resource record sets only. Whether this
                               is the primary or
                               secondary
                               resource record
                               set. Allowed
                               values are
                               PRIMARY and
                               SECONDARY
      health_check           # Health check to associate with this record
      hosted_zone_id         # The Hosted Zone ID of the DNS zone to modify
      identifier             # Have to be specified for Weighted, latency-based
                               and failover
                               resource record
                               sets only. An
                               identifier that
                               differentiates
                               among multiple
                               resource record
                               sets that have
                               the same
                               combination of
                               DNS name and
                               type.
      overwrite              # Whether an existing record should be overwritten
                               on create if
                               values do not
                               match
      private_zone           # If set to true, the private zone matching the
                               requested name
                               within the domain
                               will be used if
                               there are both
                               public and
                               private zones.
                               The default is to
                               use the public
                               zone.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      record=                # The full DNS record to create or delete
      region                 # Latency-based resource record sets only Among
                               resource record
                               sets that have
                               the same
                               combination of
                               DNS name and
                               type, a value
                               that determines
                               which region this
                               should be
                               associated with
                               for the latency-
                               based routing
      retry_interval         # In the case that route53 is still servicing a
                               prior request,
                               this module will
                               wait and try
                               again after this
                               many seconds. If
                               you have many
                               domain names, the
                               default of 500
                               seconds may be
                               too long.
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      ttl                    # The TTL to give the new record
      type=                  # The type of DNS record to create
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
      value                  # The new value when creating a DNS record.
                               Multiple comma-
                               spaced values are
                               allowed for non-
                               alias records.
                               When deleting a
                               record all values
                               for the record
                               must be specified
                               or Route53 will
                               not delete it.
      vpc_id                 # When used in conjunction with private_zone:
                               true, this will
                               only modify
                               records in the
                               private hosted
                               zone attached to
                               this VPC. This
                               allows you to
                               have multiple
                               private hosted
                               zones, all with
                               the same name,
                               attached to
                               different VPCs.
      wait                   # Wait until the changes have been replicated to
                               all Amazon Route
                               53 DNS servers.
      wait_timeout           # How long to wait for the changes to be
                               replicated, in
                               seconds.
      weight                 # Weighted resource record sets only. Among
                               resource record
                               sets that have
                               the same
                               combination of
                               DNS name and
                               type, a value
                               that determines
                               what portion of
                               traffic for the
                               current resource
                               record set is
                               routed to the
                               associated
                               location.
      zone=                  # The DNS zone to modify
- name: Retrieves route53 details using AWS methods
  action: route53_facts
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      change_id              # The ID of the change batch request. The value
                               that you specify
                               here is the value
                               that ChangeResour
                               ceRecordSets
                               returned in the
                               Id element when
                               you submitted the
                               request.
      delegation_set_id      # The DNS Zone delegation set ID
      dns_name               # The first name in the lexicographic ordering of
                               domain names that
                               you want the
                               list_command to
                               start listing
                               from
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      health_check_id        # The ID of the health check
      health_check_method    # This is used in conjunction with query:
                               health_check. It
                               allows for
                               listing details,
                               counts or tags of
                               various health
                               check details.
      hosted_zone_id         # The Hosted Zone ID of the DNS zone
      hosted_zone_method     # This is used in conjunction with query:
                               hosted_zone. It
                               allows for
                               listing details,
                               counts or tags of
                               various hosted
                               zone details.
      max_items              # Maximum number of items to return for various
                               get/list requests
      next_marker            # Some requests such as list_command: hosted_zones
                               will return a
                               maximum number of
                               entries - EG 100.
                               If the number of
                               entries exceeds
                               this maximum
                               another request
                               can be sent using
                               the NextMarker
                               entry from the
                               first response to
                               get the next page
                               of results
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      query=                 # specifies the query action to take
      resource_id            # The ID/s of the specified resource/s
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      start_record_name      # The first name in the lexicographic ordering of
                               domain names that
                               you want the
                               list_command:
                               record_sets to
                               start listing
                               from
      type                   # The type of DNS record
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: add or delete health-checks in Amazons Route53 DNS service
  action: route53_health_check
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      failure_threshold=     # The number of consecutive health checks that an
                               endpoint must
                               pass or fail for
                               Amazon Route 53
                               to change the
                               current status of
                               the endpoint from
                               unhealthy to
                               healthy or vice
                               versa.
      fqdn                   # Domain name of the endpoint to check. Either
                               this or
                               `ip_address` has
                               to be provided.
                               When both are
                               given the `fqdn`
                               is used in the
                               `Host:` header of
                               the HTTP request.
      ip_address             # IP address of the end-point to check. Either
                               this or `fqdn`
                               has to be
                               provided.
      port                   # The port on the endpoint on which you want
                               Amazon Route 53
                               to perform health
                               checks. Required
                               for TCP checks.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      request_interval=      # The number of seconds between the time that
                               Amazon Route 53
                               gets a response
                               from your
                               endpoint and the
                               time that it
                               sends the next
                               health-check
                               request.
      resource_path          # The path that you want Amazon Route 53 to
                               request when
                               performing health
                               checks. The path
                               can be any value
                               for which your
                               endpoint will
                               return an HTTP
                               status code of
                               2xx or 3xx when
                               the endpoint is
                               healthy, for
                               example the file
                               /docs/route53
                               -health-
                               check.html.
                               Required for all
                               checks except
                               TCP. The path
                               must begin with a
                               / Maximum 255
                               characters.
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state=                 # Specifies the action to take.
      string_match           # If the check type is HTTP_STR_MATCH or
                               HTTP_STR_MATCH,
                               the string that
                               you want Amazon
                               Route 53 to
                               search for in the
                               response body
                               from the
                               specified
                               resource. If the
                               string appears in
                               the first 5120
                               bytes of the
                               response body,
                               Amazon Route 53
                               considers the
                               resource healthy.
      type=                  # The type of health check that you want to
                               create, which
                               indicates how
                               Amazon Route 53
                               determines
                               whether an
                               endpoint is
                               healthy.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: add or delete Route53 zones
  action: route53_zone
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      comment                # Comment associated with the zone
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state                  # whether or not the zone should exist or not
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
      vpc_id                 # The VPC ID the zone should be a part of (if this
                               is going to be a
                               private zone)
      vpc_region             # The VPC Region the zone should be a part of (if
                               this is going to
                               be a private
                               zone)
      zone=                  # The DNS zone record (eg: foo.com.)
- name: Adds or removes a gpg key from the rpm db
  action: rpm_key
      key=                   # Key that will be modified. Can be a url, a file,
                               or a keyid if the
                               key already
                               exists in the
                               database.
      state                  # If the key will be imported or removed from the
                               rpm db.
      validate_certs         # If `no' and the `key' is a url starting with
                               https, SSL
                               certificates will
                               not be validated.
                               This should only
                               be used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
- name: manage objects in S3.
  action: s3
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      bucket=                # Bucket name.
      dest                   # The destination file path when downloading an
                               object/key with a
                               GET operation.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      encrypt                # When set for PUT mode, asks for server-side
                               encryption
      expiration             # Time limit (in seconds) for the URL generated
                               and returned by
                               S3/Walrus when
                               performing a
                               mode=put or
                               mode=geturl
                               operation.
      headers                # Custom headers for PUT operation, as a
                               dictionary of
                               'key=value' and '
                               key=value,key=val
                               ue'.
      marker                 # Specifies the key to start with when using list
                               mode. Object keys
                               are returned in
                               alphabetical
                               order, starting
                               with key after
                               the marker in
                               order.
      max_keys               # Max number of results to return in list mode,
                               set this if you
                               want to retrieve
                               fewer than the
                               default 1000
                               keys.
      metadata               # Metadata for PUT operation, as a dictionary of
                               'key=value' and '
                               key=value,key=val
                               ue'.
      mode=                  # Switches the module behaviour between put
                               (upload), get
                               (download),
                               geturl (return
                               download url,
                               Ansible 1.3+),
                               getstr (download
                               object as string
                               (1.3+)), list
                               (list keys,
                               Ansible 2.0+),
                               create (bucket),
                               delete (bucket),
                               and delobj
                               (delete object,
                               Ansible 2.0+).
      object                 # Keyname of the object inside the bucket. Can be
                               used to create
                               "virtual
                               directories", see
                               examples.
      overwrite              # Force overwrite either locally on the filesystem
                               or remotely with
                               the object/key.
                               Used with PUT and
                               GET operations.
                               Boolean or one of
                               [always, never,
                               different], true
                               is equal to
                               'always' and
                               false is equal to
                               'never', new in
                               2.0
      permission             # This option lets the user set the canned
                               permissions on
                               the object/bucket
                               that are created.
                               The permissions
                               that can be set
                               are 'private',
                               'public-read',
                               'public-read-
                               write',
                               'authenticated-
                               read'. Multiple
                               permissions can
                               be specified as a
                               list.
      prefix                 # Limits the response to keys that begin with the
                               specified prefix
                               for list mode
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # AWS region to create the bucket in. If not set
                               then the value of
                               the AWS_REGION
                               and EC2_REGION
                               environment
                               variables are
                               checked, followed
                               by the aws_region
                               and ec2_region
                               settings in the
                               Boto config file.
                               If none of those
                               are set the
                               region defaults
                               to the S3
                               Location: US
                               Standard.  Prior
                               to ansible 1.8
                               this parameter
                               could be
                               specified but had
                               no effect.
      retries                # On recoverable failure, how many times to retry
                               before actually
                               failing.
      rgw                    # Enable Ceph RGW S3 support. This option requires
                               an explicit url
                               via s3_url.
      s3_url                 # S3 URL endpoint for usage with Ceph, Eucalypus,
                               fakes3, etc.
                               Otherwise assumes
                               AWS
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      src                    # The source file path when performing a PUT
                               operation.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
      version                # Version ID of the object inside the bucket. Can
                               be used to get a
                               specific version
                               of a file if
                               versioning is
                               enabled in the
                               target bucket.
- name: Manage S3 buckets in AWS, Ceph, Walrus and FakeS3
  action: s3_bucket
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      ceph                   # Enable API compatibility with Ceph. It takes
                               into account the
                               S3 API subset
                               working with Ceph
                               in order to
                               provide the same
                               module behaviour
                               where possible.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      force                  # When trying to delete a bucket, delete all keys
                               in the bucket
                               first (an s3
                               bucket must be
                               empty for a
                               successful
                               deletion)
      name=                  # Name of the s3 bucket
      policy                 # The JSON policy as a string.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      requester_pays         # With Requester Pays buckets, the requester
                               instead of the
                               bucket owner pays
                               the cost of the
                               request and the
                               data download
                               from the bucket.
      s3_url                 # S3 URL endpoint for usage with Ceph, Eucalypus,
                               fakes3, etc.
                               Otherwise assumes
                               AWS
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state                  # Create or remove the s3 bucket
      tags                   # tags dict to apply to bucket
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
      versioning             # Whether versioning is enabled or disabled (note
                               that once
                               versioning is
                               enabled, it can
                               only be
                               suspended)
- name: Manage s3 bucket lifecycle rules in AWS
  action: s3_lifecycle
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      expiration_date        # Indicates the lifetime of the objects that are
                               subject to the
                               rule by the date
                               they will expire.
                               The value must be
                               ISO-8601 format,
                               the time must be
                               midnight and a
                               GMT timezone must
                               be specified.
      expiration_days        # Indicates the lifetime, in days, of the objects
                               that are subject
                               to the rule. The
                               value must be a
                               non-zero positive
                               integer.
      name=                  # Name of the s3 bucket
      prefix                 # Prefix identifying one or more objects to which
                               the rule applies.
                               If no prefix is
                               specified, the
                               rule will apply
                               to the whole
                               bucket.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      rule_id                # Unique identifier for the rule. The value cannot
                               be longer than
                               255 characters. A
                               unique value for
                               the rule will be
                               generated if no
                               value is
                               provided.
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state                  # Create or remove the lifecycle rule
      status                 # If 'enabled', the rule is currently being
                               applied. If
                               'disabled', the
                               rule is not
                               currently being
                               applied.
      storage_class          # The storage class to transition to. Currently
                               there are two
                               supported values
                               - 'glacier' or
                               'standard_ia'.
                               The 'standard_ia'
                               class is only
                               being available
                               from Ansible
                               version 2.2.
      transition_date        # Indicates the lifetime of the objects that are
                               subject to the
                               rule by the date
                               they will
                               transition to a
                               different storage
                               class. The value
                               must be ISO-8601
                               format, the time
                               must be midnight
                               and a GMT
                               timezone must be
                               specified. If
                               transition_days
                               is not specified,
                               this parameter is
                               required.
      transition_days        # Indicates when, in days, an object transitions
                               to a different
                               storage class. If
                               transition_date
                               is not specified,
                               this parameter is
                               required.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: Manage logging facility of an s3 bucket in AWS
  action: s3_logging
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      name=                  # Name of the s3 bucket.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state                  # Enable or disable logging.
      target_bucket          # The bucket to log to. Required when
                               state=present.
      target_prefix          # The prefix that should be prepended to the
                               generated log
                               files written to
                               the
                               target_bucket.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: Configure an s3 bucket as a website
  action: s3_website
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      error_key              # The object key name to use when a 4XX class
                               error occurs. To
                               remove an error
                               key, set to None.
      name=                  # Name of the s3 bucket
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      redirect_all_requests   # Describes the redirect behavior for every
                               request to this
                               s3 bucket website
                               endpoint
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state                  # Add or remove s3 website configuration
      suffix                 # Suffix that is appended to a request that is for
                               a directory on
                               the website
                               endpoint (e.g. if
                               the suffix is
                               index.html and
                               you make a
                               request to sample
                               bucket/images/
                               the data that is
                               returned will be
                               for the object
                               with the key name
                               images/index.html
                               ). The suffix
                               must not include
                               a slash
                               character.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: Runs a local script on a remote node after transferring it
  action: script
      creates                # a filename, when it already exists, this step
                               will *not* be
                               run.
      free_form=             # path to the local script file followed by
                               optional
                               arguments.
      removes                # a filename, when it does not exist, this step
                               will *not* be
                               run.
- name: Toggles SELinux booleans.
  action: seboolean
      name=                  # Name of the boolean to configure
      persistent             # Set to `yes' if the boolean setting should
                               survive a reboot
      state=                 # Desired boolean value
- name: Manages SELinux file context mapping definitions
  action: sefcontext
      ftype                  # File type.
      reload                 # Reload SELinux policy after commit.
      selevel                # SELinux range for the specified target.
      setype=                # SELinux type for the specified target.
      seuser                 # SELinux user for the specified target.
      state                  # Desired boolean value.
      target=                # Target path (expression).
- name: Change policy and state of SELinux
  action: selinux
      conf                   # path to the SELinux configuration file, if non-
                               standard
      policy                 # name of the SELinux policy to use (example:
                               `targeted') will
                               be required if
                               state is not
                               `disabled'
      state=                 # The SELinux mode
- name: Change permissive domain in SELinux policy
  action: selinux_permissive
      domain=                # the domain that will be added or removed from
                               the list of
                               permissive
                               domains
      no_reload              # automatically reload the policy after a change
                               default is set to
                               'false' as that's
                               what most people
                               would want after
                               changing one
                               domain Note that
                               this doesn't work
                               on older version
                               of the library
                               (example EL 6),
                               the module will
                               silently ignore
                               it in this case
      permissive=            # indicate if the domain should or should not be
                               set as permissive
      store                  # name of the SELinux policy store to use
- name: Sends an email with the SendGrid API
  action: sendgrid
      api_key                # sendgrid API key to use instead of
                               username/password
      attachments            # a list of relative or explicit paths of files
                               you want to
                               attach (7MB limit
                               as per SendGrid
                               docs)
      bcc                    # a list of email addresses to bcc
      cc                     # a list of email addresses to cc
      from_address=          # the address in the "from" field for the email
      from_name              # the name you want to appear in the from field,
                               i.e 'John Doe'
      headers                # a dict to pass on as headers
      html_body              # whether the body is html content that should be
                               rendered
      password               # password that corresponds to the username Since
                               2.2 it is only
                               required if
                               api_key is not
                               supplied.
      subject=               # the desired subject for the email
      to_addresses=          # a list with one or more recipient email
                               addresses
      username               # username for logging into the SendGrid account.
                               Since 2.2 it is
                               only required if
                               api_key is not
                               supplied.
- name: Manage Sensu checks
  action: sensu_check
      aggregate              # Classifies the check as an aggregate check,
                               making it
                               available via the
                               aggregate API
      backup                 # Create a backup file (if yes), including the
                               timestamp
                               information so
                               you can get the
                               original file
                               back if you
                               somehow clobbered
                               it incorrectly.
      command=               # Path to the sensu check to run (not required
                               when
                               `state=absent')
      custom                 # A hash/dictionary of custom parameters for
                               mixing to the
                               configuration.
                               You can't rewrite
                               others module
                               parameters using
                               this
      dependencies           # Other checks this check depends on, if
                               dependencies
                               fail, handling of
                               this check will
                               be disabled
      handle                 # Whether the check should be handled or not
      handlers               # List of handlers to notify when the check fails
      high_flap_threshold    # The high threshhold for flap detection
      interval               # Check interval in seconds
      low_flap_threshold     # The low threshhold for flap detection
      metric                 # Whether the check is a metric
      name=                  # The name of the check This is the key that is
                               used to determine
                               whether a check
                               exists
      occurrences            # Number of event occurrences before the handler
                               should take
                               action
      path                   # Path to the json file of the check to be
                               added/removed.
                               Will be created
                               if it does not
                               exist (unless
                               `state=absent').
                               The parent
                               folders need to
                               exist when
                               `state=present',
                               otherwise an
                               error will be
                               thrown
      publish                # Whether the check should be scheduled at all.
                               You can still
                               issue it via the
                               sensu api
      refresh                # Number of seconds handlers should wait before
                               taking second
                               action
      source                 # The check source, used to create a JIT Sensu
                               client for an
                               external resource
                               (e.g. a network
                               switch).
      standalone             # Whether the check should be scheduled by the
                               sensu client or
                               server This
                               option obviates
                               the need for
                               specifying the
                               `subscribers'
                               option
      state                  # Whether the check should be present or not
      subdue_begin           # When to disable handling of check failures
      subdue_end             # When to enable handling of check failures
      subscribers            # List of subscribers/channels this check should
                               run for See
                               sensu_subscribers
                               to subscribe a
                               machine to a
                               channel
      timeout                # Timeout for the check
- name: Manage Sensu subscriptions
  action: sensu_subscription
      backup                 # Create a backup file (if yes), including the
                               timestamp
                               information so
                               you can get the
                               original file
                               back if you
                               somehow clobbered
                               it incorrectly.
      name=                  # The name of the channel
      path                   # Path to the subscriptions json file
      state                  # Whether the machine should subscribe or
                               unsubscribe from
                               the channel
- name: Manages SELinux network port type definitions
  action: seport
      ports=                 # Ports or port ranges, separated by a comma
      proto=                 # Protocol for the specified port.
      reload                 # Reload SELinux policy after commit.
      setype=                # SELinux type for the specified port.
      state=                 # Desired boolean value.
- name: Manage services.
  action: service
      arguments              # Additional arguments provided on the command
                               line
      enabled                # Whether the service should start on boot. *At
                               least one of
                               state and enabled
                               are required.*
      name=                  # Name of the service.
      pattern                # If the service does not respond to the status
                               command, name a
                               substring to look
                               for as would be
                               found in the
                               output of the
                               `ps' command as a
                               stand-in for a
                               status result.
                               If the string is
                               found, the
                               service will be
                               assumed to be
                               running.
      runlevel               # For OpenRC init scripts (ex: Gentoo) only.  The
                               runlevel that
                               this service
                               belongs to.
      sleep                  # If the service is being `restarted' then sleep
                               this many seconds
                               between the stop
                               and start
                               command. This
                               helps to
                               workaround badly
                               behaving init
                               scripts that exit
                               immediately after
                               signaling a
                               process to stop.
      state                  # `started'/`stopped' are idempotent actions that
                               will not run
                               commands unless
                               necessary.
                               `restarted' will
                               always bounce the
                               service.
                               `reloaded' will
                               always reload.
                               *At least one of
                               state and enabled
                               are required.*
      use                    # The service module actually uses system specific
                               modules, normally
                               through auto
                               detection, this
                               setting can force
                               a specific
                               module. Normally
                               it uses the value
                               of the 'ansible_s
                               ervice_mgr' fact
                               and falls back to
                               the old 'service'
                               module when none
                               matching is
                               found.
- name: Set host facts from a task
  action: set_fact
      key_value=             # The `set_fact' module takes key=value pairs as
                               variables to set
                               in the playbook
                               scope. Or
                               alternatively,
                               accepts complex
                               arguments using
                               the `args:'
                               statement.
- name: Gathers facts about remote hosts
  action: setup
      fact_path              # path used for local ansible facts (*.fact) -
                               files in this dir
                               will be run (if
                               executable) and
                               their results be
                               added to
                               ansible_local
                               facts if a file
                               is not executable
                               it is read. Check
                               notes for Windows
                               options. (from
                               2.1 on)
                               File/results
                               format can be
                               json or ini-
                               format
      filter                 # if supplied, only return facts that match this
                               shell-style
                               (fnmatch)
                               wildcard.
      gather_subset          # if supplied, restrict the additional facts
                               collected to the
                               given subset.
                               Possible values:
                               all, hardware,
                               network, virtual,
                               ohai, and facter
                               Can specify a
                               list of values to
                               specify a larger
                               subset. Values
                               can also be used
                               with an initial
                               `!' to specify
                               that that
                               specific subset
                               should not be
                               collected.  For
                               instance:
                               !hardware,
                               !network,
                               !virtual, !ohai,
                               !facter.  Note
                               that a few facts
                               are always
                               collected.  Use
                               the filter
                               parameter if you
                               do not want to
                               display those.
      gather_timeout         # Set the default timeout in seconds for
                               individual fact
                               gathering
- name: Execute commands in nodes.
  action: shell
      chdir                  # cd into this directory before running the
                               command
      creates                # a filename, when it already exists, this step
                               will *not* be
                               run.
      executable             # change the shell used to execute the command.
                               Should be an
                               absolute path to
                               the executable.
      free_form=             # The shell module takes a free form command to
                               run, as a string.
                               There's not an
                               actual option
                               named "free
                               form".  See the
                               examples!
      removes                # a filename, when it does not exist, this step
                               will *not* be
                               run.
      warn                   # if command warnings are on in ansible.cfg, do
                               not warn about
                               this particular
                               line if set to
                               no/false.
- name: create or cancel a virtual instance in SoftLayer
  action: sl_vm
      cpus=                  # Count of cpus to be assigned to new virtual
                               instance
      datacenter             # Datacenter for the virtual instance to be
                               deployed
      dedicated              # Falg to determine if the instance should be
                               deployed in
                               dedicated space
      disks=                 # List of disk sizes to be assigned to new virtual
                               instance
      domain                 # Domain name to be provided to a virtual instance
      hostname               # Hostname to be provided to a virtual instance
      hourly                 # Flag to determine if the instance should be
                               hourly billed
      image_id               # Image Template to be used for new virtual
                               instance
      instance_id            # Instance Id of the virtual instance to perform
                               action option
      local_disk             # Flag to determine if local disk should be used
                               for the new
                               instance
      memory=                # Amount of memory to be assigned to new virtual
                               instance
      nic_speed              # NIC Speed to be assigned to new virtual instance
      os_code                # OS Code to be used for new virtual instance
      post_uri               # URL of a post provisioning script ot be loaded
                               and exectued on
                               virtual instance
      private                # Flag to determine if the instance should be
                               private only
      private_vlan           # VLAN by its Id to be assigned to the private NIC
      public_vlan            # VLAN by its Id to be assigned to the public NIC
      ssh_keys               # List of ssh keys by their Id to be assigned to a
                               virtual instance
      state                  # Create, or cancel a virtual instance. Specify
                               "present" for
                               create, "absent"
                               to cancel.
      tags                   # Tag or list of tags to be provided to a virtual
                               instance
      wait                   # Flag used to wait for active status before
                               returning
      wait_timeout           # time in seconds before wait returns
- name: Send Slack notifications
  action: slack
      attachments            # Define a list of attachments. This list mirrors
                               the Slack JSON
                               API. For more
                               information, see 
                               https://api.slack
                               .com/docs/attachm
                               ents
      channel                # Channel to send the message to. If absent, the
                               message goes to
                               the channel
                               selected for the
                               `token'.
      color                  # Allow text to use default colors - use the
                               default of
                               'normal' to not
                               send a custom
                               color bar at the
                               start of the
                               message
      domain                 # Slack (sub)domain for your environment without
                               protocol. (i.e. `
                               future500.slack.c
                               om') In 1.8 and
                               beyond, this is
                               deprecated and
                               may be ignored.
                               See token
                               documentation for
                               information.
      icon_emoji             # Emoji for the message sender. See Slack
                               documentation for
                               options. (if
                               `icon_emoji' is
                               set, `icon_url'
                               will not be used)
      icon_url               # Url for the message sender's icon (default
                               `https://www.ansi
                               ble.com/favicon.i
                               co')
      link_names             # Automatically create links for channels and
                               usernames in
                               `msg'.
      msg                    # Message to send.
      parse                  # Setting for the message parser at Slack
      token=                 # Slack integration token.  This authenticates you
                               to the slack
                               service. Prior to
                               1.8, a token
                               looked like `3Ffe
                               373sfhRE6y42Fg3rv
                               f4GlK'.  In 1.8
                               and above,
                               ansible adapts to
                               the new slack API
                               where tokens look
                               like `G922VJP24/D
                               921DW937/3Ffe373s
                               fhRE6y42Fg3rvf4Gl
                               K'.  If tokens
                               are in the new
                               format then slack
                               will ignore any
                               value of domain.
                               If the token is
                               in the old format
                               the domain is
                               required.
                               Ansible has no
                               control of when
                               slack will get
                               rid of the old
                               API.  When slack
                               does that the old
                               format will stop
                               working.
      username               # This is the sender of the message.
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be used on
                               personally
                               controlled sites
                               using self-signed
                               certificates.
- name: Package manager for Slackware >= 12.2
  action: slackpkg
      name=                  # name of package to install/remove
      state                  # state of the package, you can use "installed" as
                               an alias for
                               `present' and
                               removed as one
                               for c(absent).
      update_cache           # update the package database first
- name: Slurps a file from remote nodes
  action: slurp
      src=                   # The file on the remote system to fetch. This
                               `must' be a file,
                               not a directory.
- name: Get SmartOS image details.
  action: smartos_image_facts
      filters                # Criteria for selecting image. Can be any value
                               from image
                               manifest and
                               'published_date',
                               'published',
                               'source',
                               'clones', and
                               'size'. More
                               informaton can be
                               found at https://
                               smartos.org/man/1
                               m/imgadm under
                               'imgadm list'.
- name: Retrieve facts for a device using SNMP.
  action: snmp_facts
      authkey                # Authentication key, required if version is v3
      community              # The SNMP community string, required if version
                               is v2/v2c
      host=                  # Set to target snmp server (normally
                               {{inventory_hostn
                               ame}})
      integrity              # Hashing algoritm, required if version is v3
      level                  # Authentication level, required if version is v3
      privacy                # Encryption algoritm, required if level is
                               authPriv
      privkey                # Encryption key, required if version is authPriv
      username               # Username for SNMPv3, required if version is v3
      version=               # SNMP Version to use, v2/v2c or v3
- name: Send Amazon Simple Notification Service (SNS) messages
  action: sns
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_KEY
                               environment
                               variable is used.
      email                  # Message to send to email-only subscription
      http                   # Message to send to HTTP-only subscription
      https                  # Message to send to HTTPS-only subscription
      msg=                   # Default message to send.
      region                 # The AWS region to use. If not specified then the
                               value of the
                               EC2_REGION
                               environment
                               variable, if any,
                               is used.
      sms                    # Message to send to SMS-only subscription
      sqs                    # Message to send to SQS-only subscription
      subject                # Subject line for email delivery.
      topic=                 # The topic you want to publish to.
- name: Manages AWS SNS topics and subscriptions
  action: sns_topic
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      delivery_policy        # Delivery policy to apply to the SNS topic
      display_name           # Display name of the topic
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      name=                  # The name or ARN of the SNS topic to converge
      policy                 # Policy to apply to the SNS topic
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      purge_subscriptions    # Whether to purge any subscriptions not listed
                               here. NOTE: AWS
                               does not allow
                               you to purge any 
                               PendingConfirmati
                               on subscriptions,
                               so if any exist
                               and would be
                               purged, they are
                               silently skipped.
                               This means that
                               somebody could
                               come back later
                               and confirm the
                               subscription.
                               Sorry. Blame
                               Amazon.
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state                  # Whether to create or destroy an SNS topic
      subscriptions          # List of subscriptions to apply to the topic.
                               Note that AWS
                               requires
                               subscriptions to
                               be confirmed, so
                               you will need to
                               confirm any new
                               subscriptions.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: Manage Solaris zones
  action: solaris_zone
      attach_options         # Extra options to the zoneadm attach command. For
                               example, this can
                               be used to
                               specify whether a
                               minimum or full
                               update of
                               packages is
                               required and if
                               any packages need
                               to be deleted.
                               For valid values,
                               see zoneadm(1M)
      config                 # The zonecfg configuration commands for this
                               zone. See
                               zonecfg(1M) for
                               the valid options
                               and syntax.
                               Typically this is
                               a list of options
                               separated by
                               semi-colons or
                               new lines, e.g.
                               "set auto-
                               boot=true;add
                               net;set
                               physical=bge0;set
                               address=10.1.1.1;
                               end"
      create_options         # Extra options to the zonecfg(1M) create command.
      install_options        # Extra options to the zoneadm(1M) install
                               command. To
                               automate Solaris
                               11 zone creation,
                               use this to
                               specify the
                               profile XML file,
                               e.g. install_opti
                               ons="-c
                               sc_profile.xml"
      name=                  # Zone name.
      path                   # The path where the zone will be created. This is
                               required when the
                               zone is created,
                               but not used
                               otherwise.
      root_password          # The password hash for the root account. If not
                               specified, the
                               zone's root
                               account will not
                               have a password.
      sparse                 # Whether to create a sparse (`true') or whole
                               root (`false')
                               zone.
      state=                 # `present', configure and install the zone.
                               `installed',
                               synonym for
                               `present'.
                               `running', if the
                               zone already
                               exists, boot it,
                               otherwise,
                               configure and
                               install the zone
                               first, then boot
                               it. `started',
                               synonym for
                               `running'.
                               `stopped',
                               shutdown a zone.
                               `absent', destroy
                               the zone.
                               `configured',
                               configure the
                               ready so that
                               it's to be
                               attached.
                               `attached',
                               attach a zone,
                               but do not boot
                               it. `detached',
                               shutdown and
                               detach a zone
      timeout                # Timeout, in seconds, for zone to boot.
- name: Creates or deletes AWS SQS queues.
  action: sqs_queue
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      default_visibility_timeout   # The default visibility timeout in seconds.
      delivery_delay         # The delivery delay in seconds.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      maximum_message_size   # The maximum message size in bytes.
      message_retention_period   # The message retention period in seconds.
      name=                  # Name of the queue.
      policy                 # The json dict policy to attach to queue
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      receive_message_wait_time   # The receive message wait time in seconds.
      redrive_policy         # json dict with the redrive_policy (see example)
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      state                  # Create or delete the queue
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: Run commands on remote devices running Nokia SR OS
  action: sros_command
      commands=              # List of commands to send to the remote SR OS
                               device over the
                               configured
                               provider. The
                               resulting output
                               from the command
                               is returned. If
                               the `wait_for'
                               argument is
                               provided, the
                               module is not
                               returned until
                               the condition is
                               satisfied or the
                               number of retries
                               has expired.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      interval               # Configures the interval in seconds to wait
                               between retries
                               of the command.
                               If the command
                               does not pass the
                               specified
                               conditions, the
                               interval
                               indicates how
                               long to wait
                               before trying the
                               command again.
      match                  # The `match' argument is used in conjunction with
                               the `wait_for'
                               argument to
                               specify the match
                               policy.  Valid
                               values are `all'
                               or `any'.  If the
                               value is set to
                               `all' then all
                               conditionals in
                               the wait_for must
                               be satisfied.  If
                               the value is set
                               to `any' then
                               only one of the
                               values must be
                               satisfied.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.   The
                               value of
                               `password' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_PASSWORD will
                               be used instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               The port value
                               will default to
                               the well known
                               SSH port of 22
      provider               # Convenience argument that allows connection
                               arguments to be
                               passed as a dict
                               object.  These
                               include `host',
                               `port',
                               `username',
                               `password',
                               `ssh_keyfile',
                               and `timeout'.
                               All constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      retries                # Specifies the number of retries a command should
                               by tried before
                               it is considered
                               failed. The
                               command is run on
                               the target device
                               every retry and
                               evaluated against
                               the `wait_for'
                               conditions.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               The value of
                               `ssh_keyfile' is
                               the path to the
                               key used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_SSH_KEYFILE
                               will be used
                               instead.
      timeout                # Specifies idle timeout for the connection.
                               Useful if the
                               console freezes
                               before
                               continuing. For
                               example when
                               saving
                               configurations.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_USERNAME will
                               be used instead.
      wait_for               # List of conditions to evaluate against the
                               output of the
                               command. The task
                               will wait for
                               each condition to
                               be true before
                               moving forward.
                               If the
                               conditional is
                               not true within
                               the configured
                               number of
                               retries, the task
                               fails. See
                               examples.
- name: Manage Nokia SR OS device configuration
  action: sros_config
      after                  # The ordered set of commands to append to the end
                               of the command
                               stack if a change
                               needs to be made.
                               Just like with
                               `before' this
                               allows the
                               playbook designer
                               to append a set
                               of commands to be
                               executed after
                               the command set.
      backup                 # This argument will cause the module to create a
                               full backup of
                               the current
                               `running-config'
                               from the remote
                               device before any
                               changes are made.
                               The backup file
                               is written to the
                               `backup' folder
                               in the playbook
                               root directory.
                               If the directory
                               does not exist,
                               it is created.
      before                 # The ordered set of commands to push on to the
                               command stack if
                               a change needs to
                               be made.  This
                               allows the
                               playbook designer
                               the opportunity
                               to perform
                               configuration
                               commands prior to
                               pushing any
                               changes without
                               affecting how the
                               set of commands
                               are matched
                               against the
                               system.
      config                 # The `config' argument allows the playbook
                               designer to
                               supply the base
                               configuration to
                               be used to
                               validate
                               configuration
                               changes
                               necessary.  If
                               this argument is
                               provided, the
                               module will not
                               download the
                               running-config
                               from the remote
                               node.
      defaults               # This argument specifies whether or not to
                               collect all
                               defaults when
                               getting the
                               remote device
                               running config.
                               When enabled, the
                               module will get
                               the current
                               config by issuing
                               the command `show
                               running-config
                               all'.
      force                  # The force argument instructs the module to not
                               consider the
                               current devices
                               running-config.
                               When set to true,
                               this will cause
                               the module to
                               push the contents
                               of `src' into the
                               device without
                               first checking if
                               already
                               configured. Note
                               this argument
                               should be
                               considered
                               deprecated.  To
                               achieve the
                               equivalent, set
                               the `match=none'
                               which is
                               idempotent.  This
                               argument will be
                               removed in a
                               future release.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      lines                  # The ordered set of commands that should be
                               configured in the
                               section.  The
                               commands must be
                               the exact same
                               commands as found
                               in the device
                               running-config.
                               Be sure to note
                               the configuration
                               command syntax as
                               some commands are
                               automatically
                               modified by the
                               device config
                               parser.
      match                  # Instructs the module on the way to perform the
                               matching of the
                               set of commands
                               against the
                               current device
                               config.  If match
                               is set to `line',
                               commands are
                               matched line by
                               line.  If match
                               is set to
                               `strict', command
                               lines are matched
                               with respect to
                               position.  If
                               match is set to
                               `exact', command
                               lines must be an
                               equal match.
                               Finally, if match
                               is set to `none',
                               the module will
                               not attempt to
                               compare the
                               source
                               configuration
                               with the running
                               configuration on
                               the remote
                               device.
      parents                # The ordered set of parents that uniquely
                               identify the
                               section the
                               commands should
                               be checked
                               against.  If the
                               parents argument
                               is omitted, the
                               commands are
                               checked against
                               the set of top
                               level or global
                               commands.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.   The
                               value of
                               `password' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_PASSWORD will
                               be used instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               The port value
                               will default to
                               the well known
                               SSH port of 22
      provider               # Convenience argument that allows connection
                               arguments to be
                               passed as a dict
                               object.  These
                               include `host',
                               `port',
                               `username',
                               `password',
                               `ssh_keyfile',
                               and `timeout'.
                               All constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      replace                # Instructs the module on the way to perform the
                               configuration on
                               the device.  If
                               the replace
                               argument is set
                               to `line' then
                               the modified
                               lines are pushed
                               to the device in
                               configuration
                               mode.  If the
                               replace argument
                               is set to `block'
                               then the entire
                               command block is
                               pushed to the
                               device in
                               configuration
                               mode if any line
                               is not correct.
      save                   # The `save' argument instructs the module to save
                               the running-
                               config to the
                               startup-config at
                               the conclusion of
                               the module
                               running.  If
                               check mode is
                               specified, this
                               argument is
                               ignored.
      src                    # Specifies the source path to the file that
                               contains the
                               configuration or
                               configuration
                               template to load.
                               The path to the
                               source file can
                               either be the
                               full path on the
                               Ansible control
                               host or a
                               relative path
                               from the playbook
                               or role root
                               directory.  This
                               argument is
                               mutually
                               exclusive with
                               `lines'.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               The value of
                               `ssh_keyfile' is
                               the path to the
                               key used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_SSH_KEYFILE
                               will be used
                               instead.
      timeout                # Specifies idle timeout for the connection.
                               Useful if the
                               console freezes
                               before
                               continuing. For
                               example when
                               saving
                               configurations.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_USERNAME will
                               be used instead.
- name: Configure Nokia SR OS rollback
  action: sros_rollback
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      local_max_checkpoints   # The `local_max_checkpoints' argument configures
                               the maximum
                               number of
                               rollback files
                               that can be saved
                               on the devices
                               local compact
                               flash.  Valid
                               values for this
                               argument are in
                               the range of 1 to
                               50
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.   The
                               value of
                               `password' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_PASSWORD will
                               be used instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
                               The port value
                               will default to
                               the well known
                               SSH port of 22
      provider               # Convenience argument that allows connection
                               arguments to be
                               passed as a dict
                               object.  These
                               include `host',
                               `port',
                               `username',
                               `password',
                               `ssh_keyfile',
                               and `timeout'.
                               All constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      remote_max_checkpoints   # The `remote_max_checkpoints' argument configures
                               the maximum
                               number of
                               rollback files
                               that can be
                               transfered and
                               saved to a remote
                               location.  Valid
                               values for this
                               argument are in
                               the range of 1 to
                               50
      rescue_location        # The `rescue_location' specifies the location of
                               the rescue file.
                               This argument
                               supports any
                               valid local or
                               remote URL as
                               specified in SR
                               OS
      rollback_location      # The `rollback_location' specifies the location
                               and filename of
                               the rollback
                               checkpoint files.
                               This argument
                               supports any
                               valid local or
                               remote URL as
                               specified in SR
                               OS
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               The value of
                               `ssh_keyfile' is
                               the path to the
                               key used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_SSH_KEYFILE
                               will be used
                               instead.
      state                  # The `state' argument specifies the state of the
                               configuration
                               entries in the
                               devices active
                               configuration.
                               When the state
                               value is set to
                               `true' the
                               configuration is
                               present in the
                               devices active
                               configuration.
                               When the state
                               value is set to
                               `false' the
                               configuration
                               values are
                               removed from the
                               devices active
                               configuration.
      timeout                # Specifies idle timeout for the connection.
                               Useful if the
                               console freezes
                               before
                               continuing. For
                               example when
                               saving
                               configurations.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable ANSIBLE_
                               NET_USERNAME will
                               be used instead.
- name: Send code deploy and annotation events to stackdriver
  action: stackdriver
      annotated_by           # The person or robot who the annotation should be
                               attributed to.
      deployed_by            # The person or robot responsible for deploying
                               the code
      deployed_to            # The environment code was deployed to. (ie:
                               development,
                               staging,
                               production)
      event                  # The type of event to send, either annotation or
                               deploy
      event_epoch            # Unix timestamp of where the event should appear
                               in the timeline,
                               defaults to now.
                               Be careful with
                               this.
      instance_id            # id of an EC2 instance that this event should be
                               attached to,
                               which will limit
                               the contexts
                               where this event
                               is shown
      key=                   # API key.
      level                  # one of INFO/WARN/ERROR, defaults to INFO if not
                               supplied.  May
                               affect display.
      msg                    # The contents of the annotation message, in plain
                               text.  Limited to
                               256 characters.
                               Required for
                               annotation.
      repository             # The repository (or project) deployed
      revision_id            # The revision of the code that was deployed.
                               Required for
                               deploy events
- name: retrieve file or file system status
  action: stat
      checksum_algorithm     # Algorithm to determine checksum of file. Will
                               throw an error if
                               the host is
                               unable to use
                               specified
                               algorithm.
      follow                 # Whether to follow symlinks
      get_checksum           # Whether to return a checksum of the file
                               (default sha1)
      get_md5                # Whether to return the md5 sum of the file.  Will
                               return None if
                               we're unable to
                               use md5 (Common
                               for FIPS-140
                               compliant
                               systems)
      mime                   # Use file magic and return data about the nature
                               of the file. this
                               uses the 'file'
                               utility found on
                               most Linux/Unix
                               systems. This
                               will add both
                               `mime_type` and
                               'charset' fields
                               to the return, if
                               possible.
      path=                  # The full path of the file/object to get the
                               facts of
- name: Create maintenance windows for your status.io dashboard
  action: statusio_maintenance
      all_infrastructure_affected   # If it affects all components and containers
      api_id=                # Your unique API ID from status.io
      api_key=               # Your unique API Key from status.io
      automation             # Automatically start and end the maintenance
                               window
      components             # The given name of your component (server name)
      containers             # The given name of your container (data center)
      desc                   # Message describing the maintenance window
      maintenance_id         # The maintenance id number when deleting a
                               maintenance
                               window
      maintenance_notify_1_hr   # Notify subscribers 1 hour before maintenance
                               start time
      maintenance_notify_24_hr   # Notify subscribers 24 hours before maintenance
                               start time
      maintenance_notify_72_hr   # Notify subscribers 72 hours before maintenance
                               start time
      maintenance_notify_now   # Notify subscribers now
      minutes                # The length of time in UTC that the maintenance
                               will run
                               (starting from
                               playbook runtime)
      start_date             # Date maintenance is expected to start
                               (Month/Day/Year)
                               (UTC) End Date is
                               worked out from
                               start_date +
                               minutes
      start_time             # Time maintenance is expected to start
                               (Hour:Minutes)
                               (UTC) End Time is
                               worked out from
                               start_time +
                               minutes
      state                  # Desired state of the package.
      statuspage=            # Your unique StatusPage ID from status.io
      title                  # A descriptive title for the maintenance window
      url                    # Status.io API URL. A private apiary can be used
                               instead.
- name: Assume a role using AWS Security Token Service and obtain temporary credentials
  action: sts_assume_role
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      duration_seconds       # The duration, in seconds, of the role session.
                               The value can
                               range from 900
                               seconds (15
                               minutes) to 3600
                               seconds (1 hour).
                               By default, the
                               value is set to
                               3600 seconds.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      external_id            # A unique identifier that is used by third
                               parties to assume
                               a role in their
                               customers'
                               accounts.
      mfa_serial_number      # he identification number of the MFA device that
                               is associated
                               with the user who
                               is making the
                               AssumeRole call.
      mfa_token              # The value provided by the MFA device, if the
                               trust policy of
                               the role being
                               assumed requires
                               MFA.
      policy                 # Supplemental policy to use in addition to
                               assumed role's
                               policies.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      role_arn=              # The Amazon Resource Name (ARN) of the role that
                               the caller is
                               assuming (http://
                               docs.aws.amazon.c
                               om/IAM/latest/Use
                               rGuide/Using_Iden
                               tifiers.html#Iden
                               tifiers_ARNs)
      role_session_name=     # Name of the role's session - will be used by
                               CloudTrail
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: Obtain a session token from the AWS Security Token Service
  action: sts_session_token
      aws_access_key         # AWS access key. If not set then the value of the
                               AWS_ACCESS_KEY_ID
                               , AWS_ACCESS_KEY
                               or EC2_ACCESS_KEY
                               environment
                               variable is used.
      aws_secret_key         # AWS secret key. If not set then the value of the
                               AWS_SECRET_ACCESS
                               _KEY,
                               AWS_SECRET_KEY,
                               or EC2_SECRET_KEY
                               environment
                               variable is used.
      duration_seconds       # The duration, in seconds, of the session token.
                               See http://docs.a
                               ws.amazon.com/STS
                               /latest/APIRefere
                               nce/API_GetSessio
                               nToken.html#API_G
                               etSessionToken_Re
                               questParameters
                               for acceptable
                               and default
                               values.
      ec2_url                # Url to use to connect to EC2 or your Eucalyptus
                               cloud (by default
                               the module will
                               use EC2
                               endpoints).
                               Ignored for
                               modules where
                               region is
                               required.  Must
                               be specified for
                               all other modules
                               if region is not
                               used. If not set
                               then the value of
                               the EC2_URL
                               environment
                               variable, if any,
                               is used.
      mfa_serial_number      # The identification number of the MFA device that
                               is associated
                               with the user who
                               is making the
                               GetSessionToken
                               call.
      mfa_token              # The value provided by the MFA device, if the
                               trust policy of
                               the user requires
                               MFA.
      profile                # uses a boto profile. Only works with boto >=
                               2.24.0
      region                 # The AWS region to use. If not specified then the
                               value of the
                               AWS_REGION or
                               EC2_REGION
                               environment
                               variable, if any,
                               is used. See http
                               ://docs.aws.amazo
                               n.com/general/lat
                               est/gr/rande.html
                               #ec2_region
      security_token         # AWS STS security token. If not set then the
                               value of the AWS_
                               SECURITY_TOKEN or
                               EC2_SECURITY_TOKE
                               N environment
                               variable is used.
      validate_certs         # When set to "no", SSL certificates will not be
                               validated for
                               boto versions >=
                               2.6.0.
- name: Deploys a subversion repository.
  action: subversion
      checkout               # If no, do not check out the repository if it
                               does not exist
                               locally
      dest=                  # Absolute path where the repository should be
                               deployed.
      executable             # Path to svn executable to use. If not supplied,
                               the normal
                               mechanism for
                               resolving binary
                               paths will be
                               used.
      export                 # If `yes', do export instead of checkout/update.
      force                  # If `yes', modified files will be discarded. If
                               `no', module will
                               fail if it
                               encounters
                               modified files.
                               Prior to 1.9 the
                               default was
                               `yes`.
      password               # --password parameter passed to svn.
      repo=                  # The subversion URL to the repository.
      revision               # Specific revision to checkout.
      switch                 # If `no', do not call svn switch before update.
      update                 # If no, do not retrieve new revisions from the
                               origin repository
      username               # --username parameter passed to svn.
- name: Manage the state of a program or group of programs running via supervisord
  action: supervisorctl
      config                 # The supervisor configuration file path
      name=                  # The name of the supervisord program or group to
                               manage. The name
                               will be taken as
                               group name when
                               it ends with a
                               colon `:' Group
                               support is only
                               available in
                               Ansible version
                               1.6 or later.
      password               # password to use for authentication
      server_url             # URL on which supervisord server is listening
      state=                 # The desired state of program/group.
      supervisorctl_path     # path to supervisorctl executable
      username               # username to use for authentication
- name: Manage daemontools services.
  action: svc
      downed                 # Should a 'down' file exist or not, if it exists
                               it disables auto
                               startup. defaults
                               to no. Downed
                               does not imply
                               stopped.
      enabled                # Wheater the service is enabled or not, if
                               disabled it also
                               implies stopped.
                               Make note that a
                               service can be
                               enabled and
                               downed (no auto
                               restart).
      name=                  # Name of the service to manage.
      service_dir            # directory svscan watches for services
      service_src            # directory where services are defined, the source
                               of symlinks to
                               service_dir.
      state                  # `Started'/`stopped' are idempotent actions that
                               will not run
                               commands unless
                               necessary.
                               `restarted' will
                               always bounce the
                               svc (svc -t) and
                               `killed' will
                               always bounce the
                               svc (svc -k).
                               `reloaded' will
                               send a sigusr1
                               (svc -1). `once'
                               will run a
                               normally downed
                               svc once (svc
                               -o), not really
                               an idempotent
                               operation.
- name: Manage Solaris SVR4 packages
  action: svr4pkg
      category               # Install/Remove category instead of a single
                               package.
      name=                  # Package name, e.g. `SUNWcsr'
      proxy                  # HTTP[s] proxy to be used if `src' is a URL.
      response_file          # Specifies the location of a response file to be
                               used if package
                               expects input on
                               install. (added
                               in Ansible 1.4)
      src                    # Specifies the location to install the package
                               from. Required
                               when
                               `state=present'.
                               Can be any path
                               acceptable to the
                               `pkgadd'
                               command's `-d'
                               option. e.g.:
                               `somefile.pkg',
                               `/dir/with/pkgs',
                               `http:/server/myp
                               kgs.pkg'. If
                               using a file or
                               directory, they
                               must already be
                               accessible by the
                               host. See the
                               [copy] module for
                               a way to get them
                               there.
      state=                 # Whether to install (`present'), or remove
                               (`absent') a
                               package. If the
                               package is to be
                               installed, then
                               `src' is
                               required. The
                               SVR4 package
                               system doesn't
                               provide an
                               upgrade
                               operation. You
                               need to uninstall
                               the old, then
                               install the new
                               package.
      zone                   # Whether to install the package only in the
                               current zone, or
                               install it into
                               all zones. The
                               installation into
                               all zones works
                               only if you are
                               working with the
                               global zone.
- name: Manage packages with swdepot package manager (HP-UX)
  action: swdepot
      depot                  # The source repository from which install or
                               upgrade a
                               package.
      name=                  # package name.
      state=                 # whether to install (`present', `latest'), or
                               remove (`absent')
                               a package.
- name: Uses rsync to make synchronizing file paths in your playbooks quick and easy.
  action: synchronize
      archive                # Mirrors the rsync archive flag, enables
                               recursive, links,
                               perms, times,
                               owner, group
                               flags and -D.
      checksum               # Skip based on checksum, rather than mod-time &
                               size; Note that
                               that "archive"
                               option is still
                               enabled by
                               default - the
                               "checksum" option
                               will not disable
                               it.
      compress               # Compress file data during the transfer. In most
                               cases, leave this
                               enabled unless it
                               causes problems.
      copy_links             # Copy symlinks as the item that they point to
                               (the referent) is
                               copied, rather
                               than the symlink.
      delete                 # Delete files in `dest' that don't exist (after
                               transfer, not
                               before) in the
                               `src' path. This
                               option requires
                               `recursive=yes'.
      dest=                  # Path on the destination host that will be
                               synchronized from
                               the source; The
                               path can be
                               absolute or
                               relative.
      dest_port              # Port number for ssh on the destination host.
                               Prior to ansible
                               2.0, the
                               ansible_ssh_port
                               inventory var
                               took precedence
                               over this value.
      dirs                   # Transfer directories without recursing
      existing_only          # Skip creating new files on receiver.
      group                  # Preserve group
      links                  # Copy symlinks as symlinks.
      mode                   # Specify the direction of the synchronization. In
                               push mode the
                               localhost or
                               delegate is the
                               source; In pull
                               mode the remote
                               host in context
                               is the source.
      owner                  # Preserve owner (super user only)
      partial                # Tells rsync to keep the partial file which
                               should make a
                               subsequent
                               transfer of the
                               rest of the file
                               much faster.
      perms                  # Preserve permissions.
      recursive              # Recurse into directories.
      rsync_opts             # Specify additional rsync options by passing in
                               an array.
      rsync_path             # Specify the rsync command to run on the remote
                               host. See
                               `--rsync-path' on
                               the rsync man
                               page.
      rsync_timeout          # Specify a --timeout for the rsync command in
                               seconds.
      set_remote_user        # put user@ for the remote paths. If you have a
                               custom ssh config
                               to define the
                               remote user for a
                               host that does
                               not match the
                               inventory user,
                               you should set
                               this parameter to
                               "no".
      src=                   # Path on the source host that will be
                               synchronized to
                               the destination;
                               The path can be
                               absolute or
                               relative.
      times                  # Preserve modification times
      use_ssh_args           # Use the ssh_args specified in ansible.cfg
      verify_host            # Verify destination host key.
- name: Manage entries in sysctl.conf.
  action: sysctl
      ignoreerrors           # Use this option to ignore errors about unknown
                               keys.
      name=                  # The dot-separated path (aka `key') specifying
                               the sysctl
                               variable.
      reload                 # If `yes', performs a `/sbin/sysctl -p' if the
                               `sysctl_file' is
                               updated. If `no',
                               does not reload
                               `sysctl' even if
                               the `sysctl_file'
                               is updated.
      state                  # Whether the entry should be present or absent in
                               the sysctl file.
      sysctl_file            # Specifies the absolute path to `sysctl.conf', if
                               not `/etc/sysctl.
                               conf'.
      sysctl_set             # Verify token value with the sysctl command and
                               set with -w if
                               necessary
      value                  # Desired value of the sysctl key.
- name: Manage services.
  action: systemd
      daemon_reload          # run daemon-reload before doing any other
                               operations, to
                               make sure systemd
                               has read any
                               changes.
      enabled                # Whether the service should start on boot. *At
                               least one of
                               state and enabled
                               are required.*
      masked                 # Whether the unit should be masked or not, a
                               masked unit is
                               impossible to
                               start.
      name=                  # Name of the service.
      state                  # `started'/`stopped' are idempotent actions that
                               will not run
                               commands unless
                               necessary.
                               `restarted' will
                               always bounce the
                               service.
                               `reloaded' will
                               always reload.
      user                   # run systemctl talking to the service manager of
                               the calling user,
                               rather than the
                               service manager
                               of the system.
- name: Creates/deletes an issue in a Taiga Project Management Platform
  action: taiga_issue
      attachment             # Path to a file to be attached to the issue.
      attachment_description   # A string describing the file to be attached to
                               the issue.
      description            # The issue description.
      issue_type=            # The issue type. Must exist previously.
      priority               # The issue priority. Must exist previously.
      project=               # Name of the project containing the issue. Must
                               exist previously.
      severity               # The issue severity. Must exist previously.
      state                  # Whether the issue should be present or not.
      status                 # The issue status. Must exist previously.
      subject=               # The issue subject.
      tags                   # A lists of tags to be assigned to the issue.
      taiga_host             # The hostname of the Taiga instance.
- name: module for sending notifications via telegram
  action: telegram
      chat_id=               # Telegram group or user chat_id
      msg=                   # What message you wish to send.
      token=                 # Token identifying your telegram bot.
- name: Templates a file out to a remote server.
  action: template
      backup                 # Create a backup file including the timestamp
                               information so
                               you can get the
                               original file
                               back if you
                               somehow clobbered
                               it incorrectly.
      dest=                  # Location to render the template to on the remote
                               machine.
      force                  # the default is `yes', which will replace the
                               remote file when
                               contents are
                               different than
                               the source.  If
                               `no', the file
                               will only be
                               transferred if
                               the destination
                               does not exist.
      group                  # name of the group that should own the
                               file/directory,
                               as would be fed
                               to `chown'
      mode                   # mode the file or directory should be. For those
                               used to
                               `/usr/bin/chmod'
                               remember that
                               modes are
                               actually octal
                               numbers (like
                               0644). Leaving
                               off the leading
                               zero will likely
                               have unexpected
                               results. As of
                               version 1.8, the
                               mode may be
                               specified as a
                               symbolic mode
                               (for example,
                               `u+rwx' or
                               `u=rw,g=r,o=r').
      owner                  # name of the user that should own the
                               file/directory,
                               as would be fed
                               to `chown'
      selevel                # level part of the SELinux file context. This is
                               the MLS/MCS
                               attribute,
                               sometimes known
                               as the `range'.
                               `_default'
                               feature works as
                               for `seuser'.
      serole                 # role part of SELinux file context, `_default'
                               feature works as
                               for `seuser'.
      setype                 # type part of SELinux file context, `_default'
                               feature works as
                               for `seuser'.
      seuser                 # user part of SELinux file context. Will default
                               to system policy,
                               if applicable. If
                               set to
                               `_default', it
                               will use the
                               `user' portion of
                               the policy if
                               available
      src=                   # Path of a Jinja2 formatted template on the
                               Ansible
                               controller. This
                               can be a relative
                               or absolute path.
      unsafe_writes          # Normally this module uses atomic operations to
                               prevent data
                               corruption or
                               inconsistent
                               reads from the
                               target files,
                               sometimes systems
                               are configured or
                               just broken in
                               ways that prevent
                               this. One example
                               are docker
                               mounted files,
                               they cannot be
                               updated
                               atomically and
                               can only be done
                               in an unsafe
                               manner. This
                               boolean option
                               allows ansible to
                               fall back to
                               unsafe methods of
                               updating files
                               for those cases
                               in which you do
                               not have any
                               other choice. Be
                               aware that this
                               is subject to
                               race conditions
                               and can lead to
                               data corruption.
      validate               # The validation command to run before copying
                               into place. The
                               path to the file
                               to validate is
                               passed in via
                               '%s' which must
                               be present as in
                               the example
                               below. The
                               command is passed
                               securely so shell
                               features like
                               expansion and
                               pipes won't work.
- name: Configure timezone setting
  action: timezone
      hwclock                # Whether the hardware clock is in UTC or in local
                               timezone. Default
                               is to keep
                               current setting.
                               Note that this
                               option is
                               recommended not
                               to change and may
                               fail to
                               configure,
                               especially on
                               virtual
                               environments such
                               as AWS.
      name                   # Name of the timezone for the system clock.
                               Default is to
                               keep current
                               setting.
- name: Sends a text message to a mobile phone through Twilio.
  action: twilio
      account_sid=           # u s e r ' s   T w i l i o   a c c o u n t   t o
                               k e n   f o u n d
                               o n   t h e   a c
                               c o u n t   p a g
                               e
      auth_token=            # u s e r ' s   T w i l i o   a u t h e n t i c a
                               t i o n   t o k e
                               n
      from_number=           # t h e   T w i l i o   n u m b e r   t o   s e n
                               d   t h e   t e x
                               t   m e s s a g e
                               f r o m ,   f o r
                               m a t   + 1 5 5 5
                               1 1 1 2 2 2 2
      media_url              # a   U R L   w i t h   a   p i c t u r e ,   v i
                               d e o   o r   s o
                               u n d   c l i p
                               t o   s e n d   w
                               i t h   a n   M M
                               S   ( m u l t i m
                               e d i a   m e s s
                               a g e )   i n s t
                               e a d   o f   a
                               p l a i n   S M S
      msg=                   # t h e   b o d y   o f   t h e   t e x t   m e s
                               s a g e
      to_number=             # o n e   o r   m o r e   p h o n e   n u m b e r
                               s   t o   s e n d
                               t h e   t e x t
                               m e s s a g e   t
                               o ,   f o r m a t
                               + 1 5 5 5 1 1 1 2
                               2 2 2
- name: Send a message to typetalk
  action: typetalk
      client_id=             # OAuth2 client ID
      client_secret=         # OAuth2 client secret
      msg=                   # message body
      topic=                 # topic id to post message
- name: Manage dns entries on a univention corporate server
  action: udm_dns_record
      data                   # Additional data for this record, e.g. ['a':
                               '192.0.2.1'].
                               Required if
                               `state=present'.
      name=                  # Name of the record, this is also the DNS record.
                               E.g. www for
                               www.example.com.
      state                  # Whether the dns record is present or not.
      type=                  # Define the record type. `host_record' is a A or
                               AAAA record,
                               `alias' is a
                               CNAME,
                               `ptr_record' is a
                               PTR record,
                               `srv_record' is a
                               SRV record and
                               `txt_record' is a
                               TXT record.
      zone=                  # Corresponding DNS zone for this record, e.g.
                               example.com.
- name: Manage dns zones on a univention corporate server
  action: udm_dns_zone
      contact                # Contact person in the SOA record.
      expire                 # Specifies the upper limit on the time interval
                               that can elapse
                               before the zone
                               is no longer
                               authoritative.
      interfaces             # List of interface IP addresses, on which the
                               server should
                               response this
                               zone. Required if
                               `state=present'.
      mx                     # List of MX servers. (Must declared as A or AAAA
                               records).
      nameserver             # List of appropriate name servers. Required if
                               `state=present'.
      refresh                # Interval before the zone should be refreshed.
      retry                  # Interval that should elapse before a failed
                               refresh should be
                               retried.
      state                  # Whether the dns zone is present or not.
      ttl                    # Minimum TTL field that should be exported with
                               any RR from this
                               zone.
      type=                  # Define if the zone is a forward or reverse DNS
                               zone.
      zone=                  # DNS zone name, e.g. `example.com'.
- name: Manage of the posix group
  action: udm_group
      description            # Group description.
      name=                  # Name of the posix group.
      ou                     # LDAP OU, e.g. school for LDAP OU
                               `ou=school,dc=exa
                               mple,dc=com'.
      position               # define the whole ldap position of the group,
                               e.g. `cn=g123m-1A
                               ,cn=classes,cn=sc
                               hueler,cn=groups,
                               ou=schule,dc=exam
                               ple,dc=com'.
      state                  # Whether the group is present or not.
      subpath                # Subpath inside the OU, e.g.
                               `cn=classes,cn=st
                               udents,cn=groups'
                               .
- name: Manage samba shares on a univention corporate server
  action: udm_share
      directorymode          # Permissions for the share's root directory.
      group                  # Directory owner group of the share's root
                               directory.
      host                   # Host FQDN (server which provides the share),
                               e.g. `{{
                               ansible_fqdn }}'.
                               Required if
                               `state=present'.
      name=                  # Name
      nfs_custom_settings    # Option name in exports file.
      nfs_hosts              # Only allow access for this host, IP address or
                               network.
      ou=                    # Organisational unit, inside the LDAP Base DN.
      owner                  # Directory owner of the share's root directory.
      path                   # Directory on the providing server, e.g. `/home'.
                               Required if
                               `state=present'.
      root_squash            # Modify user ID for root user (root squashing).
      samba_block_size       # Blocking size.
      samba_blocking_locks   # Blocking locks.
      samba_browseable       # Show in Windows network environment.
      samba_create_mode      # File mode.
      samba_csc_policy       # Client-side caching policy.
      samba_custom_settings   # Option name in smb.conf and its value.
      samba_directory_mode   # Directory mode.
      samba_directory_security_mode   # Directory security mode.
      samba_dos_filemode     # Users with write access may modify permissions.
      samba_fake_oplocks     # Fake oplocks.
      samba_force_create_mode   # Force file mode.
      samba_force_directory_mode   # Force directory mode.
      samba_force_directory_security_mode   # Force directory security mode.
      samba_force_group      # Force group.
      samba_force_security_mode   # Force security mode.
      samba_force_user       # Force user.
      samba_hide_files       # Hide files.
      samba_hide_unreadable   # Hide unreadable files/directories.
      samba_hosts_allow      # Allowed host/network.
      samba_hosts_deny       # Denied host/network.
      samba_inherit_acls     # Inherit ACLs.
      samba_inherit_owner    # Create files/directories with the owner of the
                               parent directory.
      samba_inherit_permissions   # Create files/directories with permissions of the
                               parent directory.
      samba_invalid_users    # Invalid users or groups.
      samba_level_2_oplocks   # Level 2 oplocks.
      samba_locking          # Locking.
      samba_msdfs_root       # MSDFS root.
      samba_name             # Windows name. Required if `state=present'.
      samba_nt_acl_support   # NT ACL support.
      samba_oplocks          # Oplocks.
      samba_postexec         # Postexec script.
      samba_preexec          # Preexec script.
      samba_public           # Allow anonymous read-only access with a guest
                               user.
      samba_security_mode    # Security mode.
      samba_strict_locking   # Strict locking.
      samba_valid_users      # Valid users or groups.
      samba_vfs_objects      # VFS objects.
      samba_write_list       # Restrict write access to these users/groups.
      samba_writeable        # Samba write access.
      state                  # Whether the share is present or not.
      subtree_checking       # Subtree checking.
      sync                   # NFS synchronisation.
      writeable              # NFS write access.
- name: Manage posix users on a univention corporate server
  action: udm_user
      birthday               # Birthday
      city                   # City of users business address.
      country                # Country of users business address.
      department_number      # Department number of users business address.
      description            # Description (not gecos)
      display_name           # Display name (not gecos)
      email                  # A list of e-mail addresses.
      employee_number        # Employee number
      employee_type          # Employee type
      firstname              # First name. Required if `state=present'.
      gecos                  # GECOS
      groups                 # POSIX groups, the LDAP DNs of the groups will be
                               found with the
                               LDAP filter for
                               each group as
                               $GROUP: `(&(objec
                               tClass=posixGroup
                               '(cn=$GROUP))).
      home_share             # Home NFS share. Must be a LDAP DN, e.g.
                               `cn=home,cn=share
                               s,ou=school,dc=ex
                               ample,dc=com'.
      home_share_path        # Path to home NFS share, inside the homeShare.
      home_telephone_number   # List of private telephone numbers.
      homedrive              # Windows home drive, e.g. `"H:"'.
      lastname               # Last name. Required if `state=present'.
      mail_alternative_address   # List of alternative e-mail addresses.
      mail_home_server       # FQDN of mail server
      mail_primary_address   # Primary e-mail address
      mobile_telephone_number   # Mobile phone number
      organisation           # Organisation
      ou                     # Organizational Unit inside the LDAP Base DN,
                               e.g. `school' for
                               LDAP OU `ou=schoo
                               l,dc=example,dc=c
                               om'.
      override_pw_history    # Override password history
      override_pw_length     # Override password check
      pager_telephonenumber   # List of pager telephone numbers.
      password               # Password. Required if `state=present'.
      phone                  # List of telephone numbers.
      position               # Define the whole position of users object inside
                               the LDAP tree,
                               e.g. `cn=employee
                               ,cn=users,ou=scho
                               ol,dc=example,dc=
                               com'.
      postcode               # Postal code of users business address.
      primary_group          # Primary group. This must be the group LDAP DN.
      profilepath            # Windows profile directory
      pwd_change_next_login   # Change password on next login.
      room_number            # Room number of users business address.
      samba_privileges       # Samba privilege, like allow printer
                               administration,
                               do domain join.
      samba_user_workstations   # Allow the authentication only on this Microsoft
                               Windows host.
      sambahome              # Windows home path, e.g. `'\\$FQDN\$USERNAME''.
      scriptpath             # Windows logon script.
      secretary              # A list of superiors as LDAP DNs.
      serviceprovider        # Enable user for the following service providers.
      shell                  # Login shell
      state                  # Whether the user is present or not.
      street                 # Street of users business address.
      subpath                # LDAP subpath inside the organizational unit,
                               e.g. `cn=teachers
                               ,cn=users' for
                               LDAP container `c
                               n=teachers,cn=use
                               rs,dc=example,dc=
                               com'.
      title                  # Title, e.g. `Prof.'.
      unixhome               # Unix home directory
      userexpiry             # Account expiry date, e.g. `1999-12-31'.
      username=              # User name
- name: Manage firewall with UFW
  action: ufw
      delete                 # Delete rule.
      direction              # Select direction for a rule or default policy
                               command.
      from_ip                # Source IP address.
      from_port              # Source port.
      insert                 # Insert the corresponding rule as rule number NUM
      interface              # Specify interface for rule.
      log                    # Log new connections matched to this rule
      logging                # Toggles logging. Logged packets use the LOG_KERN
                               syslog facility.
      name                   # Use profile located in `/etc/ufw/applications.d'
      policy                 # Change the default policy for incoming or
                               outgoing traffic.
      proto                  # TCP/IP protocol.
      route                  # Apply the rule to routed/forwarded packets.
      rule                   # Add firewall rule
      state                  # `enabled' reloads firewall and enables firewall
                               on boot.
                               `disabled'
                               unloads firewall
                               and disables
                               firewall on boot.
                               `reloaded'
                               reloads firewall.
                               `reset' disables
                               and resets
                               firewall to
                               installation
                               defaults.
      to_ip                  # Destination IP address.
      to_port                # Destination port.
- name: Unpacks an archive after (optionally) copying it from the local machine.
  action: unarchive
      copy                   # If true, the file is copied from local 'master'
                               to the target
                               machine,
                               otherwise, the
                               plugin will look
                               for src archive
                               at the target
                               machine. This
                               option has been
                               deprecated in
                               favor of
                               `remote_src' This
                               option is
                               mutually
                               exclusive with
                               `remote_src'.
      creates                # a filename, when it already exists, this step
                               will *not* be
                               run.
      dest=                  # Remote absolute path where the archive should be
                               unpacked
      exclude                # List the directory and file entries that you
                               would like to
                               exclude from the
                               unarchive action.
      extra_opts             # Specify additional options by passing in an
                               array.
      group                  # name of the group that should own the
                               file/directory,
                               as would be fed
                               to `chown'
      keep_newer             # Do not replace existing files that are newer
                               than files from
                               the archive.
      list_files             # If set to True, return the list of files that
                               are contained in
                               the tarball.
      mode                   # mode the file or directory should be. For those
                               used to
                               `/usr/bin/chmod'
                               remember that
                               modes are
                               actually octal
                               numbers (like
                               0644). Leaving
                               off the leading
                               zero will likely
                               have unexpected
                               results. As of
                               version 1.8, the
                               mode may be
                               specified as a
                               symbolic mode
                               (for example,
                               `u+rwx' or
                               `u=rw,g=r,o=r').
      owner                  # name of the user that should own the
                               file/directory,
                               as would be fed
                               to `chown'
      remote_src             # Set to `yes' to indicate the archived file is
                               already on the
                               remote system and
                               not local to the
                               Ansible
                               controller. This
                               option is
                               mutually
                               exclusive with
                               `copy'.
      selevel                # level part of the SELinux file context. This is
                               the MLS/MCS
                               attribute,
                               sometimes known
                               as the `range'.
                               `_default'
                               feature works as
                               for `seuser'.
      serole                 # role part of SELinux file context, `_default'
                               feature works as
                               for `seuser'.
      setype                 # type part of SELinux file context, `_default'
                               feature works as
                               for `seuser'.
      seuser                 # user part of SELinux file context. Will default
                               to system policy,
                               if applicable. If
                               set to
                               `_default', it
                               will use the
                               `user' portion of
                               the policy if
                               available
      src=                   # If remote_src=no (default), local path to
                               archive file to
                               copy to the
                               target server;
                               can be absolute
                               or relative. If
                               remote_src=yes,
                               path on the
                               target server to
                               existing archive
                               file to unpack.
                               If remote_src=yes
                               and src contains
                               ://, the remote
                               machine will
                               download the file
                               from the url
                               first.
                               (version_added
                               2.0)
      unsafe_writes          # Normally this module uses atomic operations to
                               prevent data
                               corruption or
                               inconsistent
                               reads from the
                               target files,
                               sometimes systems
                               are configured or
                               just broken in
                               ways that prevent
                               this. One example
                               are docker
                               mounted files,
                               they cannot be
                               updated
                               atomically and
                               can only be done
                               in an unsafe
                               manner. This
                               boolean option
                               allows ansible to
                               fall back to
                               unsafe methods of
                               updating files
                               for those cases
                               in which you do
                               not have any
                               other choice. Be
                               aware that this
                               is subject to
                               race conditions
                               and can lead to
                               data corruption.
      validate_certs         # This only applies if using a https url as the
                               source of the
                               file. This should
                               only set to `no'
                               used on
                               personally
                               controlled sites
                               using self-signed
                               cer Prior to 2.2
                               the code worked
                               as if this was
                               set to `yes'.
- name: Pause and start Uptime Robot monitoring
  action: uptimerobot
      apikey=                # Uptime Robot API key.
      monitorid=             # ID of the monitor to check.
      state=                 # Define whether or not the monitor should be
                               running or
                               paused.
- name: Interacts with webservices
  action: uri
      HEADER_                # Any parameter starting with "HEADER_" is a sent
                               with your request
                               as a header. For
                               example,
                               HEADER_Content-Ty
                               pe="application/j
                               son" would send
                               the header
                               "Content-Type"
                               along with your
                               request with a
                               value of "applica
                               tion/json". This
                               option is
                               deprecated as of
                               `2.1' and may be
                               removed in a
                               future release.
                               Use `headers'
                               instead.
      body                   # The body of the http request/response to the web
                               service. If
                               `body_format' is
                               set to 'json' it
                               will take an
                               already formatted
                               JSON string or
                               convert a data
                               structure into
                               JSON.
      body_format            # The serialization format of the body. When set
                               to json, encodes
                               the body
                               argument, if
                               needed, and
                               automatically
                               sets the Content-
                               Type header
                               accordingly.
      creates                # a filename, when it already exists, this step
                               will not be run.
      dest                   # path of where to download the file to (if
                               desired). If
                               `dest' is a
                               directory, the
                               basename of the
                               file on the
                               remote server
                               will be used.
      follow_redirects       # Whether or not the URI module should follow
                               redirects. `all'
                               will follow all
                               redirects. `safe'
                               will follow only
                               "safe" redirects,
                               where "safe"
                               means that the
                               client is only
                               doing a GET or
                               HEAD on the URI
                               to which it is
                               being redirected.
                               `none' will not
                               follow any
                               redirects. Note
                               that `yes' and
                               `no' choices are
                               accepted for
                               backwards
                               compatibility,
                               where `yes' is
                               the equivalent of
                               `all' and `no' is
                               the equivalent of
                               `safe'. `yes' and
                               `no' are
                               deprecated and
                               will be removed
                               in some future
                               version of
                               Ansible.
      force_basic_auth       # The library used by the uri module only sends
                               authentication
                               information when
                               a webservice
                               responds to an
                               initial request
                               with a 401
                               status. Since
                               some basic auth
                               services do not
                               properly send a
                               401, logins will
                               fail. This option
                               forces the
                               sending of the
                               Basic
                               authentication
                               header upon
                               initial request.
      headers                # Add custom HTTP headers to a request in the
                               format of a YAML
                               hash
      method                 # The HTTP method of the request or response. It
                               MUST be
                               uppercase.
      others                 # all arguments accepted by the [file] module also
                               work here
      password               # password for the module to use for Digest, Basic
                               or WSSE
                               authentication.
      removes                # a filename, when it does not exist, this step
                               will not be run.
      return_content         # Whether or not to return the body of the request
                               as a "content"
                               key in the
                               dictionary
                               result. If the
                               reported Content-
                               type is "applicat
                               ion/json", then
                               the JSON is
                               additionally
                               loaded into a key
                               called `json' in
                               the dictionary
                               results.
      status_code            # A valid, numeric, HTTP status code that
                               signifies success
                               of the request.
                               Can also be comma
                               separated list of
                               status codes.
      timeout                # The socket level timeout in seconds
      url=                   # HTTP or HTTPS URL in the form
                               (http|https)://ho
                               st.domain[:port]/
                               path
      user                   # username for the module to use for Digest, Basic
                               or WSSE
                               authentication.
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               set to `no' used
                               on personally
                               controlled sites
                               using self-signed
                               certificates.
                               Prior to 1.9.2
                               the code
                               defaulted to
                               `no'.
- name: Urpmi manager
  action: urpmi
      force                  # Assume "yes" is the answer to any question urpmi
                               has to ask.
                               Corresponds to
                               the `--force'
                               option for
                               `urpmi'.
      no-recommends          # Corresponds to the `--no-recommends' option for
                               `urpmi'.
      pkg=                   # name of package to install, upgrade or remove.
      state                  # Indicates the desired package state
      update_cache           # update the package database first `urpmi.update
                               -a'.
- name: Manage user accounts
  action: user
      append                 # If `yes', will only add groups, not set them to
                               just the list in
                               `groups'.
      comment                # Optionally sets the description (aka `GECOS') of
                               user account.
      createhome             # Unless set to `no', a home directory will be
                               made for the user
                               when the account
                               is created or if
                               the home
                               directory does
                               not exist.
      expires                # An expiry time for the user in epoch, it will be
                               ignored on
                               platforms that do
                               not support this.
                               Currently
                               supported on
                               Linux and
                               FreeBSD.
      force                  # When used with `state=absent', behavior is as
                               with `userdel
                               --force'.
      generate_ssh_key       # Whether to generate a SSH key for the user in
                               question. This
                               will *not*
                               overwrite an
                               existing SSH key.
      group                  # Optionally sets the user's primary group (takes
                               a group name).
      groups                 # Puts the user in this comma-delimited list of
                               groups. When set
                               to the empty
                               string
                               ('groups='), the
                               user is removed
                               from all groups
                               except the
                               primary group.
      home                   # Optionally set the user's home directory.
      login_class            # Optionally sets the user's login class for
                               FreeBSD, OpenBSD
                               and NetBSD
                               systems.
      move_home              # If set to `yes' when used with `home=', attempt
                               to move the
                               user's home
                               directory to the
                               specified
                               directory if it
                               isn't there
                               already.
      name=                  # Name of the user to create, remove or modify.
      non_unique             # Optionally when used with the -u option, this
                               option allows to
                               change the user
                               ID to a non-
                               unique value.
      password               # Optionally set the user's password to this
                               crypted value.
                               See the user
                               example in the
                               github examples
                               directory for
                               what this looks
                               like in a
                               playbook. See htt
                               p://docs.ansible.
                               com/ansible/faq.h
                               tml#how-do-i
                               -generate-
                               crypted-
                               passwords-for-
                               the-user-module
                               for details on
                               various ways to
                               generate these
                               password values.
                               Note on Darwin
                               system, this
                               value has to be
                               cleartext. Beware
                               of security
                               issues.
      remove                 # When used with `state=absent', behavior is as
                               with `userdel
                               --remove'.
      seuser                 # Optionally sets the seuser type (user_u) on
                               selinux enabled
                               systems.
      shell                  # Optionally set the user's shell.
      skeleton               # Optionally set a home skeleton directory.
                               Requires
                               createhome
                               option!
      ssh_key_bits           # Optionally specify number of bits in SSH key to
                               create.
      ssh_key_comment        # Optionally define the comment for the SSH key.
      ssh_key_file           # Optionally specify the SSH key filename. If this
                               is a relative
                               filename then it
                               will be relative
                               to the user's
                               home directory.
      ssh_key_passphrase     # Set a passphrase for the SSH key.  If no
                               passphrase is
                               provided, the SSH
                               key will default
                               to having no
                               passphrase.
      ssh_key_type           # Optionally specify the type of SSH key to
                               generate.
                               Available SSH key
                               types will depend
                               on implementation
                               present on target
                               host.
      state                  # Whether the account should exist or not, taking
                               action if the
                               state is
                               different from
                               what is stated.
      system                 # When creating an account, setting this to `yes'
                               makes the user a
                               system account.
                               This setting
                               cannot be changed
                               on existing
                               users.
      uid                    # Optionally sets the `UID' of the user.
      update_password        # `always' will update passwords if they differ.
                               `on_create' will
                               only set the
                               password for
                               newly created
                               users.
- name: add remove firewall rules in a gateway  in a vca
  action: vca_fw
      api_version            # The api version to be used with the vca
      fw_rules=              # A list of firewall rules to be added to the
                               gateway, Please
                               see examples on
                               valid entries
      gateway_name           # The name of the gateway of the vdc where the
                               rule should be
                               added
      host                   # The authentication host to be used when service
                               type  is vcd.
      instance_id            # The instance id in a vchs environment to be used
                               for creating the
                               vapp
      org                    # The org to login to for creating vapp. This
                               option is
                               required when the
                               `service_type' is
                               `vdc'.
      password               # The vca password, if not set the environment
                               variable VCA_PASS
                               is checked for
                               the password
      service_type           # The type of service we are authenticating
                               against
      state                  # if the object should be added or removed
      username               # The vca username or email address, if not set
                               the environment
                               variable VCA_USER
                               is checked for
                               the username.
      vdc_name               # The name of the vdc where the gateway is
                               located.
      verify_certs           # If the certificates of the authentication is to
                               be verified
- name: add remove nat rules in a gateway  in a vca
  action: vca_nat
      api_version            # The api version to be used with the vca
      gateway_name           # The name of the gateway of the vdc where the
                               rule should be
                               added
      host                   # The authentication host to be used when service
                               type  is vcd.
      instance_id            # The instance id in a vchs environment to be used
                               for creating the
                               vapp
      nat_rules=             # A list of rules to be added to the gateway,
                               Please see
                               examples on valid
                               entries
      org                    # The org to login to for creating vapp. This
                               option is
                               required when the
                               `service_type' is
                               `vdc'.
      password               # The vca password, if not set the environment
                               variable VCA_PASS
                               is checked for
                               the password
      purge_rules            # If set to true, it will delete all rules in the
                               gateway that are
                               not given as
                               paramter to this
                               module.
      service_type           # The type of service we are authenticating
                               against
      state                  # if the object should be added or removed
      username               # The vca username or email address, if not set
                               the environment
                               variable VCA_USER
                               is checked for
                               the username.
      vdc_name               # The name of the vdc where the gateway is
                               located.
      verify_certs           # If the certificates of the authentication is to
                               be verified
- name: Manages vCloud Air vApp instances.
  action: vca_vapp
      api_version            # The api version to be used with the vca
      host                   # The authentication host to be used when service
                               type  is vcd.
      instance_id            # The instance id in a vchs environment to be used
                               for creating the
                               vapp
      network_mode           # Configures the mode of the network connection.
      network_name           # The name of the network that should be attached
                               to the virtual
                               machine in the
                               vApp.  The
                               virtual network
                               specified must
                               already be
                               created in the
                               vCloud Air VDC.
                               If the `state' is
                               not 'absent' then
                               the
                               `network_name'
                               argument must be
                               provided.
      operation              # Specifies an operation to be performed on the
                               vApp.
      org                    # The org to login to for creating vapp, mostly
                               set when the
                               service_type is
                               vdc.
      password               # The vCloud Air password to use during
                               authentication
      service_type           # The type of service we are authenticating
                               against
      state                  # Configures the state of the vApp.
      template_name          # The name of the vApp template to use to create
                               the vApp
                               instance.  If the
                               `state' is not
                               `absent` then the
                               `template_name'
                               value must be
                               provided.  The
                               `template_name'
                               must be
                               previously
                               uploaded to the
                               catalog specified
                               by `catalog_name'
      username               # The vCloud Air username to use during
                               authentication
      vapp_name=             # The name of the vCloud Air vApp instance
      vdc_name               # The name of the virtual data center (VDC) where
                               the vm should be
                               created or
                               contains the
                               vAPP.
      vm_cpus                # The number of vCPUs to configure for the VM in
                               the vApp.   If
                               the `vm_name'
                               argument is
                               provided, then
                               this becomes a
                               per VM setting
                               otherwise it is
                               applied to all
                               VMs in the vApp.
      vm_memory              # The amount of memory in MB to allocate to VMs in
                               the vApp.  If the
                               `vm_name'
                               argument is
                               provided, then
                               this becomes a
                               per VM setting
                               otherise it is
                               applied to all
                               VMs in the vApp.
      vm_name                # The name of the virtual machine instance in the
                               vApp to manage.
- name: Updates Vertica configuration parameters.
  action: vertica_configuration
      cluster                # Name of the Vertica cluster.
      db                     # Name of the Vertica database.
      login_password         # The password used to authenticate with.
      login_user             # The username used to authenticate with.
      name=                  # Name of the parameter to update.
      port                   # Vertica cluster port to connect to.
      value=                 # Value of the parameter to be set.
- name: Gathers Vertica database facts.
  action: vertica_facts
      cluster                # Name of the cluster running the schema.
      db                     # Name of the database running the schema.
      login_password         # The password used to authenticate with.
      login_user             # The username used to authenticate with.
      port                   # D a t a b a s e   p o r t   t o   c o n n e c t
                               t o .
- name: Adds or removes Vertica database roles and assigns roles to them.
  action: vertica_role
      assigned_roles         # Comma separated list of roles to assign to the
                               role.
      cluster                # Name of the Vertica cluster.
      db                     # Name of the Vertica database.
      login_password         # The password used to authenticate with.
      login_user             # The username used to authenticate with.
      name=                  # Name of the role to add or remove.
      port                   # Vertica cluster port to connect to.
      state                  # Whether to create `present', drop `absent' or
                               lock `locked' a
                               role.
- name: Adds or removes Vertica database schema and roles.
  action: vertica_schema
      cluster                # Name of the Vertica cluster.
      create_roles           # Comma separated list of roles to create and
                               grant usage and
                               create access to
                               the schema.
      db                     # Name of the Vertica database.
      login_password         # The password used to authenticate with.
      login_user             # The username used to authenticate with.
      name=                  # Name of the schema to add or remove.
      owner                  # Name of the user to set as owner of the schema.
      port                   # Vertica cluster port to connect to.
      state                  # Whether to create `present', or drop `absent' a
                               schema.
      usage_roles            # Comma separated list of roles to create and
                               grant usage
                               access to the
                               schema.
- name: Adds or removes Vertica database users and assigns roles.
  action: vertica_user
      cluster                # Name of the Vertica cluster.
      db                     # Name of the Vertica database.
      expired                # Sets the user's password expiration.
      ldap                   # Set to true if users are authenticated via LDAP.
                               The user will be
                               created with
                               password expired
                               and set to
                               `$ldap$'.
      login_password         # The password used to authenticate with.
      login_user             # The username used to authenticate with.
      name=                  # Name of the user to add or remove.
      password               # The user's password encrypted by the MD5
                               algorithm. The
                               password must be
                               generated with
                               the format `"md5"
                               + md5[password +
                               username]',
                               resulting in a
                               total of 35
                               characters. An
                               easy way to do
                               this is by
                               querying the
                               Vertica database
                               with select 'md5'
                               ||md5('<user_pass
                               word><user_name>'
                               ).
      port                   # Vertica cluster port to connect to.
      profile                # Sets the user's profile.
      resource_pool          # Sets the user's resource pool.
      roles                  # Comma separated list of roles to assign to the
                               user.
      state                  # Whether to create `present', drop `absent' or
                               lock `locked' a
                               user.
- name: Manages virtual machines supported by libvirt
  action: virt
      command                # in addition to state management, various non-
                               idempotent
                               commands are
                               available. See
                               examples
      name=                  # name of the guest VM being managed. Note that VM
                               must be
                               previously
                               defined with xml.
      state                  # Note that there may be some lag for state
                               requests like
                               `shutdown' since
                               these refer only
                               to VM states.
                               After starting a
                               guest, it may not
                               be immediately
                               accessible.
      uri                    # libvirt connection uri
      xml                    # XML document used with the define command
- name: Manage libvirt network configuration
  action: virt_net
      autostart              # Specify if a given storage pool should be
                               started
                               automatically on
                               system boot.
      command                # in addition to state management, various non-
                               idempotent
                               commands are
                               available. See
                               examples. Modify
                               was added in
                               version 2.1
      name=                  # name of the network being managed. Note that
                               network must be
                               previously
                               defined with xml.
      state                  # specify which state you want a network to be in.
                               If 'active',
                               network will be
                               started. If
                               'present', ensure
                               that network is
                               present but do
                               not change its
                               state; if it's
                               missing, you need
                               to specify xml
                               argument. If
                               'inactive',
                               network will be
                               stopped. If
                               'undefined' or
                               'absent', network
                               will be removed
                               from `libvirt'
                               configuration.
      uri                    # libvirt connection uri.
      xml                    # XML document used with the define command.
- name: Manage libvirt storage pools
  action: virt_pool
      autostart              # Specify if a given storage pool should be
                               started
                               automatically on
                               system boot.
      command                # in addition to state management, various non-
                               idempotent
                               commands are
                               available. See
                               examples.
      mode                   # Pass additional parameters to 'build' or
                               'delete'
                               commands.
      name                   # name of the storage pool being managed. Note
                               that pool must be
                               previously
                               defined with xml.
      state                  # specify which state you want a storage pool to
                               be in. If
                               'active', pool
                               will be started.
                               If 'present',
                               ensure that pool
                               is present but do
                               not change its
                               state; if it's
                               missing, you need
                               to specify xml
                               argument. If
                               'inactive', pool
                               will be stopped.
                               If 'undefined' or
                               'absent', pool
                               will be removed
                               from `libvirt'
                               configuration. If
                               'deleted', pool
                               contents will be
                               deleted and then
                               pool undefined.
      uri                    # `libvirt' connection uri.
      xml                    # XML document used with the define command.
- name: Create VMware vSphere Cluster
  action: vmware_cluster
      cluster_name=          # The name of the cluster that will be created
      datacenter_name=       # The name of the datacenter the cluster will be
                               created in.
      enable_drs             # If set to True will enable DRS when the cluster
                               is created.
      enable_ha              # If set to True will enable HA when the cluster
                               is created.
      enable_vsan            # If set to True will enable vSAN when the cluster
                               is created.
      hostname=              # The hostname or IP address of the vSphere
                               vCenter
      password=              # The password of the vSphere vCenter
      username=              # The username of the vSphere vCenter
      validate_certs         # Allows connection when SSL certificates are not
                               valid. Set to
                               false when
                               certificates are
                               not trusted
- name: Manage VMware vSphere Datacenters
  action: vmware_datacenter
      datacenter_name=       # The name of the datacenter the cluster will be
                               created in.
      hostname=              # The hostname or IP address of the vSphere
                               vCenter
      password=              # The password of the vSphere vCenter
      state                  # If the datacenter should be present or absent
      username=              # The username of the vSphere vCenter
      validate_certs         # Allows connection when SSL certificates are not
                               valid. Set to
                               false when
                               certificates are
                               not trusted
- name: Manage VMware ESXi DNS Configuration
  action: vmware_dns_config
      change_hostname_to=    # The hostname that an ESXi host should be changed
                               to.
      dns_servers=           # The DNS servers that the host should be
                               configured to
                               use.
      domainname=            # The domain the ESXi host should be apart of.
      hostname=              # The hostname or IP address of the vSphere
                               vCenter
      password=              # The password of the vSphere vCenter
      username=              # The username of the vSphere vCenter
      validate_certs         # Allows connection when SSL certificates are not
                               valid. Set to
                               false when
                               certificates are
                               not trusted
- name: Add or remove a host from distributed virtual switch
  action: vmware_dvs_host
      esxi_hostname=         # The ESXi hostname
      hostname=              # The hostname or IP address of the vSphere
                               vCenter
      password=              # The password of the vSphere vCenter
      state=                 # If the host should be present or absent attached
                               to the vSwitch
      switch_name=           # The name of the Distributed vSwitch
      username=              # The username of the vSphere vCenter
      validate_certs         # Allows connection when SSL certificates are not
                               valid. Set to
                               false when
                               certificates are
                               not trusted
      vmnics=                # The ESXi hosts vmnics to use with the
                               Distributed
                               vSwitch
- name: Create or remove a Distributed vSwitch portgroup
  action: vmware_dvs_portgroup
      hostname=              # The hostname or IP address of the vSphere
                               vCenter
      num_ports=             # The number of ports the portgroup should contain
      password=              # The password of the vSphere vCenter
      portgroup_name=        # The name of the portgroup that is to be created
                               or deleted
      portgroup_type=        # See VMware KB 1022312 regarding portgroup types
      switch_name=           # The name of the distributed vSwitch the port
                               group should be
                               created on.
      username=              # The username of the vSphere vCenter
      validate_certs         # Allows connection when SSL certificates are not
                               valid. Set to
                               false when
                               certificates are
                               not trusted
      vlan_id=               # The VLAN ID that should be configured with the
                               portgroup
- name: Create or remove a distributed vSwitch
  action: vmware_dvswitch
      datacenter_name=       # The name of the datacenter that will contain the
                               dvSwitch
      discovery_operation    # Select the discovery operation
      discovery_proto=       # Link discovery protocol between Cisco and Link
                               Layer discovery
      hostname=              # The hostname or IP address of the vSphere
                               vCenter
      mtu=                   # The switch maximum transmission unit
      password=              # The password of the vSphere vCenter
      state                  # Create or remove dvSwitch
      switch_name=           # The name of the switch to create or remove
      uplink_quantity=       # Quantity of uplink per ESXi host added to the
                               switch
      username=              # The username of the vSphere vCenter
      validate_certs         # Allows connection when SSL certificates are not
                               valid. Set to
                               false when
                               certificates are
                               not trusted
- name: Manages virtualmachines in vcenter
  action: vmware_guest
      datacenter=            # Destination datacenter for the deploy operation
      disk                   # A list of disks to add
      esxi_hostname=         # The esxi hostname where the VM will run.
      folder                 # Destination folder path for the new guest
      force                  # Ignore warnings and complete the actions
      hardware               # Attributes such as cpus, memory, osid, and disk
                               controller
      hostname=              # The hostname or IP address of the vSphere
                               vCenter
      name=                  # Name of the newly deployed guest
      name_match             # If multiple vms matching the name, use the first
                               or last found
      nic                    # A list of nics to add
      password=              # The password of the vSphere vCenter
      state=                 # What state should the virtualmachine be in?
      template               # Name of the template to deploy, if needed to
                               create the guest
                               (state=present).
                               If the guest
                               exists already
                               this setting will
                               be ignored.
      username=              # The username of the vSphere vCenter
      uuid                   # UUID of the instance to manage if known, this is
                               vmware's unique
                               identifier. This
                               is required if
                               name is not
                               supplied.
      validate_certs         # Allows connection when SSL certificates are not
                               valid. Set to
                               false when
                               certificates are
                               not trusted
      wait_for_ip_address    # Wait until vcenter detects an IP address for the
                               guest
- name: Add/remove ESXi host to/from vCenter
  action: vmware_host
      cluster_name=          # Name of the cluster to add the host
      datacenter_name=       # Name of the datacenter to add the host
      esxi_hostname=         # ESXi hostname to manage
      esxi_password=         # ESXi password
      esxi_username=         # ESXi username
      hostname=              # The hostname or IP address of the vSphere
                               vCenter
      password=              # The password of the vSphere vCenter
      state                  # Add or remove the host
      username=              # The username of the vSphere vCenter
      validate_certs         # Allows connection when SSL certificates are not
                               valid. Set to
                               false when
                               certificates are
                               not trusted
- name: Manage local users on an ESXi host
  action: vmware_local_user_manager
      hostname=              # The hostname or IP address of the vSphere
                               vCenter
      local_user_description   # Description for the user
      local_user_name=       # The local user name to be changed
      local_user_password    # The password to be set
      password=              # The password of the vSphere vCenter
      state                  # Indicate desired state of the user. If the user
                               already exists
                               when
                               `state=present',
                               the user info is
                               updated
      username=              # The username of the vSphere vCenter
      validate_certs         # Allows connection when SSL certificates are not
                               valid. Set to
                               false when
                               certificates are
                               not trusted
- name: Place a host into maintenance mode
  action: vmware_maintenancemode
      esxi_hostname=         # Name of the host as defined in vCenter
      evacuate               # If True, evacuate all powered off VMs
      hostname=              # The hostname or IP address of the vSphere
                               vCenter
      password=              # The password of the vSphere vCenter
      state                  # Enter or exit maintenance mode
      timeout                # Specify a timeout for the operation
      username=              # The username of the vSphere vCenter
      validate_certs         # Allows connection when SSL certificates are not
                               valid. Set to
                               false when
                               certificates are
                               not trusted
      vsan_mode              # Specify which VSAN compliant mode to enter
- name: Migrate a VMK interface from VSS to VDS
  action: vmware_migrate_vmk
      current_portgroup_name=   # Portgroup name VMK interface is currently on
      current_switch_name=   # Switch VMK interface is currently on
      device=                # VMK interface name
      esxi_hostname=         # ESXi hostname to be managed
      hostname=              # The hostname or IP address of the vSphere
                               vCenter
      migrate_portgroup_name=   # Portgroup name to migrate VMK interface to
      migrate_switch_name=   # Switch name to migrate VMK interface to
      password=              # The password of the vSphere vCenter
      username=              # The username of the vSphere vCenter
      validate_certs         # Allows connection when SSL certificates are not
                               valid. Set to
                               false when
                               certificates are
                               not trusted
- name: Create a VMware portgroup
  action: vmware_portgroup
      hostname=              # The hostname or IP address of the vSphere
                               vCenter
      network_policy         # Network policy specifies layer 2 security
                               settings for a
                               portgroup such as
                               promiscuous mode,
                               where guest
                               adapter listens
                               to all the
                               packets, MAC
                               address changes
                               and forged
                               transmits.
                               Settings are
                               promiscuous_mode,
                               forged_transmits,
                               mac_changes
      password=              # The password of the vSphere vCenter
      portgroup_name=        # Portgroup name to add
      switch_name=           # vSwitch to modify
      username=              # The username of the vSphere vCenter
      validate_certs         # Allows connection when SSL certificates are not
                               valid. Set to
                               false when
                               certificates are
                               not trusted
      vlan_id=               # VLAN ID to assign to portgroup
- name: Return canonical (NAA) from an ESXi host
  action: vmware_target_canonical_facts
      hostname=              # The hostname or IP address of the vSphere
                               vCenter
      password=              # The password of the vSphere vCenter
      target_id=             # The target id based on order of scsi device
      username=              # The username of the vSphere vCenter
      validate_certs         # Allows connection when SSL certificates are not
                               valid. Set to
                               false when
                               certificates are
                               not trusted
- name: Return basic facts pertaining to a vSphere virtual machine guest
  action: vmware_vm_facts
      hostname=              # The hostname or IP address of the vSphere
                               vCenter
      password=              # The password of the vSphere vCenter
      username=              # The username of the vSphere vCenter
      validate_certs         # Allows connection when SSL certificates are not
                               valid. Set to
                               false when
                               certificates are
                               not trusted
- name: Execute a process in VM
  action: vmware_vm_shell
      cluster                # The cluster hosting the VM Will help speed up
                               search
      datacenter             # The datacenter hosting the VM Will help speed up
                               search
      hostname=              # The hostname or IP address of the vSphere
                               vCenter
      password=              # The password of the vSphere vCenter
      username=              # The username of the vSphere vCenter
      validate_certs         # Allows connection when SSL certificates are not
                               valid. Set to
                               false when
                               certificates are
                               not trusted
      vm_id=                 # The identification for the VM
      vm_id_type             # The identification tag for the VM
      vm_password            # The password used to login to the VM.
      vm_shell=              # The absolute path to the program to start. On
                               Linux this is
                               executed via
                               bash.
      vm_shell_args          # The argument to the program.
      vm_shell_cwd           # The current working directory of the application
                               from which it
                               will be run
      vm_shell_env           # Comma seperated list of envirnoment variable,
                               specified in the
                               guest OS notation
      vm_username            # The user to connect to the VM.
- name: Migrates a virtual machine from a standard vswitch to distributed
  action: vmware_vm_vss_dvs_migrate
      dvportgroup_name=      # Name of the portgroup to migrate to the virtual
                               machine to
      hostname=              # The hostname or IP address of the vSphere
                               vCenter
      password=              # The password of the vSphere vCenter
      username=              # The username of the vSphere vCenter
      validate_certs         # Allows connection when SSL certificates are not
                               valid. Set to
                               false when
                               certificates are
                               not trusted
      vm_name=               # Name of the virtual machine to migrate to a
                               dvSwitch
- name: Create a VMware VMkernel Interface
  action: vmware_vmkernel
      enable_ft              # Enable the VMK interface for Fault Tolerance
                               traffic
      enable_mgmt            # Enable the VMK interface for Management traffic
      enable_vmotion         # Enable the VMK interface for vMotion traffic
      enable_vsan            # Enable the VMK interface for VSAN traffic
      hostname=              # The hostname or IP address of the vSphere
                               vCenter
      ip_address=            # The IP Address for the VMK interface
      mtu                    # The MTU for the VMK interface
      password=              # The password of the vSphere vCenter
      portgroup_name=        # The name of the portgroup for the VMK interface
      subnet_mask=           # The Subnet Mask for the VMK interface
      username=              # The username of the vSphere vCenter
      validate_certs         # Allows connection when SSL certificates are not
                               valid. Set to
                               false when
                               certificates are
                               not trusted
      vland_id=              # The VLAN ID for the VMK interface
      vswitch_name=          # The name of the vswitch where to add the VMK
                               interface
- name: Configure the VMkernel IP Address
  action: vmware_vmkernel_ip_config
      hostname=              # The hostname or IP address of the vSphere
                               vCenter
      ip_address=            # IP address to assign to VMkernel interface
      password=              # The password of the vSphere vCenter
      subnet_mask=           # Subnet Mask to assign to VMkernel interface
      username=              # The username of the vSphere vCenter
      validate_certs         # Allows connection when SSL certificates are not
                               valid. Set to
                               false when
                               certificates are
                               not trusted
      vmk_name=              # VMkernel interface name
- name: Move a virtual machine using vMotion
  action: vmware_vmotion
      destination_host=      # Name of the end host the VM should be running on
      hostname=              # The hostname or IP address of the vSphere
                               vCenter
      password=              # The password of the vSphere vCenter
      username=              # The username of the vSphere vCenter
      validate_certs         # Allows connection when SSL certificates are not
                               valid. Set to
                               false when
                               certificates are
                               not trusted
      vm_name=               # Name of the VM to perform a vMotion on
- name: Configure VSAN clustering on an ESXi host
  action: vmware_vsan_cluster
      cluster_uuid           # Desired cluster UUID
      hostname=              # The hostname or IP address of the vSphere
                               vCenter
      password=              # The password of the vSphere vCenter
      username=              # The username of the vSphere vCenter
      validate_certs         # Allows connection when SSL certificates are not
                               valid. Set to
                               false when
                               certificates are
                               not trusted
- name: Add a VMware Standard Switch to an ESXi host
  action: vmware_vswitch
      hostname=              # The hostname or IP address of the vSphere
                               vCenter
      mtu                    # MTU to configure on vswitch
      nic_name=              # vmnic name to attach to vswitch
      number_of_ports        # Number of port to configure on vswitch
      password=              # The password of the vSphere vCenter
      state                  # Add or remove the switch
      switch_name=           # vSwitch name to add
      username=              # The username of the vSphere vCenter
      validate_certs         # Allows connection when SSL certificates are not
                               valid. Set to
                               false when
                               certificates are
                               not trusted
- name: Copy a file to a vCenter datastore
  action: vsphere_copy
      datacenter=            # The datacenter on the vCenter server that holds
                               the datastore.
      datastore=             # The datastore on the vCenter server to push
                               files to.
      host=                  # The vCenter server on which the datastore is
                               available.
      login=                 # The login name to authenticate on the vCenter
                               server.
      password=              # The password to authenticate on the vCenter
                               server.
      path=                  # The file to push to the datastore on the vCenter
                               server.
      src=                   # The file to push to vCenter
      validate_certs         # If `no', SSL certificates will not be validated.
                               This should only
                               be set to `no'
                               when no other
                               option exists.
- name: Create/delete/manage a guest VM through VMware vSphere.
  action: vsphere_guest
      cluster                # The name of the cluster to create the VM in. By
                               default this is
                               derived from the
                               host you tell the
                               module to build
                               the guest on.
      esxi                   # Dictionary which includes datacenter and
                               hostname on which
                               the VM should be
                               created. For
                               standalone ESXi
                               hosts, ha-
                               datacenter should
                               be used as the
                               datacenter name
      force                  # Boolean. Allows you to run commands which may
                               alter the running
                               state of a guest.
                               Also used to
                               reconfigure and
                               destroy.
      from_template          # Specifies if the VM should be deployed from a
                               template
                               (mutually
                               exclusive with
                               'state'
                               parameter). No
                               guest
                               customization
                               changes to
                               hardware such as
                               CPU, RAM, NICs or
                               Disks can be
                               applied when
                               launching from
                               template.
      guest=                 # The virtual server name you wish to manage.
      password=              # Password of the user to connect to vcenter as.
      power_on_after_clone   # Specifies if the VM should be powered on after
                               the clone.
      resource_pool          # The name of the resource_pool to create the VM
                               in.
      snapshot_to_clone      # A string that when specified, will create a
                               linked clone copy
                               of the VM.
                               Snapshot must
                               already be taken
                               in vCenter.
      state                  # Indicate desired state of the vm. 'reconfigured'
                               only applies
                               changes to
                               'vm_cdrom',
                               'memory_mb', and
                               'num_cpus' in
                               vm_hardware
                               parameter. The
                               'memory_mb' and
                               'num_cpus'
                               changes are
                               applied to
                               powered-on vms
                               when hot-plugging
                               is enabled for
                               the guest.
      template_src           # Name of the source template to deploy from
      username=              # Username to connect to vcenter as.
      validate_certs         # Validate SSL certs.  Note, if running on python
                               without
                               SSLContext
                               support
                               (typically,
                               python < 2.7.9)
                               you will have to
                               set this to `no'
                               as pysphere does
                               not support
                               validating
                               certificates on
                               older python.
                               Prior to 2.1,
                               this module would
                               always validate
                               on python >=
                               2.7.9 and never
                               validate on
                               python <= 2.7.8.
      vcenter_hostname=      # The hostname of the vcenter server the module
                               will connect to,
                               to create the
                               guest.
      vm_disk                # A key, value list of disks and their sizes and
                               which datastore
                               to keep it in.
      vm_extra_config        # A key, value pair of any extra values you want
                               set or changed in
                               the vmx file of
                               the VM. Useful to
                               set advanced
                               options on the
                               VM.
      vm_hardware            # A key, value list of VM config settings. Must
                               include
                               ['memory_mb',
                               'num_cpus',
                               'osid', 'scsi'].
      vm_hw_version          # Desired hardware version identifier (for
                               example, "vmx-08"
                               for vms that
                               needs to be
                               managed with
                               vSphere Client).
                               Note that
                               changing hardware
                               version of
                               existing vm is
                               not supported.
      vm_nic                 # A key, value list of nics, their types and what
                               network to put
                               them on.
      vmware_guest_facts     # Gather facts from vCenter on a particular VM
- name: Run one or more commands on VyOS devices
  action: vyos_command
      commands=              # The ordered set of commands to execute on the
                               remote device
                               running VyOS.
                               The output from
                               the command
                               execution is
                               returned to the
                               playbook.  If the
                               `wait_for'
                               argument is
                               provided, the
                               module is not
                               returned until
                               the condition is
                               satisfied or the
                               number of retries
                               has been
                               exceeded.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      interval               # Configures the interval in seconds to wait
                               between `retries'
                               of the command.
                               If the command
                               does not pass the
                               specified
                               conditional, the
                               interval
                               indicates how to
                               long to wait
                               before trying the
                               command again.
      match                  # The `match' argument is used in conjunction with
                               the `wait_for'
                               argument to
                               specify the match
                               policy.  Valid
                               values are `all'
                               or `any'.  If the
                               value is set to
                               `all' then all
                               conditionals in
                               the wait_for must
                               be satisfied.  If
                               the value is set
                               to `any' then
                               only one of the
                               values must be
                               satisfied.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.   The
                               value of
                               `password' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
      provider               # Convenience method that allows all `vyos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      retries                # Specifies the number of retries a command should
                               be tried before
                               it is considered
                               failed.  The
                               command is run on
                               the target device
                               every retry and
                               evaluated against
                               the `wait_for'
                               conditionals.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               The value of
                               `ssh_keyfile' is
                               the path to the
                               key used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      timeout                # Specifies idle timeout for the connection.
                               Useful if the
                               console freezes
                               before
                               continuing. For
                               example when
                               saving
                               configurations.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
      wait_for               # Specifies what to evaluate from the output of
                               the command and
                               what conditionals
                               to apply.  This
                               argument will
                               cause the task to
                               wait for a
                               particular
                               conditional to be
                               true before
                               moving forward.
                               If the
                               conditional is
                               not true by the
                               configured
                               `retries', the
                               task fails.  See
                               examples.
- name: Manage VyOS configuration on remote device
  action: vyos_config
      backup                 # The `backup' argument will backup the current
                               devices active
                               configuration to
                               the Ansible
                               control host
                               prior to making
                               any changes.  The
                               backup file will
                               be located in the
                               backup folder in
                               the root of the
                               playbook
      comment                # Allows a commit description to be specified to
                               be included when
                               the configuration
                               is committed.  If
                               the configuration
                               is not changed or
                               committed, this
                               argument is
                               ignored.
      config                 # The `config' argument specifies the base
                               configuration to
                               use to compare
                               against the
                               desired
                               configuration.
                               If this value is
                               not specified,
                               the module will
                               automatically
                               retrieve the
                               current active
                               configuration
                               from the remote
                               device.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      lines                  # The ordered set of configuration lines to be
                               managed and
                               compared with the
                               existing
                               configuration on
                               the remote
                               device.
      match                  # The `match' argument controls the method used to
                               match against the
                               current active
                               configuration.
                               By default, the
                               desired config is
                               matched against
                               the active config
                               and the deltas
                               are loaded.  If
                               the `match'
                               argument is set
                               to `none' the
                               active
                               configuration is
                               ignored and the
                               configuration is
                               always loaded.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.   The
                               value of
                               `password' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
      provider               # Convenience method that allows all `vyos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      save                   # The `save' argument controls whether or not
                               changes made to
                               the active
                               configuration are
                               saved to disk.
                               This is
                               independent of
                               committing the
                               config.  When set
                               to True, the
                               active
                               configuration is
                               saved.
      src                    # The `src' argument specifies the path to the
                               source config
                               file to load.
                               The source config
                               file can either
                               be in bracket
                               format or set
                               format.  The
                               source file can
                               include Jinja2
                               template
                               variables.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               The value of
                               `ssh_keyfile' is
                               the path to the
                               key used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      timeout                # Specifies idle timeout for the connection.
                               Useful if the
                               console freezes
                               before
                               continuing. For
                               example when
                               saving
                               configurations.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Collect facts from remote devices running OS
  action: vyos_facts
      gather_subset          # When supplied, this argument will restrict the
                               facts collected
                               to a given
                               subset.  Possible
                               values for this
                               argument include
                               all, hardware,
                               config, and
                               interfaces.  Can
                               specify a list of
                               values to include
                               a larger subset.
                               Values can also
                               be used with an
                               initial `[!]' to
                               specify that a
                               specific subset
                               should not be
                               collected.
      host=                  # Specifies the DNS host name or address for
                               connecting to the
                               remote device
                               over the
                               specified
                               transport.  The
                               value of host is
                               used as the
                               destination
                               address for the
                               transport.
      password               # Specifies the password to use to authenticate
                               the connection to
                               the remote
                               device.   The
                               value of
                               `password' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_PASSWORD'
                               will be used
                               instead.
      port                   # Specifies the port to use when building the
                               connection to the
                               remote device.
      provider               # Convenience method that allows all `vyos'
                               arguments to be
                               passed as a dict
                               object.  All
                               constraints
                               (required,
                               choices, etc)
                               must be met
                               either by
                               individual
                               arguments or
                               values in this
                               dict.
      ssh_keyfile            # Specifies the SSH key to use to authenticate the
                               connection to the
                               remote device.
                               The value of
                               `ssh_keyfile' is
                               the path to the
                               key used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_SSH_KEYFILE'
                               will be used
                               instead.
      timeout                # Specifies idle timeout for the connection.
                               Useful if the
                               console freezes
                               before
                               continuing. For
                               example when
                               saving
                               configurations.
      username               # Configures the username to use to authenticate
                               the connection to
                               the remote
                               device.  The
                               value of
                               `username' is
                               used to
                               authenticate the
                               SSH session. If
                               the value is not
                               specified in the
                               task, the value
                               of environment
                               variable `ANSIBLE
                               _NET_USERNAME'
                               will be used
                               instead.
- name: Waits for a condition before continuing.
  action: wait_for
      connect_timeout        # maximum number of seconds to wait for a
                               connection to
                               happen before
                               closing and
                               retrying
      delay                  # number of seconds to wait before starting to
                               poll
      exclude_hosts          # list of hosts or IPs to ignore when looking for
                               active TCP
                               connections for
                               `drained' state
      host                   # A resolvable hostname or IP address to wait for
      path                   # path to a file on the filesytem that must exist
                               before continuing
      port                   # port number to poll
      search_regex           # Can be used to match a string in either a file
                               or a socket
                               connection.
                               Defaults to a
                               multiline regex.
      state                  # either `present', `started', or `stopped',
                               `absent', or
                               `drained' When
                               checking a port
                               `started' will
                               ensure the port
                               is open,
                               `stopped' will
                               check that it is
                               closed, `drained'
                               will check for
                               active
                               connections When
                               checking for a
                               file or a search
                               string `present'
                               or `started' will
                               ensure that the
                               file or string is
                               present before
                               continuing,
                               `absent' will
                               check that file
                               is absent or
                               removed
      timeout                # maximum number of seconds to wait for
- name: Send a magic Wake-on-LAN (WoL) broadcast packet
  action: wakeonlan
      broadcast              # Network broadcast address to use for
                               broadcasting
                               magic Wake-on-LAN
                               packet
      mac=                   # MAC address to send Wake-on-LAN broadcast packet
                               for
      port                   # UDP port to use for magic Wake-on-LAN packet
- name: Add or remove applications on a Webfaction host
  action: webfaction_app
      autostart              # Whether the app should restart with an
                               autostart.cgi
                               script
      extra_info             # Any extra parameters required by the app
      login_name=            # The webfaction account to use
      login_password=        # The webfaction password to use
      machine                # The machine name to use (optional for accounts
                               with only one
                               machine)
      name=                  # The name of the application
      port_open              # IF the port should be opened
      state                  # Whether the application should exist
      type=                  # The type of application to create. See the
                               Webfaction docs
                               at http://docs.we
                               bfaction.com
                               /xmlrpc-
                               api/apps.html for
                               a list.
- name: Add or remove a database on Webfaction
  action: webfaction_db
      login_name=            # The webfaction account to use
      login_password=        # The webfaction password to use
      machine                # The machine name to use (optional for accounts
                               with only one
                               machine)
      name=                  # The name of the database
      password               # The password for the new database user.
      state                  # Whether the database should exist
      type=                  # The type of database to create.
- name: Add or remove domains and subdomains on Webfaction
  action: webfaction_domain
      login_name=            # The webfaction account to use
      login_password=        # The webfaction password to use
      name=                  # The name of the domain
      state                  # Whether the domain should exist
      subdomains             # Any subdomains to create.
- name: Add or remove mailboxes on Webfaction
  action: webfaction_mailbox
      login_name=            # The webfaction account to use
      login_password=        # The webfaction password to use
      mailbox_name=          # The name of the mailbox
      mailbox_password=      # The password for the mailbox
      state                  # Whether the mailbox should exist
- name: Add or remove a website on a Webfaction host
  action: webfaction_site
      host=                  # The webfaction host on which the site should be
                               created.
      https                  # Whether or not to use HTTPS
      login_name=            # The webfaction account to use
      login_password=        # The webfaction password to use
      name=                  # The name of the website
      site_apps              # A mapping of URLs to apps
      state                  # Whether the website should exist
      subdomains             # A list of subdomains associated with this site.
- name: Set file/directory permissions for a system user or group.
  action: win_acl
      inherit                # Inherit flags on the ACL rules.  Can be
                               specified as a
                               comma separated
                               list (Ex. "Contai
                               nerInherit,
                               ObjectInherit").
                               For more
                               information on
                               the choices see
                               MSDN
                               InheritanceFlags
                               Enumeration.
      path=                  # File or Directory
      propagation            # Propagation flag on the ACL rules.  For more
                               information on
                               the choices see
                               MSDN
                               PropagationFlags
                               Enumeration.
      rights=                # The rights/permissions that are to be
                               allowed/denyed
                               for the specified
                               user or group for
                               the given src
                               file or
                               directory.  Can
                               be entered as a
                               comma separated
                               list (Ex.
                               "Modify, Delete,
                               ExecuteFile").
                               For more
                               information on
                               the choices see
                               MSDN
                               FileSystemRights
                               Enumeration.
      state                  # Specify whether to add `present' or remove
                               `absent' the
                               specified access
                               rule
      type=                  # Specify whether to allow or deny the rights
                               specified
      user=                  # User or Group to add specified rights to act on
                               src file/folder
- name: Change ACL inheritance
  action: win_acl_inheritance
      path=                  # Path to be used for changing inheritance
      reorganize             # For P(state) = `absent', indicates if the
                               inherited ACE's
                               should be copied
                               from the parent
                               directory. This
                               is necessary (in
                               combination with
                               removal) for a
                               simple ACL
                               instead of using
                               multiple ACE deny
                               entries. For
                               P(state) =
                               `present',
                               indicates if the
                               inherited ACE's
                               should be
                               deduplicated
                               compared to the
                               parent directory.
                               This removes
                               complexity of the
                               ACL structure.
      state                  # Specify whether to enable `present' or disable
                               `absent' ACL
                               inheritance
- name: Installs packages using chocolatey
  action: win_chocolatey
      allow_empty_checksums   # Allow empty Checksums to be used
      force                  # Forces install of the package (even if it
                               already exists).
                               Using Force will
                               cause ansible to
                               always report
                               that a change was
                               made
      ignore_checksums       # Ignore Checksums
      ignore_dependencies    # Ignore dependencies, only install/upgrade the
                               package itself
      install_args           # Arguments to pass to the native installer
      name=                  # Name of the package to be installed
      params                 # Parameters to pass to the package
      source                 # Specify source rather than using default
                               chocolatey
                               repository
      state                  # State of the package on the system
      upgrade                # If package is already installed it, try to
                               upgrade to the
                               latest version or
                               to the specified
                               version
      version                # Specific version of the package to be installed
                               Ignored when
                               state == 'absent'
- name: Executes a command on a remote Windows node
  action: win_command
      chdir                  # set the specified path as the current working
                               directory before
                               executing a
                               command
      creates                # a path or path filter pattern; when the
                               referenced path
                               exists on the
                               target host, the
                               task will be
                               skipped.
      free_form=             # the win_command module takes a free form command
                               to run.  There is
                               no parameter
                               actually named
                               'free form'. See
                               the examples!
      removes                # a path or path filter pattern; when the
                               referenced path
                               *does not* exist
                               on the target
                               host, the task
                               will be skipped.
- name: Copies files to remote locations on windows hosts.
  action: win_copy
      dest=                  # Remote absolute path where the file should be
                               copied to. If src
                               is a directory,
                               this must be a
                               directory too.
                               Use \ for path
                               separators.
      src                    # Local path to a file to copy to the remote
                               server; can be
                               absolute or
                               relative. If path
                               is a directory,
                               it is copied
                               recursively. In
                               this case, if
                               path ends with
                               "/", only inside
                               contents of that
                               directory are
                               copied to
                               destination.
                               Otherwise, if it
                               does not end with
                               "/", the
                               directory itself
                               with all contents
                               is copied. This
                               behavior is
                               similar to Rsync.
- name: Modifies environment variables on windows hosts.
  action: win_environment
      level=                 # The level at which to set the environment
                               variable. Use
                               'machine' to set
                               for all users.
                               Use 'user' to set
                               for the current
                               user that ansible
                               is connected as.
                               Use 'process' to
                               set for the
                               current process.
                               Probably not that
                               useful.
      name=                  # The name of the environment variable
      state                  # present to ensure environment variable is set,
                               or absent to
                               ensure it is
                               removed
      value                  # The value to store in the environment variable.
                               Can be omitted
                               for state=absent
- name: Installs and uninstalls Windows Features on Windows Server
  action: win_feature
      include_management_tools   # Adds the corresponding management tools to the
                               specified feature
      include_sub_features   # Adds all subfeatures of the specified feature
      name=                  # Names of roles or features to install as a
                               single feature or
                               a comma-separated
                               list of features
      restart                # Restarts the computer automatically when
                               installation is
                               complete, if
                               restarting is
                               required by the
                               roles or features
                               installed.
      source                 # Specify a source to install the feature from
      state                  # State of the features or roles on the system
- name: Creates, touches or removes files or directories.
  action: win_file
      path=                  # path to the file being managed.  Aliases:
                               `dest', `name'
      state                  # If `directory', all immediate subdirectories
                               will be created
                               if they do not
                               exist. If `file',
                               the file will NOT
                               be created if it
                               does not exist,
                               see the [copy] or
                               [template] module
                               if you want that
                               behavior.  If
                               `absent',
                               directories will
                               be recursively
                               deleted, and
                               files will be
                               removed. If
                               `touch', an empty
                               file will be
                               created if the
                               c(path) does not
                               exist, while an
                               existing file or
                               directory will
                               receive updated
                               file access and
                               modification
                               times (similar to
                               the way `touch`
                               works from the
                               command line).
- name: Get DLL or EXE file build version
  action: win_file_version
      path=                  # File to get version(provide absolute path)
- name: Windows firewall automation
  action: win_firewall_rule
      action=                # what to do with the items this rule is for
      description            # description for the firewall rule
      direction=             # is this rule for inbound or outbound trafic
      enable                 # is this firewall rule enabled or disabled
      force                  # Enforces the change if a rule with different
                               values exists
      localip                # the local ip address this rule applies to
      localport              # the local port this rule applies to
      name=                  # the rules name
      profile                # the profile this rule applies to, e.g.
                               Domain,Private,Pu
                               blic
      program                # the program this rule applies to
      protocol               # the protocol this rule applies to
      remoteip               # the remote ip address/range this rule applies to
      remoteport             # the remote port this rule applies to
      service                # the service this rule applies to
      state=                 # should this rule be added or removed
- name: Fetches a file from a given URL
  action: win_get_url
      dest=                  # The absolute path of the location to save the
                               file at the URL.
                               Be sure to
                               include a
                               filename and
                               extension as
                               appropriate.
      force                  # If `yes', will always download the file.  If
                               `no', will only
                               download the file
                               if it does not
                               exist or the
                               remote file has
                               been modified
                               more recently
                               than the local
                               file.  This works
                               by sending an
                               http HEAD request
                               to retrieve last
                               modified time of
                               the requested
                               resource, so for
                               this to work, the
                               remote web server
                               must support HEAD
                               requests.
      password               # Basic authentication password
      proxy_password         # Proxy authentication password
      proxy_url              # The full URL of the proxy server to download
                               through.
      proxy_username         # Proxy authentication username
      skip_certificate_validation   # Skip SSL certificate validation if true
      url=                   # The full URL of a file to download
      username               # Basic authentication username
- name: Add and remove local groups
  action: win_group
      description            # Description of the group
      name=                  # Name of the group
      state                  # Create or remove the group
- name: Configures a virtual directory in IIS.
  action: win_iis_virtualdirectory
      application            # The application under which the virtual
                               directory is
                               created or
                               exists.
      name=                  # The name of the virtual directory to create or
                               remove
      physical_path          # The physical path to the folder in which the new
                               virtual directory
                               is created. The
                               specified folder
                               must already
                               exist.
      site=                  # The site name under which the virtual directory
                               is created or
                               exists.
      state                  # Whether to add or remove the specified virtual
                               directory
- name: Configures a IIS Web application.
  action: win_iis_webapplication
      application_pool       # The application pool in which the new site
                               executes.
      name=                  # Name of the Web applicatio
      physical_path          # The physical path on the remote host to use for
                               the new
                               applicatiojn. The
                               specified folder
                               must already
                               exist.
      site=                  # Name of the site on which the application is
                               created.
      state                  # State of the web application
- name: Configures a IIS Web Application Pool.
  action: win_iis_webapppool
      attributes             # Application Pool attributes from string where
                               attributes are
                               seperated by a
                               pipe and
                               attribute
                               name/values by
                               colon Ex.
                               "foo:1|bar:2"
      name=                  # Names of application pool
      state                  # State of the binding
- name: Configures a IIS Web site.
  action: win_iis_webbinding
      certificate_hash       # Certificate hash for the SSL binding. The
                               certificate hash
                               is the unique
                               identifier for
                               the certificate.
      certificate_store_name   # Name of the certificate store where the
                               certificate for
                               the binding is
                               located.
      host_header            # The host header to bind to / use for the new
                               site.
      ip                     # The IP address to bind to / use for the new
                               site.
      name=                  # Names of web site
      port                   # The port to bind to / use for the new site.
      protocol               # The protocol to be used for the Web binding
                               (usually HTTP,
                               HTTPS, or FTP).
      state                  # State of the binding
- name: Configures a IIS Web site.
  action: win_iis_website
      application_pool       # The application pool in which the new site
                               executes.
      hostname               # The host header to bind to / use for the new
                               site.
      ip                     # The IP address to bind to / use for the new
                               site.
      name=                  # Names of web site
      parameters             # Custom site Parameters from string where
                               properties are
                               seperated by a
                               pipe and property
                               name/values by
                               colon Ex.
                               "foo:1|bar:2"
      physical_path          # The physical path on the remote host to use for
                               the new site. The
                               specified folder
                               must already
                               exist.
      port                   # The port to bind to / use for the new site.
      site_id                # Explicitly set the IIS numeric ID for a site.
                               Note that this
                               value cannot be
                               changed after the
                               website has been
                               created.
      ssl                    # Enables HTTPS binding on the site..
      state                  # State of the web site
- name: Ensure a particular line is in a file, or replace an existing line using a back-referenced regular expression.
  action: win_lineinfile
      backrefs               # Used with `state=present'. If set, line can
                               contain
                               backreferences
                               (both positional
                               and named) that
                               will get
                               populated if the
                               `regexp' matches.
                               This flag changes
                               the operation of
                               the module
                               slightly;
                               `insertbefore'
                               and `insertafter'
                               will be ignored,
                               and if the
                               `regexp' doesn't
                               match anywhere in
                               the file, the
                               file will be left
                               unchanged. If the
                               `regexp' does
                               match, the last
                               matching line
                               will be replaced
                               by the expanded
                               line parameter.
      backup                 # Create a backup file including the timestamp
                               information so
                               you can get the
                               original file
                               back if you
                               somehow clobbered
                               it incorrectly.
      create                 # Used with `state=present'. If specified, the
                               file will be
                               created if it
                               does not already
                               exist. By default
                               it will fail if
                               the file is
                               missing.
      dest=                  # The path of the file to modify. Note that the
                               Windows path
                               delimiter '' must
                               be escaped as '\'
                               (see examples
                               below)
      encoding               # Specifies the encoding of the source text file
                               to operate on
                               (and thus what
                               the output
                               encoding will
                               be). The default
                               of `auto' will
                               cause the module
                               to auto-detect
                               the encoding of
                               the source file
                               and ensure that
                               the modified file
                               is written with
                               the same
                               encoding. An
                               explicit encoding
                               can be passed as
                               a string that is
                               a valid value to
                               pass to the .NET
                               framework System.
                               Text.Encoding.Get
                               Encoding() method
                               - see https://msd
                               n.microsoft.com
                               /en-us/library/sy
                               stem.text.encodin
                               g%28v=vs.110%29.a
                               spx. This is
                               mostly useful
                               with `create=yes'
                               if you want to
                               create a new file
                               with a specific
                               encoding. If
                               `create=yes' is
                               specified without
                               a specific
                               encoding, the
                               default encoding
                               (UTF-8, no BOM)
                               will be used.
      insertafter            # Used with `state=present'. If specified, the
                               line will be
                               inserted after
                               the last match of
                               specified regular
                               expression. A
                               special value is
                               available; `EOF'
                               for inserting the
                               line at the end
                               of the file. If
                               specified regular
                               expression has no
                               matches, EOF will
                               be used instead.
                               May not be used
                               with `backrefs'.
      insertbefore           # Used with `state=present'. If specified, the
                               line will be
                               inserted before
                               the last match of
                               specified regular
                               expression. A
                               value is
                               available; `BOF'
                               for inserting the
                               line at the
                               beginning of the
                               file. If
                               specified regular
                               expression has no
                               matches, the line
                               will be inserted
                               at the end of the
                               file.  May not be
                               used with
                               `backrefs'.
      line                   # Required for `state=present'. The line to
                               insert/replace
                               into the file. If
                               `backrefs' is
                               set, may contain
                               backreferences
                               that will get
                               expanded with the
                               `regexp' capture
                               groups if the
                               regexp matches.
      newline                # Specifies the line separator style to use for
                               the modified
                               file. This
                               defaults to the
                               windows line
                               separator ( ).
                               Note that the
                               indicated line
                               separator will be
                               used for file
                               output regardless
                               of the original
                               line separator
                               that appears in
                               the input file.
      regexp                 # The regular expression to look for in every line
                               of the file. For
                               `state=present',
                               the pattern to
                               replace if found;
                               only the last
                               line found will
                               be replaced. For
                               `state=absent',
                               the pattern of
                               the line to
                               remove.  Uses
                               .NET compatible
                               regular
                               expressions; see 
                               https://msdn.micr
                               osoft.com/en-us/l
                               ibrary/hs600312%2
                               8v=vs.110%29.aspx
                               .
      state                  # Whether the line should be there or not.
      validate               # Validation to run before copying into place.
                               Use %s in the
                               command to
                               indicate the
                               current file to
                               validate. The
                               command is passed
                               securely so shell
                               features like
                               expansion and
                               pipes won't work.
- name: Installs and uninstalls Windows MSI files
  action: win_msi
      creates                # Path to a file created by installing the MSI to
                               prevent from
                               attempting to
                               reinstall the
                               package on every
                               run
      extra_args             # Additional arguments to pass to the msiexec.exe
                               command
      path=                  # File system path to the MSI file to install
      state                  # Whether the MSI file should be installed or
                               uninstalled
      wait                   # Specify whether to wait for install or uninstall
                               to complete
                               before
                               continuing.
- name: NSSM - the Non-Sucking Service Manager
  action: win_nssm
      app_parameters         # Parameters to be passed to the application when
                               it starts
      application            # The application binary to run as a service
                               Specify this
                               whenever the
                               service may need
                               to be installed
                               (state: present,
                               started, stopped,
                               restarted) Note
                               that the
                               application name
                               must look like
                               the following, if
                               the directory
                               includes spaces:
                               nssm install
                               service
                               "c:\Program
                               Files\app.exe\"
                               "C:\Path with
                               spaces\" See
                               commit 0b386fc198
                               4ab74ee59b7bed14b
                               7e8f57212c22b in
                               the nssm.git
                               project for more
                               info (https://git
                               .nssm.cc/?p=nssm.
                               git;a=commit;h=0b
                               386fc1984ab74ee59
                               b7bed14b7e8f57212
                               c22b)
      dependencies           # Service dependencies that has to be started to
                               trigger startup,
                               separated by
                               comma.
      name=                  # Name of the service to operate on
      password               # Password to be used for service startup
      start_mode=            # If `auto' is selected, the service will start at
                               bootup. `manual'
                               means that the
                               service will
                               start only when
                               another service
                               needs it.
                               `disabled' means
                               that the service
                               will stay off,
                               regardless if it
                               is needed or not.
      state                  # State of the service on the system Note that
                               NSSM actions like
                               "pause",
                               "continue",
                               "rotate" do not
                               fit the
                               declarative style
                               of ansible, so
                               these should be
                               implemented via
                               the ansible
                               command module
      stderr_file            # Path to receive error output
      stdout_file            # Path to receive output
      user                   # User to be used for service startup
- name: Set owner
  action: win_owner
      path=                  # Path to be used for changing owner
      recurse                # Indicates if the owner should be changed
                               recursively
      user=                  # Name to be used for changing owner
- name: Installs/Uninstalls an installable package, either from local file system or url
  action: win_package
      arguments              # Any arguments the installer needs
      name                   # Name of the package, if name isn't specified the
                               path will be used
                               for log messages
      path=                  # Location of the package to be installed (either
                               on file system,
                               network share or
                               url)
      product_id=            # product id of the installed package (used for
                               checking if
                               already
                               installed) You
                               can find product
                               ids for installed
                               programs in the
                               windows registry
                               either in `HKLM:S
                               oftware\Microsoft
                               \Windows\CurrentV
                               ersion\Uninstall'
                               or for 32 bit
                               programs `HKLM:So
                               ftware\Wow6432Nod
                               e\Microsoft\Windo
                               ws\CurrentVersion
                               \Uninstall''
      state                  # Install or Uninstall
      user_name              # Username of an account with access to the
                               package if its
                               located on a file
                               share. Only
                               needed if the
                               winrm user
                               doesn't have
                               access to the
                               package. Also
                               specify
                               user_password for
                               this to function
                               properly.
      user_password          # Password of an account with access to the
                               package if its
                               located on a file
                               share. Only
                               needed if the
                               winrm user
                               doesn't have
                               access to the
                               package. Also
                               specify user_name
                               for this to
                               function
                               properly.
- name: A windows version of the classic ping module.
  action: win_ping
      data                   # Alternate data to return instead of 'pong'
- name: Reboot a windows machine
  action: win_reboot
      connect_timeout_sec    # Maximum seconds to wait for a single successful
                               TCP connection to
                               the WinRM
                               endpoint before
                               trying again
      pre_reboot_delay_sec   # Seconds for shutdown to wait before requesting
                               reboot
      reboot_timeout_sec     # Maximum seconds to wait for machine to re-appear
                               on the network
                               and respond to a
                               test command This
                               timeout is
                               evaluated
                               separately for
                               both network
                               appearance and
                               test command
                               success (so
                               maximum clock
                               time is actually
                               twice this value)
      shutdown_timeout_sec   # Maximum seconds to wait for shutdown to occur
                               Increase this
                               timeout for very
                               slow hardware,
                               large update
                               applications, etc
      test_command           # Command to expect success for to determine the
                               machine is ready
                               for management
- name: Add, Edit, or Remove Registry Keys and Values
  action: win_regedit
      data                   # Registry Value Data.  Binary data should be
                               expressed a yaml
                               byte array or as
                               comma separated
                               hex values.  An
                               easy way to
                               generate this is
                               to run
                               `regedit.exe' and
                               use the `Export'
                               option to save
                               the registry
                               values to a file.
                               In the exported
                               file binary
                               values will look
                               like `hex:be,ef,b
                               e,ef'.  The
                               `hex:' prefix is
                               optional.
      datatype               # Registry Value Data Type
      key=                   # Name of Registry Key
      state                  # State of Registry Value
      value=                 # Name of Registry Value
- name: Merges the contents of a registry file into the windows registry
  action: win_regmerge
      compare_key            # The parent key to use when comparing the
                               contents of the
                               registry to the
                               contents of the
                               file.  Needs to
                               be in HKLM or
                               HKCU part of
                               registry.  Use a
                               PS-Drive style
                               path for example
                               HKLM:\SOFTWARE
                               not HKEY_LOCAL_MA
                               CHINE\SOFTWARE If
                               not supplied, or
                               the registry key
                               is not found, no
                               comparison will
                               be made, and the
                               module will
                               report changed.
      path=                  # The full path including file name to the
                               registry file on
                               the remote
                               machine to be
                               merged
- name: Synchronizes the contents of two directories using Robocopy.
  action: win_robocopy
      dest=                  # Destination file/directory to sync (Will receive
                               contents of src).
      flags                  # Directly supply Robocopy flags. If set, purge
                               and recurse will
                               be ignored.
      purge                  # Deletes any files/directories found in the
                               destination that
                               do not exist in
                               the source
                               (Toggles the
                               `/purge` flag to
                               RoboCopy). If
                               "flags" is set,
                               this will be
                               ignored.
      recurse                # Includes all subdirectories (Toggles the `/e`
                               flag to
                               RoboCopy). If
                               "flags" is set,
                               this will be
                               ignored.
      src=                   # Source file/directory to sync.
- name: Manage scheduled tasks
  action: win_scheduled_task
      argument               # Arguments to provide scheduled task action
      days_of_week           # Days of the week to run a weekly task, not
                               idempotent
      description            # The description for the scheduled task
      enabled                # Enable/disable the task
      execute                # Command the scheduled task should execute
      frequency              # The frequency of the command, not idempotent
      name=                  # Name of the scheduled task
      path                   # Folder path of scheduled task
      state=                 # State that the task should become
      time                   # Time to execute scheduled task, not idempotent
      user                   # User to run scheduled task as
- name: Manages Windows services
  action: win_service
      name=                  # Name of the service
      start_mode             # Set the startup type for the service
      state                  # `started'/`stopped' are idempotent actions that
                               will not run
                               commands unless
                               necessary.
                               `restarted' will
                               always bounce the
                               service.
- name: Manage Windows shares
  action: win_share
      change                 # Specify user list that should get read and write
                               access on share,
                               separated by
                               comma.
      deny                   # Specify user list that should get no access,
                               regardless of
                               implied access on
                               share, separated
                               by comma.
      description            # Share description
      full                   # Specify user list that should get full access on
                               share, separated
                               by comma.
      list                   # Specify whether to allow or deny file listing,
                               in case user got
                               no permission on
                               share
      name=                  # Share name
      path=                  # Share directory
      read                   # Specify user list that should get read access on
                               share, separated
                               by comma.
      state                  # Specify whether to add `present' or remove
                               `absent' the
                               specified share
- name: Execute shell commands on target hosts.
  action: win_shell
      chdir                  # set the specified path as the current working
                               directory before
                               executing a
                               command
      creates                # a path or path filter pattern; when the
                               referenced path
                               exists on the
                               target host, the
                               task will be
                               skipped.
      executable             # change the shell used to execute the command
                               (eg, `cmd'). The
                               target shell must
                               accept a `/c'
                               parameter
                               followed by the
                               raw command line
                               to be executed.
      free_form=             # the win_shell module takes a free form command
                               to run.  There is
                               no parameter
                               actually named
                               'free form'. See
                               the examples!
      removes                # a path or path filter pattern; when the
                               referenced path
                               *does not* exist
                               on the target
                               host, the task
                               will be skipped.
- name: returns information about a Windows file
  action: win_stat
      get_checksum           # Whether to return a checksum of the file (only
                               sha1 currently
                               supported)
      get_md5                # Whether to return the checksum sum of the file.
                               As of Ansible 1.9
                               this is no longer
                               a MD5, but a SHA1
                               instead.
      path=                  # The full path of the file/object to get the
                               facts of; both
                               forward and back
                               slashes are
                               accepted.
- name: Templates a file out to a remote server.
  action: win_template
      dest=                  # Location to render the template to on the remote
                               machine.
      src=                   # Path of a Jinja2 formatted template on the local
                               server. This can
                               be a relative or
                               absolute path.
- name: Sets Windows machine timezone
  action: win_timezone
      timezone=              # Timezone to set to.  Example Central Standard
                               Time
- name: Unzips compressed files and archives on the Windows node
  action: win_unzip
      creates                # If this file or directory exists the specified
                               src will not be
                               extracted.
      dest=                  # Destination of zip file (provide absolute path
                               of directory). If
                               it does not
                               exist, the
                               directory will be
                               created.
      recurse                # Recursively expand zipped files within the src
                               file.
      rm                     # Remove the zip file, after unzipping
      src=                   # File to be unzipped (provide absolute path)
- name: Download and install Windows updates
  action: win_updates
      category_names         # A scalar or list of categories to install
                               updates from
      log_path               # If set, win_updates will append update progress
                               to the specified
                               file. The
                               directory must
                               already exist.
      state                  # Controls whether found updates are returned as a
                               list or actually
                               installed. This
                               module also
                               supports Ansible
                               check mode, which
                               has the same
                               effect as setting
                               state=searched
- name: Interacts with webservices.
  action: win_uri
      body                   # The body of the HTTP request/response to the web
                               service.
      content_type           # Sets the "Content-Type" header.
      headers                # Key Value pairs for headers. Example "Host:
                               www.somesite.com"
      method                 # The HTTP Method of the request or response.
      url                    # HTTP or HTTPS URL in the form of
                               (http|https)://ho
                               st.domain:port/pa
                               th
      use_basic_parsing      # This module relies upon 'Invoke-WebRequest',
                               which by default
                               uses the Internet
                               Explorer Engine
                               to parse a
                               webpage. There's
                               an edge-case
                               where if a user
                               hasn't run IE
                               before, this will
                               fail. The only
                               advantage to
                               using the
                               Internet Explorer
                               praser is that
                               you can traverse
                               the DOM in a
                               powershell
                               script. That
                               isn't useful for
                               Ansible, so by
                               default we toggle
                               'UseBasicParsing'
                               . However, you
                               can toggle that
                               off here.
- name: Manages local Windows user accounts
  action: win_user
      account_disabled       # `yes' will disable the user account.  `no' will
                               clear the
                               disabled flag.
      account_locked         # `no' will unlock the user account if locked.
      description            # Description of the user
      fullname               # Full name of the user
      groups                 # Adds or removes the user from this comma-
                               separated lis of
                               groups, depending
                               on the value of
                               `groups_action'.
                               When
                               `groups_action'
                               is `replace' and
                               `groups' is set
                               to the empty
                               string
                               ('groups='), the
                               user is removed
                               from all groups.
      groups_action          # If `replace', the user is added as a member of
                               each group in
                               `groups' and
                               removed from any
                               other groups.  If
                               `add', the user
                               is added to each
                               group in `groups'
                               where not already
                               a member.  If
                               `remove', the
                               user is removed
                               from each group
                               in `groups'.
      name=                  # Name of the user to create, remove or modify.
      password               # Optionally set the user's password to this
                               (plain text)
                               value.
      password_expired       # `yes' will require the user to change their
                               password at next
                               login. `no' will
                               clear the expired
                               password flag.
      password_never_expires   # `yes' will set the password to never expire.
                               `no' will allow
                               the password to
                               expire.
      state                  # When `present', creates or updates the user
                               account.  When
                               `absent', removes
                               the user account
                               if it exists.
                               When `query' (new
                               in 1.9),
                               retrieves the
                               user account
                               details without
                               making any
                               changes.
      update_password        # `always' will update passwords if they differ.
                               `on_create' will
                               only set the
                               password for
                               newly created
                               users.
      user_cannot_change_password   # `yes' will prevent the user from changing their
                               password.  `no'
                               will allow the
                               user to change
                               their password.
- name: Installs packages using Web Platform Installer command-line
  action: win_webpicmd
      name=                  # Name of the package to be installed
- name: set/retrieve extended attributes
  action: xattr
      follow                 # if yes, dereferences symlinks and sets/gets
                               attributes on
                               symlink target,
                               otherwise acts on
                               symlink itself.
      key                    # The name of a specific Extended attribute key to
                               set/retrieve
      name=                  # The full path of the file/object to get the
                               facts of
      state                  # defines which state you want to do. `read'
                               retrieves the
                               current value for
                               a `key' (default)
                               `present' sets
                               `name' to
                               `value', default
                               if value is set
                               `all' dumps all
                               data `keys'
                               retrieves all
                               keys `absent'
                               deletes the key
      value                  # The value to set the named name/key to, it
                               automatically
                               sets the `state'
                               to 'set'
- name: Manages packages with the `yum' package manager
  action: yum
      conf_file              # The remote yum configuration file to use for the
                               transaction.
      disable_gpg_check      # Whether to disable the GPG checking of
                               signatures of
                               packages being
                               installed. Has an
                               effect only if
                               state is
                               `present' or
                               `latest'.
      disablerepo            # `Repoid' of repositories to disable for the
                               install/update
                               operation. These
                               repos will not
                               persist beyond
                               the transaction.
                               When specifying
                               multiple repos,
                               separate them
                               with a ",".
      enablerepo             # `Repoid' of repositories to enable for the
                               install/update
                               operation. These
                               repos will not
                               persist beyond
                               the transaction.
                               When specifying
                               multiple repos,
                               separate them
                               with a ",".
      exclude                # Package name(s) to exclude when state=present,
                               or latest
      list                   # Various (non-idempotent) commands for usage with
                               `/usr/bin/ansible
                               ' and `not'
                               playbooks. See
                               examples.
      name=                  # Package name, or package specifier with version,
                               like `name-1.0'.
                               When using
                               state=latest,
                               this can be '*'
                               which means run:
                               yum -y update.
                               You can also pass
                               a url or a local
                               path to a rpm
                               file (using
                               state=present).
                               To operate on
                               several packages
                               this can accept a
                               comma separated
                               list of packages
                               or (as of 2.0) a
                               list of packages.
      state                  # Whether to install (`present' or `installed',
                               `latest'), or
                               remove (`absent'
                               or `removed') a
                               package.
      update_cache           # Force updating the cache. Has an effect only if
                               state is
                               `present' or
                               `latest'.
      validate_certs         # This only applies if using a https url as the
                               source of the
                               rpm. e.g. for
                               localinstall. If
                               set to `no', the
                               SSL certificates
                               will not be
                               validated. This
                               should only set
                               to `no' used on
                               personally
                               controlled sites
                               using self-signed
                               certificates as
                               it avoids
                               verifying the
                               source site.
                               Prior to 2.1 the
                               code worked as if
                               this was set to
                               `yes'.
- name: Add and remove YUM repositories
  action: yum_repository
      async                  # If set to `yes' Yum will download packages and
                               metadata from
                               this repo in
                               parallel, if
                               possible.
      bandwidth              # Maximum available network bandwidth in
                               bytes/second.
                               Used with the
                               `throttle'
                               option. If
                               `throttle' is a
                               percentage and
                               bandwidth is `0'
                               then bandwidth
                               throttling will
                               be disabled. If
                               `throttle' is
                               expressed as a
                               data rate
                               (bytes/sec) then
                               this option is
                               ignored. Default
                               is `0' (no
                               bandwidth
                               throttling).
      baseurl                # URL to the directory where the yum repository's
                               'repodata'
                               directory lives.
                               This or the
                               `mirrorlist'
                               parameter is
                               required if
                               `state' is set to
                               `present'.
      cost                   # Relative cost of accessing this repository.
                               Useful for
                               weighing one
                               repo's packages
                               as greater/less
                               than any other.
      deltarpm_metadata_percentage   # When the relative size of deltarpm metadata vs
                               pkgs is larger
                               than this,
                               deltarpm metadata
                               is not downloaded
                               from the repo.
                               Note that you can
                               give values over
                               `100', so `200'
                               means that the
                               metadata is
                               required to be
                               half the size of
                               the packages. Use
                               `0' to turn off
                               this check, and
                               always download
                               metadata.
      deltarpm_percentage    # When the relative size of delta vs pkg is larger
                               than this, delta
                               is not used. Use
                               `0' to turn off
                               delta rpm
                               processing. Local
                               repositories
                               (with file://
                               `baseurl') have
                               delta rpms turned
                               off by default.
      description            # A human readable string describing the
                               repository. This
                               parameter is only
                               required if
                               `state' is set to
                               `present'.
      enabled                # This tells yum whether or not use this
                               repository.
      enablegroups           # Determines whether yum will allow the use of
                               package groups
                               for this
                               repository.
      exclude                # List of packages to exclude from updates or
                               installs. This
                               should be a space
                               separated list.
                               Shell globs using
                               wildcards (eg.
                               `*' and `?') are
                               allowed. The list
                               can also be a
                               regular YAML
                               array.
      failovermethod         # `roundrobin' randomly selects a URL out of the
                               list of URLs to
                               start with and
                               proceeds through
                               each of them as
                               it encounters a
                               failure
                               contacting the
                               host. `priority'
                               starts from the
                               first `baseurl'
                               listed and reads
                               through them
                               sequentially.
      file                   # File to use to save the repo in. Defaults to the
                               value of `name'.
      gpgcakey               # A URL pointing to the ASCII-armored CA key file
                               for the
                               repository.
      gpgcheck               # Tells yum whether or not it should perform a GPG
                               signature check
                               on packages.
      gpgkey                 # A URL pointing to the ASCII-armored GPG key file
                               for the
                               repository.
      group                  # name of the group that should own the
                               file/directory,
                               as would be fed
                               to `chown'
      http_caching           # Determines how upstream HTTP caches are
                               instructed to
                               handle any HTTP
                               downloads that
                               Yum does. `all'
                               means that all
                               HTTP downloads
                               should be cached.
                               `packages' means
                               that only RPM
                               package downloads
                               should be cached
                               (but not
                               repository
                               metadata
                               downloads).
                               `none' means that
                               no HTTP downloads
                               should be cached.
      include                # Include external configuration file. Both, local
                               path and URL is
                               supported.
                               Configuration
                               file will be
                               inserted at the
                               position of the
                               `include=' line.
                               Included files
                               may contain
                               further include
                               lines. Yum will
                               abort with an
                               error if an
                               inclusion loop is
                               detected.
      includepkgs            # List of packages you want to only use from a
                               repository. This
                               should be a space
                               separated list.
                               Shell globs using
                               wildcards (eg.
                               `*' and `?') are
                               allowed.
                               Substitution
                               variables (e.g.
                               `$releasever')
                               are honored here.
                               The list can also
                               be a regular YAML
                               array.
      ip_resolve             # Determines how yum resolves host names. `4' or
                               `IPv4' - resolve
                               to IPv4 addresses
                               only. `6' or
                               `IPv6' - resolve
                               to IPv6 addresses
                               only.
      keepalive              # This tells yum whether or not HTTP/1.1 keepalive
                               should be used
                               with this
                               repository. This
                               can improve
                               transfer speeds
                               by using one
                               connection when
                               downloading
                               multiple files
                               from a
                               repository.
      keepcache              # Either `1' or `0'. Determines whether or not yum
                               keeps the cache
                               of headers and
                               packages after
                               successful
                               installation.
      metadata_expire        # Time (in seconds) after which the metadata will
                               expire. Default
                               value is 6 hours.
      metadata_expire_filter   # Filter the `metadata_expire' time, allowing a
                               trade of speed
                               for accuracy if a
                               command doesn't
                               require it. Each
                               yum command can
                               specify that it
                               requires a
                               certain level of
                               timeliness
                               quality from the
                               remote repos.
                               from "I'm about
                               to
                               install/upgrade,
                               so this better be
                               current" to
                               "Anything that's
                               available is good
                               enough". `never'
                               - Nothing is
                               filtered, always
                               obey `metadata_ex
                               pire'. `read-
                               only:past' -
                               Commands that
                               only care about
                               past information
                               are filtered from
                               metadata
                               expiring. Eg.
                               `yum history'
                               info (if history
                               needs to lookup
                               anything about a
                               previous
                               transaction, then
                               by definition the
                               remote package
                               was available in
                               the past). `read-
                               only:present' -
                               Commands that are
                               balanced between
                               past and future.
                               Eg. `yum list
                               yum'. `read-
                               only:future' -
                               Commands that are
                               likely to result
                               in running other
                               commands which
                               will require the
                               latest metadata.
                               Eg. `yum check-
                               update'. Note
                               that this option
                               does not override
                               "yum clean
                               expire-cache".
      metalink               # Specifies a URL to a metalink file for the
                               repomd.xml, a
                               list of mirrors
                               for the entire
                               repository are
                               generated by
                               converting the
                               mirrors for the
                               repomd.xml file
                               to a `baseurl'.
      mirrorlist             # Specifies a URL to a file containing a list of
                               baseurls. This or
                               the `baseurl'
                               parameter is
                               required if
                               `state' is set to
                               `present'.
      mirrorlist_expire      # Time (in seconds) after which the mirrorlist
                               locally cached
                               will expire.
                               Default value is
                               6 hours.
      mode                   # mode the file or directory should be. For those
                               used to
                               `/usr/bin/chmod'
                               remember that
                               modes are
                               actually octal
                               numbers (like
                               0644). Leaving
                               off the leading
                               zero will likely
                               have unexpected
                               results. As of
                               version 1.8, the
                               mode may be
                               specified as a
                               symbolic mode
                               (for example,
                               `u+rwx' or
                               `u=rw,g=r,o=r').
      name=                  # Unique repository ID. This parameter is only
                               required if
                               `state' is set to
                               `present' or
                               `absent'.
      owner                  # name of the user that should own the
                               file/directory,
                               as would be fed
                               to `chown'
      params                 # Option used to allow the user to overwrite any
                               of the other
                               options. To
                               remove an option,
                               set the value of
                               the option to
                               `null'.
      password               # Password to use with the username for basic
                               authentication.
      priority               # Enforce ordered protection of repositories. The
                               value is an
                               integer from 1 to
                               99. This option
                               only works if the
                               YUM Priorities
                               plugin is
                               installed.
      protect                # Protect packages from updates from other
                               repositories.
      proxy                  # URL to the proxy server that yum should use. Set
                               to `_none_' to
                               disable the
                               global proxy
                               setting.
      proxy_password         # Username to use for proxy.
      proxy_username         # Password for this proxy.
      repo_gpgcheck          # This tells yum whether or not it should perform
                               a GPG signature
                               check on the
                               repodata from
                               this repository.
      reposdir               # Directory where the `.repo' files will be
                               stored.
      retries                # Set the number of times any attempt to retrieve
                               a file should
                               retry before
                               returning an
                               error. Setting
                               this to `0' makes
                               yum try forever.
      s3_enabled             # Enables support for S3 repositories. This option
                               only works if the
                               YUM S3 plugin is
                               installed.
      selevel                # level part of the SELinux file context. This is
                               the MLS/MCS
                               attribute,
                               sometimes known
                               as the `range'.
                               `_default'
                               feature works as
                               for `seuser'.
      serole                 # role part of SELinux file context, `_default'
                               feature works as
                               for `seuser'.
      setype                 # type part of SELinux file context, `_default'
                               feature works as
                               for `seuser'.
      seuser                 # user part of SELinux file context. Will default
                               to system policy,
                               if applicable. If
                               set to
                               `_default', it
                               will use the
                               `user' portion of
                               the policy if
                               available
      skip_if_unavailable    # If set to `yes' yum will continue running if
                               this repository
                               cannot be
                               contacted for any
                               reason. This
                               should be set
                               carefully as all
                               repos are
                               consulted for any
                               given command.
      ssl_check_cert_permissions   # Whether yum should check the permissions on the
                               paths for the
                               certificates on
                               the repository
                               (both remote and
                               local). If we
                               can't read any of
                               the files then
                               yum will force `s
                               kip_if_unavailabl
                               e' to be `yes'.
                               This is most
                               useful for non-
                               root processes
                               which use yum on
                               repos that have
                               client cert files
                               which are
                               readable only by
                               root.
      sslcacert              # Path to the directory containing the databases
                               of the
                               certificate
                               authorities yum
                               should use to
                               verify SSL
                               certificates.
      sslclientcert          # Path to the SSL client certificate yum should
                               use to connect to
                               repos/remote
                               sites.
      sslclientkey           # Path to the SSL client key yum should use to
                               connect to
                               repos/remote
                               sites.
      sslverify              # Defines whether yum should verify SSL
                               certificates/host
                               s at all.
      state                  # State of the repo file.
      throttle               # Enable bandwidth throttling for downloads. This
                               option can be
                               expressed as a
                               absolute data
                               rate in
                               bytes/sec. An SI
                               prefix (k, M or
                               G) may be
                               appended to the
                               bandwidth value.
      timeout                # Number of seconds to wait for a connection
                               before timing
                               out.
      ui_repoid_vars         # When a repository id is displayed, append these
                               yum variables to
                               the string if
                               they are used in
                               the
                               `baseurl'/etc.
                               Variables are
                               appended in the
                               order listed (and
                               found).
      unsafe_writes          # Normally this module uses atomic operations to
                               prevent data
                               corruption or
                               inconsistent
                               reads from the
                               target files,
                               sometimes systems
                               are configured or
                               just broken in
                               ways that prevent
                               this. One example
                               are docker
                               mounted files,
                               they cannot be
                               updated
                               atomically and
                               can only be done
                               in an unsafe
                               manner. This
                               boolean option
                               allows ansible to
                               fall back to
                               unsafe methods of
                               updating files
                               for those cases
                               in which you do
                               not have any
                               other choice. Be
                               aware that this
                               is subject to
                               race conditions
                               and can lead to
                               data corruption.
      username               # Username to use for basic authentication to a
                               repo or really
                               any url.
- name: Zabbix host groups creates/deletes
  action: zabbix_group
      host_groups=           # List of host groups to create or delete.
      http_login_password    # Basic Auth password
      http_login_user        # Basic Auth login
      login_password=        # Zabbix user password.
      login_user=            # Zabbix user name.
      server_url=            # Url of Zabbix server, with protocol (http or
                               https). `url' is
                               an alias for
                               `server_url'.
      state                  # Create or delete host group.
      timeout                # The timeout of API request(seconds).
- name: Zabbix host creates/updates/deletes
  action: zabbix_host
      force                  # Overwrite the host configuration, even if
                               already present
      host_groups            # List of host groups the host is part of.
      host_name=             # Name of the host in Zabbix. host_name is the
                               unique identifier
                               used and cannot
                               be updated using
                               this module.
      http_login_password    # Basic Auth password
      http_login_user        # Basic Auth login
      interfaces             # List of interfaces to be created for the host
                               (see example
                               below). Available
                               values are: dns,
                               ip, main, port,
                               type and useip.
                               Please review the
                               interface
                               documentation for
                               more information
                               on the supported
                               properties https:
                               //www.zabbix.com/
                               documentation/2.0
                               /manual/appendix/
                               api/hostinterface
                               /definitions#host
                               _interface
      inventory_mode         # Configure the inventory mode.
      link_templates         # List of templates linked to the host.
      login_password=        # Zabbix user password.
      login_user=            # Zabbix user name, used to authenticate against
                               the server.
      proxy                  # The name of the Zabbix Proxy to be used
      server_url=            # Url of Zabbix server, with protocol (http or
                               https).
      state                  # State of the host. On `present', it will create
                               if host does not
                               exist or update
                               the host if the
                               associated data
                               is different. On
                               `absent' will
                               remove a host if
                               it exists.
      status                 # Monitoring status of the host.
      timeout                # The timeout of API request (seconds).
- name: Zabbix host macro creates/updates/deletes
  action: zabbix_hostmacro
      host_name=             # Name of the host.
      http_login_password    # Basic Auth password
      http_login_user        # Basic Auth login
      login_password=        # Zabbix user password.
      login_user=            # Zabbix user name.
      macro_name=            # Name of the host macro.
      macro_value=           # Value of the host macro.
      server_url=            # Url of Zabbix server, with protocol (http or
                               https).
      state                  # State of the macro. On `present', it will create
                               if macro does not
                               exist or update
                               the macro if the
                               associated data
                               is different. On
                               `absent' will
                               remove a macro if
                               it exists.
      timeout                # The timeout of API request (seconds).
- name: Create Zabbix maintenance windows
  action: zabbix_maintenance
      collect_data           # Type of maintenance. With data collection, or
                               without.
      desc=                  # Short description of maintenance window.
      host_groups            # Host groups to manage maintenance window for.
                               Separate multiple
                               groups with
                               commas.
                               `host_group' is
                               an alias for
                               `host_groups'.
                               *Required* option
                               when `state' is
                               `present' and no
                               `host_names'
                               specified.
      host_names             # Hosts to manage maintenance window for. Separate
                               multiple hosts
                               with commas.
                               `host_name' is an
                               alias for
                               `host_names'.
                               *Required* option
                               when `state' is
                               `present' and no
                               `host_groups'
                               specified.
      http_login_password    # Basic Auth password
      http_login_user        # Basic Auth login
      login_password=        # Zabbix user password.
      login_user=            # Zabbix user name.
      minutes                # Length of maintenance window in minutes.
      name=                  # Unique name of maintenance window.
      server_url=            # Url of Zabbix server, with protocol (http or
                               https). `url' is
                               an alias for
                               `server_url'.
      state                  # Create or remove a maintenance window.
      timeout                # The timeout of API request (seconds).
- name: Zabbix screen creates/updates/deletes
  action: zabbix_screen
      http_login_password    # Basic Auth password
      http_login_user        # Basic Auth login
      login_password=        # Zabbix user password.
      login_user=            # Zabbix user name.
      screens=               # List of screens to be
                               created/updated/d
                               eleted(see
                               example). If the
                               screen(s) already
                               been added, the
                               screen(s) name
                               won't be updated.
                               When creating or
                               updating
                               screen(s),
                               `screen_name',
                               `host_group' are
                               required. When
                               deleting
                               screen(s), the
                               `screen_name' is
                               required. The
                               available states
                               are: `present'
                               (default) and
                               `absent'. If the
                               screen(s) already
                               exists, and the
                               state is not
                               `absent', the
                               screen(s) will
                               just be updated
                               as needed.
      server_url=            # Url of Zabbix server, with protocol (http or
                               https).
      timeout                # The timeout of API request (seconds).
- name: Manage zfs
  action: zfs
      key_value              # The `zfs' module takes key=value pairs for zfs
                               properties to be
                               set. See the
                               zfs(8) man page
                               for more
                               information.
      name=                  # File system, snapshot or volume name e.g.
                               `rpool/myfs'
      origin                 # Snapshot from which to create a clone
      state=                 # Whether to create (`present'), or remove
                               (`absent') a file
                               system, snapshot
                               or volume. All
                               parents/children
                               will be
                               created/destroyed
                               as needed to
                               reach the desired
                               state.
- name: Create, delete, retrieve, and update znodes using ZooKeeper.
  action: znode
      hosts=                 # A list of ZooKeeper servers (format
                               '[server]:[port]'
                               ).
      name=                  # The path of the znode.
      op                     # An operation to perform. Mutually exclusive with
                               state.
      recursive              # Recursively delete node and all its children.
      state                  # The state to enforce. Mutually exclusive with
                               op.
      timeout                # The amount of time to wait for a node to appear.
      value                  # The value assigned to the znode.
- name: Manage packages on SUSE and openSUSE
  action: zypper
      disable_gpg_check      # Whether to disable to GPG signature checking of
                               the package
                               signature being
                               installed. Has an
                               effect only if
                               state is
                               `present' or
                               `latest'.
      disable_recommends     # Corresponds to the `--no-recommends' option for
                               `zypper'. Default
                               behavior (`yes')
                               modifies zypper's
                               default behavior;
                               `no' does install
                               recommended
                               packages.
      force                  # Adds `--force' option to `zypper'. Allows to
                               downgrade
                               packages and
                               change vendor or
                               architecture.
      name=                  # Package name `name' or package specifier. Can
                               include a version
                               like `name=1.0',
                               `name>3.4' or
                               `name<=2.7'. If a
                               version is given,
                               `oldpackage' is
                               implied and
                               zypper is allowed
                               to update the
                               package within
                               the version range
                               given. You can
                               also pass a url
                               or a local path
                               to a rpm file.
                               When using
                               state=latest,
                               this can be '*',
                               which updates all
                               installed
                               packages.
      oldpackage             # Adds `--oldpackage' option to `zypper'. Allows
                               to downgrade
                               packages with
                               less side-effects
                               than force. This
                               is implied as
                               soon as a version
                               is specified as
                               part of the
                               package name.
      state                  # `present' will make sure the package is
                               installed.
                               `latest'  will
                               make sure the
                               latest version of
                               the package is
                               installed.
                               `absent'  will
                               make sure the
                               specified package
                               is not installed.
      type                   # The type of package to be operated on.
      update_cache           # Run the equivalent of `zypper refresh' before
                               the operation.
- name: Add and remove Zypper repositories
  action: zypper_repository
      auto_import_keys       # Automatically import the gpg signing key of the
                               new or changed
                               repository. Has
                               an effect only if
                               state is
                               `present'. Has no
                               effect on
                               existing
                               (unchanged)
                               repositories or
                               in combination
                               with `absent'.
                               Implies
                               runrefresh.
      autorefresh            # Enable autorefresh of the repository.
      description            # A description of the repository
      disable_gpg_check      # Whether to disable GPG signature checking of all
                               packages. Has an
                               effect only if
                               state is
                               `present'. Needs
                               zypper version >=
                               1.6.2.
      enabled                # Set repository to enabled (or disabled).
      name                   # A name for the repository. Not required when
                               adding repofiles.
      overwrite_multiple     # Overwrite multiple repository entries, if
                               repositories with
                               both name and URL
                               already exist.
      priority               # Set priority of repository. Packages will always
                               be installed from
                               the repository
                               with the smallest
                               priority number.
                               Needs zypper
                               version >=
                               1.12.25.
      repo                   # URI of the repository or .repo file. Required
                               when
                               state=present.
      runrefresh             # Refresh the package list of the given
                               repository. Can
                               be used with
                               repo=* to refresh
                               all repositories.
      state                  # A source string state.
